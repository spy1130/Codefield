C51 COMPILER V9.54   MAIN                                                                  02/05/2018 11:41:29 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\keil   55\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\ma
                    -in.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /****************************************************************************************
   2          实验功能：第八届省赛试题程序设计
   3          时间：2017.12.25
   4          作者：吴康
   5          *****************************************************************************************/
   6          #include <STC15F2K60S2.h>
   7          #include <onewire.h>
   8          
   9          #define uchar unsigned char
  10          #define uint unsigned int 
  11          
  12          uint count0,count1,count2;          //定时所需要的变量
  13          uchar mode;                         //模式选择变量
  14          uchar baojing;                      //闹钟报警的标志位
  15          uchar flag=0;                       //LED灯闪烁时间隔设定的标志位
  16          uchar flash=0;                        //数码管显示闪烁的标志位
  17          uchar s1=0,s2=0,s3=0,s4=0;
  18          uchar hour_n=0,min_n=0,sec_n=0;     //设定的闹钟
  19          uchar hour=23,min=59,sec=50;        //设定的初始时间
  20          uchar hour_i,min_i,sec_i;           //设定的时间
  21          uchar temp;                         //温度存储变量
  22          uchar discount;                     //数码管显示扫描变量
  23          uchar code wei_xuan[]={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};
  24          uchar code duan_xuan[]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xbf,0xff,0xc6};
  25          
  26          /****************************************************************************************
  27          函数名称：delay
  28          功能：延时函数
  29          *****************************************************************************************/
  30          void delay(uint x)
  31          {
  32   1        uint i,j;
  33   1        for(i=x;i>0;i--)
  34   1        for(j=110;j>0;j--);
  35   1      }
  36          
  37          /****************************************************************************************
  38          函数名称：allinit
  39          功能：板子初始化函数
  40          *****************************************************************************************/
  41          void allinit()
  42          {
  43   1        P2=0XA0;P0=0X00;
  44   1        P2=0X80;P0=0XFF;
  45   1        P2=0XC0;P0=0XFF;
  46   1        P2=0XE0;P0=0XFF;
  47   1      }
  48          
  49          /****************************************************************************************
  50          函数名称：key
  51          功能：按键函数
  52          *****************************************************************************************/
  53          void key()
  54          {
C51 COMPILER V9.54   MAIN                                                                  02/05/2018 11:41:29 PAGE 2   

  55   1        if(P30==0)
  56   1          {
  57   2            delay(20);
  58   2            if(P30==0)              //按键调整时间
  59   2              {
  60   3                s1=1;
  61   3                while(!P30);
  62   3                hour_i=hour;        //把此时的时间赋值给要调的变量
  63   3                min_i=min;
  64   3                sec_i=sec;
  65   3                mode++;             
  66   3                if(mode>=4) mode=0; //前三个模式用于调整时间，后三个由于闹钟时间的设定
  67   3              }
  68   2          }
  69   1          
  70   1        if(P31==0)
  71   1          {
  72   2            delay(20);
  73   2            if(P31==0)              //用于控制闹钟设定切换按键
  74   2              {
  75   3                s2=1;
  76   3                while(!P31);
  77   3                if(mode>=4) mode++;//判断此时的模式是否在后三个模式，如果不是给它调整到后三个模式
  78   3                if(mode<4)  mode=4;
  79   3                if(mode>=7) mode=0;
  80   3              }
  81   2          }
  82   1          
  83   1        if(P32==0)
  84   1          {
  85   2            delay(20);
  86   2            if(P32==0)
  87   2              {
  88   3                s3=1;
  89   3                while(!P32);        //判断在那个模式就加哪个数值
  90   3                switch(mode)
  91   3                  {
  92   4                    case 1: hour_i++;if(hour_i>=24) hour_i=0;hour = hour_i;break;
  93   4                    case 2: min_i++;if(min_i>=60) min_i=0;min = min_i;break;
  94   4                    case 3: sec_i++;if(sec_i>=60) sec_i=0;sec = sec_i;break;
  95   4                    case 4: hour_n++;if(hour_n>=24) hour_n=0;break;
  96   4                    case 5: min_n++;if(min_n>=60) min_n=0;break;
  97   4                    case 6: sec_n++;if(sec_n>=60) sec_n=0;break;
  98   4                  }
  99   3              }
 100   2              
 101   2          }
 102   1          
 103   1        if(P33==0)
 104   1          {
 105   2            delay(20);
 106   2            if(P33==0)              //判断在那个模式就减哪个数值
 107   2              {
 108   3                s4=1;
 109   3                if(mode==0) mode=7; //在按键没有松开时则模式为7，此时显示温度
 110   3                while(!P33);        //判断建松开后则又到显示时间界面
 111   3                if(mode==7) mode=0;
 112   3                switch(mode)
 113   3                  {
 114   4                    case 1: hour_i--;if(hour_i<=0) hour_i=23;hour = hour_i;break;
 115   4                    case 2: min_i--;if(min_i<=0) min_i=59;min = min_i;break;
 116   4                    case 3: sec_i--;if(sec_i<=0) sec_i=59;sec = sec_i;break;
C51 COMPILER V9.54   MAIN                                                                  02/05/2018 11:41:29 PAGE 3   

 117   4                    case 4: hour_n--;if(hour_n<=0) hour_n=23;break;
 118   4                    case 5: min_n--;if(min_n<=0) min_n=59;break;
 119   4                    case 6: sec_n--;if(sec_n<=0) sec_n=59;break;
 120   4                  }
 121   3              }
 122   2          }
 123   1      }
 124          
 125          /****************************************************************************************
 126          函数名称：xian_shi
 127          功能：显示函数
 128          *****************************************************************************************/
 129          void xian_shi(void)
 130          {
 131   1        uchar i;
 132   1        switch(i)
 133   1        {
 134   2          case 0:P0 = duan_xuan[hour/10];break;
 135   2          case 1:P0 = duan_xuan[hour%10];break;
 136   2          case 2:P0 = duan_xuan[10];break;
 137   2          case 3:P0 = duan_xuan[min/10];break;
 138   2          case 4:P0 = duan_xuan[min%10];break;
 139   2          case 5:P0 = duan_xuan[10];break;
 140   2          case 6:P0 = duan_xuan[sec/10];break;
 141   2          case 7:P0 = duan_xuan[sec%10];break;
 142   2        }
 143   1        i++;
 144   1        if(i>=8) i=0;
 145   1      }
 146          
 147          void xian_shi1(void)
 148          {
 149   1        uchar i;
 150   1        switch(i)
 151   1        {
 152   2          case 0:P0 = duan_xuan[hour_i/10] | flash;break;
 153   2          case 1:P0 = duan_xuan[hour_i%10] | flash;break;
 154   2          case 2:P0 = duan_xuan[10];break;
 155   2          case 3:P0 = duan_xuan[min/10];break;
 156   2          case 4:P0 = duan_xuan[min%10];break;
 157   2          case 5:P0 = duan_xuan[10];break;
 158   2          case 6:P0 = duan_xuan[sec/10];break;
 159   2          case 7:P0 = duan_xuan[sec%10];break;
 160   2        }
 161   1        i++;
 162   1        if(i>=8) i=0;
 163   1      }
 164          
 165          void xian_shi2(void)
 166          {
 167   1        uchar i;
 168   1        switch(i)
 169   1        {
 170   2          case 0:P0 = duan_xuan[hour/10];break;
 171   2          case 1:P0 = duan_xuan[hour%10];break;
 172   2          case 2:P0 = duan_xuan[10];break;
 173   2          case 3:P0 = duan_xuan[min_i/10] | flash;break;
 174   2          case 4:P0 = duan_xuan[min_i%10] | flash;break;
 175   2          case 5:P0 = duan_xuan[10];break;
 176   2          case 6:P0 = duan_xuan[sec/10];break;
 177   2          case 7:P0 = duan_xuan[sec%10];break;
 178   2        }
C51 COMPILER V9.54   MAIN                                                                  02/05/2018 11:41:29 PAGE 4   

 179   1        i++;
 180   1        if(i>=8) i=0;
 181   1      }
 182          
 183          void xian_shi3(void)
 184          {
 185   1        uchar i;
 186   1        switch(i)
 187   1        {
 188   2          case 0:P0 = duan_xuan[hour/10];break;
 189   2          case 1:P0 = duan_xuan[hour%10];break;
 190   2          case 2:P0 = duan_xuan[10];break;
 191   2          case 3:P0 = duan_xuan[min/10];break;
 192   2          case 4:P0 = duan_xuan[min%10];break;
 193   2          case 5:P0 = duan_xuan[10];break;
 194   2          case 6:P0 = duan_xuan[sec_i/10] | flash;break;
 195   2          case 7:P0 = duan_xuan[sec_i%10] | flash;break;
 196   2        }
 197   1        i++;
 198   1        if(i>=8) i=0;
 199   1      }
 200          
 201          void xian_shi4(void)
 202          {
 203   1        uchar i;
 204   1        switch(i)
 205   1        {
 206   2          case 0:P0 = duan_xuan[hour_n/10] | flash;break;
 207   2          case 1:P0 = duan_xuan[hour_n%10] | flash;break;
 208   2          case 2:P0 = duan_xuan[10];break;
 209   2          case 3:P0 = duan_xuan[min_n/10];break;
 210   2          case 4:P0 = duan_xuan[min_n%10];break;
 211   2          case 5:P0 = duan_xuan[10];break;
 212   2          case 6:P0 = duan_xuan[sec_n/10];break;
 213   2          case 7:P0 = duan_xuan[sec_n%10];break;
 214   2        }
 215   1        i++;
 216   1        if(i>=8) i=0;
 217   1      }
 218          
 219          void xian_shi5(void)
 220          {
 221   1        uchar i;
 222   1        switch(i)
 223   1        {
 224   2          case 0:P0 = duan_xuan[hour_n/10];break;
 225   2          case 1:P0 = duan_xuan[hour_n%10];break;
 226   2          case 2:P0 = duan_xuan[10];break;
 227   2          case 3:P0 = duan_xuan[min_n/10] | flash;break;
 228   2          case 4:P0 = duan_xuan[min_n%10] | flash;break;
 229   2          case 5:P0 = duan_xuan[10];break;
 230   2          case 6:P0 = duan_xuan[sec_n/10];break;
 231   2          case 7:P0 = duan_xuan[sec_n%10];break;
 232   2        }
 233   1        i++;
 234   1        if(i>=8) i=0;
 235   1      }
 236          
 237          void xian_shi6(void)
 238          {
 239   1        uchar i;
 240   1        switch(i)
C51 COMPILER V9.54   MAIN                                                                  02/05/2018 11:41:29 PAGE 5   

 241   1        {
 242   2          case 0:P0 = duan_xuan[hour_n/10];break;
 243   2          case 1:P0 = duan_xuan[hour_n%10];break;
 244   2          case 2:P0 = duan_xuan[10];break;
 245   2          case 3:P0 = duan_xuan[min_n/10];break;
 246   2          case 4:P0 = duan_xuan[min_n%10];break;
 247   2          case 5:P0 = duan_xuan[10];break;
 248   2          case 6:P0 = duan_xuan[sec_n/10] | flash;break;
 249   2          case 7:P0 = duan_xuan[sec_n%10] | flash;break;
 250   2        }
 251   1        i++;
 252   1        if(i>=8) i=0;
 253   1      }
 254          
 255          void xian_shi7(void)
 256          {
 257   1        uchar i;
 258   1        switch(i)
 259   1        {
 260   2          case 0:P0 = duan_xuan[11];break;
 261   2          case 1:P0 = duan_xuan[11];break;
 262   2          case 2:P0 = duan_xuan[11];break;
 263   2          case 3:P0 = duan_xuan[11];break;
 264   2          case 4:P0 = duan_xuan[11];break;
 265   2          case 5:P0 = duan_xuan[temp/10];break;
 266   2          case 6:P0 = duan_xuan[temp%10];break;
 267   2          case 7:P0 = duan_xuan[12];break;
 268   2        }
 269   1        i++;
 270   1        if(i>=8) i=0;
 271   1      }
 272          /****************************************************************************************
 273          函数名称：qie_huan
 274          功能：显示切换函数
 275          *****************************************************************************************/
 276          void qie_huan(void)
 277          {
 278   1        switch(mode)
 279   1        {
 280   2          case 0: xian_shi();break; 
 281   2          case 1: xian_shi1();break;
 282   2          case 2: xian_shi2();break;
 283   2          case 3: xian_shi3();break;
 284   2          case 4: xian_shi4();break;
 285   2          case 5: xian_shi5();break;
 286   2          case 6: xian_shi6();break;
 287   2          case 7: xian_shi7();break;
 288   2        }
 289   1      }
 290          
 291          /****************************************************************************************
 292          函数名称：display
 293          功能：显示扫描函数
 294          *****************************************************************************************/
 295          void display(void)
 296          {
 297   1        P2 = 0xc0;
 298   1        P0 = wei_xuan[discount];
 299   1        P2 = 0x00;
 300   1        P2 = 0xe0;
 301   1        qie_huan();
 302   1        P2 = 0x00;
C51 COMPILER V9.54   MAIN                                                                  02/05/2018 11:41:29 PAGE 6   

 303   1      
 304   1        if(++discount>=8) discount=0;
 305   1      }
 306          
 307          /****************************************************************************************
 308          函数名称：Timer0Init
 309          功能：定时器0初始化函数
 310          *****************************************************************************************/
 311          void Timer0Init(void)   //2毫秒@11.0592MHz
 312          {
 313   1        AUXR |= 0x80;         //定时器时钟1T模式
 314   1        TMOD &= 0xF0;         //设置定时器模式
 315   1        TL0 = 0x9A;           //设置定时初值
 316   1        TH0 = 0xA9;           //设置定时初值
 317   1        TF0 = 0;              //清除TF0标志
 318   1        TR0 = 1;              //定时器0开始计时
 319   1        EA=1;
 320   1        ET0=1;
 321   1      }
 322          
 323          /****************************************************************************************
 324          函数名称：LED
 325          功能：LED亮灭控制函数函数
 326          *****************************************************************************************/
 327          void led(uchar liang)
 328          {
 329   1        P2=P2&0x1f;
 330   1        P2=0x80;
 331   1        P0=liang;
 332   1        P2=P2&0x1f;
 333   1      }
 334          
 335          /****************************************************************************************
 336          函数名称：main
 337          功能：主函数
 338          *****************************************************************************************/
 339          void main()
 340          {
 341   1        allinit();                  //板子整体初始化
 342   1        Timer0Init();               //定时器0初始化
 343   1        while(1)
 344   1        {
 345   2          temp=Read_Temperature();  //读取温度
 346   2          key();                    //按键扫描
 347   2          if((hour==hour_n)&&(min==min_n)&&(sec==sec_n)) baojing=1;//闹钟报警判断
 348   2        } 
 349   1      }
 350          
 351          /****************************************************************************************
 352          函数名称：Timer0
 353          功能：定时器0的中断服务函数
 354          *****************************************************************************************/
 355          void Timer0(void) interrupt 1
 356          {
 357   1        display();
 358   1        count0++;               //用于控制整体时钟变化
 359   1        count1++;               //用于控制LED灯闪烁
 360   1        if(baojing==1)          //让灯闪烁时间间隔位0.2秒
 361   1          {
 362   2            if(count1>=100) 
 363   2              {
 364   3                  count1=0;
C51 COMPILER V9.54   MAIN                                                                  02/05/2018 11:41:29 PAGE 7   

 365   3                if(flag==0)
 366   3                  {
 367   4                    flag=1;
 368   4                    led(0xff);
 369   4                  }
 370   3                else 
 371   3                  {
 372   4                    flag=0;
 373   4                    led(0xfe);
 374   4                  }
 375   3              }
 376   2              if((s1==1)||(s2==1)||(s3==1)||(s4==1))
 377   2              {
 378   3                s1=0;
 379   3                s2=0;
 380   3                s3=0;
 381   3                s4=0;
 382   3                led(0xff);
 383   3              }
 384   2          }
 385   1        else
 386   1          { 
 387   2            P2=0x80;
 388   2            P0=0xff;
 389   2          } 
 390   1        if(count0>=500)
 391   1          {
 392   2              count0=0;
 393   2              if(baojing==1) count2++;    //限定灯就闪烁5秒
 394   2              if(count2>5)
 395   2                {
 396   3                  count2=0;
 397   3                  baojing=0;
 398   3                } 
 399   2              sec++;
 400   2              flash=~flash;               //在设定时间的时候让设置的数字以间隔为一秒闪烁
 401   2              if(sec>=60)
 402   2                {
 403   3                  sec=0;
 404   3                  min++;
 405   3                  if(min>=60)
 406   3                    {
 407   4                      min=0;
 408   4                      hour++;
 409   4                      if(hour>=24) hour=0;
 410   4                    }
 411   3                }
 412   2            }
 413   1      }
 414          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1697    ----
   CONSTANT SIZE    =     21    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     25       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
