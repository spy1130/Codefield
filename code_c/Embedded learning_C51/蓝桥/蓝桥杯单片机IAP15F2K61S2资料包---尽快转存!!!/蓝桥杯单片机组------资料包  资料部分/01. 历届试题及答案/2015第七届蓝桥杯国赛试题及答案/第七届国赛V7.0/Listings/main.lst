C51 COMPILER V9.54   MAIN                                                                  12/26/2017 07:53:09 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\keil   55\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\ma
                    -in.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /******************************************************************************************
   2          实验功能：第七届国赛试题程序设计
   3          时间：2017.12.28
   4          作者：吴康
   5          *******************************************************************************************/
   6          #include <STC15F2K60S2.H>
   7          #include <delay.h>
   8          #include <iic.h>
   9          #include <ds1302.h>
  10          
  11          #define uchar unsigned char  
  12          #define uint unsigned int 
  13          
  14          uchar code tab[12]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xbf,0xff};
  15          uchar count_1=0,count_2=0,count_3=0,count_4=0,count_5=0;//定时中间变量
  16          uchar dsbuff[8]={1,2,3,4,5,6,7,8};                      //初始化界面显示
  17          uchar dma_liang=0,dmi_liang=0;                          //控制设置电压上下限时数码管闪烁标志位
  18          uchar p_qiehuan=1,c_qiehuan=1;                          //频率，周期切换显示标志位,切换显示事件，以及发生事件是的时间
  19          uchar shi,fen,miao;                                     //存储电压突变时的时间
  20          uchar shizhong_flag=0;                                  //时钟显示标志位
  21          uchar dianya_flag=0;                                    //电压显示标志位
  22          uchar pinlv_flag=0;                                     //频率显示标志位
  23          uchar gongneng_flag=0;                                  //功能切换按键标志位
  24          uchar jia_flag=0,jian_flag=0;                           //加减按键标志位
  25          uchar chaxun_flag=0;                                    //查询按键标志位
  26          uchar discount=0;                                       //数码管扫描显示变量
  27          uchar last_max=0,last_min=0;                            //电压比较时的标志位
  28          uchar s_keep,f_keep,m_keep;                             //存储当时的时间
  29          uchar thing;                                            //事件显示变量
  30          uchar hour=0,minute=0,second=0;                         //标志位
  31          uchar moshi_flag=0;                                     //模式选择标志位
  32          uchar s_liang=0,f_liang=0,m_liang=0;                    //时分秒闪烁标志位
  33          uchar dianya_max=20,dianya_min=10;                      //初始化电压上限下限
  34          uchar vol_max=0,vol_min=0;                              //设置电压上限下限变量
  35          uchar jieshu_flag=0;                                    //开始测频率时的标志位
  36          uint zhouqi=0,fre=0,jishu=0;                            //周期，频率
  37          uint voltage=0;                                         //采集的电压
  38          uint count=0;                                           //计数
  39          uint kk=0;                                              //计数
  40          
  41          /******************************************************************************************
  42                                                函数声明
  43          *******************************************************************************************/
  44          void display();
  45          void time_chuli();
  46          void chaxun_chuli();
  47          void keyscan();
  48          void Timer0Init();
  49          void Timer1Init();
  50          void Timer2Init();
  51          void dianya_chuli();
  52          void time_shan();
  53          void dianya_shan();
  54          void pinlv_chuli();
C51 COMPILER V9.54   MAIN                                                                  12/26/2017 07:53:09 PAGE 2   

  55          
  56          /******************************************************************************************
  57          函数名称：allinit
  58          功能：板子初始化
  59          *******************************************************************************************/
  60          void allinit()
  61          {
  62   1        P2=0x80;P0=0xff;
  63   1        P2=0xa0;P0=0x00;
  64   1        P2=0xc0;P0=0xff;
  65   1        P2=0xe0;P0=0xff;
  66   1      }
  67          
  68          /******************************************************************************************
  69          函数名称：main
  70          功能：主函数
  71          *******************************************************************************************/
  72          void main()
  73          {
  74   1        allinit();                  //板子整体初始化
  75   1        Timer0Init();               //定时器0初始化
  76   1        Timer1Init();               //定时器1初始化
  77   1        Timer2Init();               //定时器2初始化
  78   1        EA=1;                       //打开总中断
  79   1        ET1=1;                      //打开定时器1的中断
  80   1        IE2|=0x04;                  //打开定时器2的中断
  81   1        dswrite();                  //时钟初始化
  82   1        dianya_max=iicread(0x01);   //读取地址0x01里的数据
  83   1        Delay2ms();
  84   1        dianya_min=iicread(0x02);   //读取地址0x02里的数据
  85   1        Delay2ms();
  86   1        while(1)
  87   1        {
  88   2          keyscan();                //按键处理函数
  89   2          dsread();                 //读取时间
  90   2          if(shizhong_flag==1)      
  91   2            {
  92   3              time_chuli();         //时间处理函数
  93   3            }
  94   2          if(dianya_flag==1)
  95   2            {
  96   3              kk++;
  97   3              if(kk==1000)          //使电位器AD不是时刻采样 抑制其跳动
  98   3                {
  99   4                  kk=0;
 100   4                  voltage=adread(0x03)*19.6;//读取电位器的电压
 101   4                }
 102   3              dianya_chuli();         //电压处理函数
 103   3            }
 104   2          if(pinlv_flag==1)
 105   2            {   
 106   3              pinlv_chuli();          //频率处理函数
 107   3            }
 108   2          if(chaxun_flag==1)
 109   2            {
 110   3              chaxun_chuli();         //查询处理函数
 111   3            }
 112   2        }
 113   1      }
 114          
 115          /******************************************************************************************
 116          函数名称：chaxun_chuli
C51 COMPILER V9.54   MAIN                                                                  12/26/2017 07:53:09 PAGE 3   

 117          功能：查询按键处理函数
 118          *******************************************************************************************/
 119          void chaxun_chuli()
 120          {
 121   1        if(c_qiehuan==1)
 122   1          {
 123   2            dsbuff[0]=11;
 124   2            dsbuff[1]=11;
 125   2            dsbuff[2]=11;
 126   2            dsbuff[3]=11;
 127   2            dsbuff[4]=11;
 128   2            dsbuff[5]=11;
 129   2            dsbuff[6]=thing/10;
 130   2            dsbuff[7]=thing%10; 
 131   2          }
 132   1        else 
 133   1          {
 134   2            dsbuff[0]=s_keep/10;
 135   2            dsbuff[1]=s_keep%10;
 136   2            dsbuff[2]=10;
 137   2            dsbuff[3]=f_keep/10;
 138   2            dsbuff[4]=f_keep%10;
 139   2            dsbuff[5]=10;
 140   2            dsbuff[6]=m_keep/10;
 141   2            dsbuff[7]=m_keep%10;
 142   2          } 
 143   1      }
 144          
 145          /******************************************************************************************
 146          函数名称：pinlv_chuli
 147          功能：频率计算处理函数
 148          *******************************************************************************************/
 149          void pinlv_chuli()
 150          {
 151   1        if(jieshu_flag==1)            //当按键s5按下时开始计算频率
 152   1          {
 153   2            jieshu_flag=0;
 154   2            count=TH0*256+TL0;
 155   2            TH0=TL0=0;                //需要软件清零
 156   2          }
 157   1        if(count>0)
 158   1        zhouqi=count*100;             //计算周期
 159   1        fre=1000000/zhouqi;           //计算频率
 160   1        if(p_qiehuan==1)              //判断按键s4是否按下按下则进行频率周期切换显示
 161   1          {
 162   2            dsbuff[0]=10;
 163   2            dsbuff[1]=2;
 164   2            dsbuff[2]=10;
 165   2            dsbuff[3]=fre/10000;
 166   2            dsbuff[4]=fre/10000%1000;
 167   2            dsbuff[5]=fre%1000/100;
 168   2            dsbuff[6]=fre%100/10;
 169   2            dsbuff[7]=fre%10; 
 170   2          }
 171   1        else 
 172   1          {
 173   2            dsbuff[0]=10;
 174   2            dsbuff[1]=2;
 175   2            dsbuff[2]=10;
 176   2            dsbuff[3]=zhouqi/10000;
 177   2            dsbuff[4]=zhouqi/10000%1000;
 178   2            dsbuff[5]=zhouqi%1000/100;
C51 COMPILER V9.54   MAIN                                                                  12/26/2017 07:53:09 PAGE 4   

 179   2            dsbuff[6]=zhouqi%100/10;
 180   2            dsbuff[7]=zhouqi%10;
 181   2          }
 182   1      }
 183          
 184          /******************************************************************************************
 185          函数名称：dianya_chuli
 186          功能：电压计算处理函数
 187          *******************************************************************************************/
 188          void dianya_chuli()
 189          {
 190   1        if(gongneng_flag==0)                      //当s4按键没有按下时则显示此时的电压
 191   1          {
 192   2            dsbuff[0]=10;
 193   2            dsbuff[1]=1;
 194   2            dsbuff[2]=10;
 195   2            dsbuff[3]=11;
 196   2            dsbuff[4]=voltage/1000;
 197   2            dsbuff[5]=voltage%1000/100;
 198   2            dsbuff[6]=voltage%100/10;
 199   2            dsbuff[7]=voltage%10;
 200   2          } 
 201   1        else                                      //若按键s4按下了，判断在那个模式下
 202   1          {
 203   2            switch(moshi_flag)
 204   2              {
 205   3                case 1:vol_max=1; vol_min=0;break;//在设置上限模式下
 206   3                case 2:vol_max=0; vol_min=1;break;//在设置下限模式下
 207   3                case 3:moshi_flag=1;break;        //回到原来电压显示界面
 208   3              }
 209   2            if(jia_flag==1)                       //若按键s11是按下
 210   2              {
 211   3                  if(vol_max==1)                  //在设置上限模式，进行加
 212   3                    {
 213   4                      dianya_max+=5;
 214   4                      jia_flag=0;
 215   4                    }
 216   3                  if(vol_min==1)                  //在设置下限模式，进行加
 217   3                    {
 218   4                      dianya_min+=5;
 219   4                      jia_flag=0;
 220   4                    } 
 221   3               }
 222   2             if(jian_flag==1)                     //若按键s10是按下
 223   2               {
 224   3                  if(vol_max==1)                  //在设置上限模式，进行减
 225   3                    {
 226   4                      dianya_max-=5;
 227   4                      jian_flag=0;
 228   4                    }
 229   3                  if(vol_min==1)                  //在设置下限模式，进行减
 230   3                    {
 231   4                      dianya_min-=5;
 232   4                      jian_flag=0;
 233   4                    } 
 234   3             }
 235   2            
 236   2          } 
 237   1        if((voltage>(dianya_max*100))&&(last_max==0))//进行比较
 238   1           {
 239   2              s_keep=shijian[2];
 240   2              f_keep=shijian[1];
C51 COMPILER V9.54   MAIN                                                                  12/26/2017 07:53:09 PAGE 5   

 241   2              m_keep=shijian[0];
 242   2              last_max=1;
 243   2              last_min=0;
 244   2              iicwrite(0x03,1);                     //往地址里写1
 245   2              Delay2ms();
 246   2              iicwrite(0x04,s_keep);                //将刚刚的秒时间保存在地址0x04里
 247   2              Delay2ms();
 248   2              iicwrite(0x05,f_keep);                //将刚刚的分时间保存在地址0x05里
 249   2              Delay2ms();
 250   2              iicwrite(0x06,m_keep);                //将刚刚的时时间保存在地址0x06里
 251   2           }
 252   1        else if((voltage<(dianya_min*100))&&(last_min==0))//进行比较
 253   1           {
 254   2              s_keep=shijian[2];
 255   2              f_keep=shijian[1];
 256   2              m_keep=shijian[0];
 257   2              last_max=0;
 258   2              last_min=1;
 259   2              iicwrite(0x03,0);                     //往地址里写1
 260   2              Delay2ms();
 261   2              iicwrite(0x04,s_keep);                //将刚刚的秒时间保存在地址0x04里
 262   2              Delay2ms();
 263   2              iicwrite(0x05,f_keep);                //将刚刚的分时间保存在地址0x05里
 264   2              Delay2ms();
 265   2              iicwrite(0x06,m_keep);                //将刚刚的时时间保存在地址0x06里
 266   2           }
 267   1      }
 268          
 269          /******************************************************************************************
 270          函数名称：keyscan
 271          功能：按键处理函数
 272          *******************************************************************************************/
 273          void keyscan()
 274          {
 275   1        uchar temp;
 276   1        P3=0x7f;P44=0;P42=1;
 277   1        temp=P3;
 278   1        temp=P3&0x0f;
 279   1        if(temp!=0x0f)
 280   1          {
 281   2            Delay5ms();
 282   2            if(temp!=0x0f)
 283   2              {
 284   3                temp=P3;
 285   3                temp=P3&0x0f;
 286   3                switch(temp)
 287   3                  {
 288   4                    case 0x0e: //时钟显示按键
 289   4                      if(gongneng_flag==1) gongneng_flag=0; 
 290   4                      shizhong_flag=1;
 291   4                      moshi_flag=0;
 292   4                      dianya_flag=0;
 293   4                      pinlv_flag=0;
 294   4                      chaxun_flag=0;
 295   4                    break;
 296   4                    case 0x0d://电压显示按键
 297   4                      if(gongneng_flag==1)
 298   4                        {
 299   5                          gongneng_flag=0;
 300   5                          iicwrite(0x01,dianya_max);//将设置的电压上限保存在0x01地址里
 301   5                          Delay2ms();
 302   5                          iicwrite(0x02,dianya_min);//将设置的电压下限保存在0x02地址里
C51 COMPILER V9.54   MAIN                                                                  12/26/2017 07:53:09 PAGE 6   

 303   5                        }
 304   4                      dianya_flag=1;
 305   4                      shizhong_flag=0;
 306   4                      pinlv_flag=0;
 307   4                      moshi_flag=0;
 308   4                      chaxun_flag=0;
 309   4                    break;
 310   4                    case 0x0b://频率显示按键
 311   4                      pinlv_flag=1;
 312   4                      shizhong_flag=0;
 313   4                      dianya_flag=0;
 314   4                      chaxun_flag=0;
 315   4                      TH0=TL0=0;
 316   4                    break;
 317   4                    case 0x07://功能按键切换
 318   4                      if((pinlv_flag!=1)&&(chaxun_flag!=1))
 319   4                        {
 320   5                          gongneng_flag=1;
 321   5                          moshi_flag++;
 322   5                        }
 323   4                      else if((pinlv_flag==1)&&(chaxun_flag==0))
 324   4                        {
 325   5                          if(p_qiehuan==1) p_qiehuan=0;
 326   5                          else p_qiehuan=1;
 327   5                        } 
 328   4                      else if((pinlv_flag==0)&&(chaxun_flag==1))
 329   4                        {
 330   5                          if(c_qiehuan==1) c_qiehuan=0;
 331   5                          else c_qiehuan=1;
 332   5                        }
 333   4                    break;
 334   4                  } 
 335   3                while(P3!=0x7f);
 336   3              }
 337   2          }
 338   1        
 339   1        P3=0xbf;P44=1;P42=0;
 340   1        temp=P3;
 341   1        temp=P3&0x0f;
 342   1        if(temp!=0x0f)
 343   1          {
 344   2            Delay5ms();
 345   2            if(temp!=0x0f)
 346   2              {
 347   3                temp=P3;
 348   3                temp=P3&0x0f;
 349   3                switch(temp)
 350   3                  {
 351   4                    case 0x0e: jia_flag=1;  break;//按键加
 352   4                    case 0x0d: jian_flag=1; break;//按键减
 353   4                    case 0x0b:                    //查询按键
 354   4                      chaxun_flag=1;
 355   4                      shizhong_flag=0;
 356   4                      dianya_flag=0;
 357   4                      pinlv_flag=0;
 358   4                      thing=iicread(0x03);
 359   4                      Delay2ms();
 360   4                      shi=iicread(0x04);
 361   4                      Delay2ms();
 362   4                      fen=iicread(0x05);
 363   4                      Delay2ms();
 364   4                      miao=iicread(0x06);
C51 COMPILER V9.54   MAIN                                                                  12/26/2017 07:53:09 PAGE 7   

 365   4                    break;
 366   4                    case 0x07: break;
 367   4                  }
 368   3              }
 369   2            while(P3!=0xbf);
 370   2          }
 371   1      
 372   1      }
 373          
 374          /******************************************************************************************
 375          函数名称：time1
 376          功能：定时器1的中断服务函数
 377          *******************************************************************************************/
 378          void time1() interrupt 3
 379          {
 380   1        if((shizhong_flag==1)&&(gongneng_flag==1))//设置标志位在设置时间时，数码管以一秒间隔再跳动
 381   1          {
 382   2            time_shan();
 383   2          }
 384   1        else if((dianya_flag==1)&&(gongneng_flag==1))//设置标志位在设置电压时，数码管以一秒间隔再跳动
 385   1          {
 386   2            dianya_shan();
 387   2          }
 388   1        
 389   1      }
 390          
 391          /******************************************************************************************
 392          函数名称：time2
 393          功能：定时器2的中断服务函数
 394          *******************************************************************************************/
 395          void time2() interrupt 12
 396          {
 397   1        uchar start;
 398   1        display();
 399   1        if(pinlv_flag==1)//开始测频率的标志位
 400   1        {
 401   2          jishu++;
 402   2          if(jishu==495)
 403   2          {
 404   3            TR0=1;
 405   3            start=1;
 406   3          }
 407   2          if((start==1)&&(jishu==500))
 408   2            {
 409   3              TR0=0;
 410   3              start=0;
 411   3              jieshu_flag=1;
 412   3              jishu=0;
 413   3            }
 414   2        }
 415   1      }
 416          
 417          /******************************************************************************************
 418          函数名称：dianya_shan
 419          功能：设置电压上下限时闪烁函数
 420          *******************************************************************************************/
 421          void dianya_shan()
 422          {
 423   1        if(vol_max==1)
 424   1          {
 425   2            count_4++;
 426   2            if(count_4==200)
C51 COMPILER V9.54   MAIN                                                                  12/26/2017 07:53:09 PAGE 8   

 427   2              {
 428   3                count_4=0;
 429   3                if(dma_liang==0)
 430   3                  {
 431   4                    dma_liang=1;
 432   4                    dsbuff[0]=11;
 433   4                    dsbuff[1]=11;
 434   4                    dsbuff[2]=0;
 435   4                    dsbuff[3]=0;
 436   4                    dsbuff[4]=dianya_min/10;
 437   4                    dsbuff[5]=dianya_min%10;
 438   4                    dsbuff[6]=0;
 439   4                    dsbuff[7]=0;
 440   4                  }
 441   3                else 
 442   3                  {
 443   4                    dma_liang=0;
 444   4                    dsbuff[0]=dianya_max/10;
 445   4                    dsbuff[1]=dianya_max%10;
 446   4                    dsbuff[2]=0;
 447   4                    dsbuff[3]=0;
 448   4                    dsbuff[4]=dianya_min/10;
 449   4                    dsbuff[5]=dianya_min%10;
 450   4                    dsbuff[6]=0;
 451   4                    dsbuff[7]=0;
 452   4                  }
 453   3              }
 454   2          }
 455   1        if(vol_min==1)
 456   1          {
 457   2            count_5++;
 458   2            if(count_5==200)
 459   2              {
 460   3                count_5=0;
 461   3                if(dmi_liang==0)
 462   3                  {
 463   4                    dmi_liang=1;
 464   4                    dsbuff[0]=dianya_max/10;
 465   4                    dsbuff[1]=dianya_max%10;
 466   4                    dsbuff[2]=0;dsbuff[3]=0;
 467   4                    dsbuff[4]=11;
 468   4                    dsbuff[5]=11;
 469   4                    dsbuff[6]=0;
 470   4                    dsbuff[7]=0;
 471   4                  }
 472   3                else 
 473   3                  {
 474   4                    dmi_liang=0;
 475   4                    dsbuff[0]=dianya_max/10;
 476   4                    dsbuff[1]=dianya_max%10;
 477   4                    dsbuff[2]=0;
 478   4                    dsbuff[3]=0;
 479   4                    dsbuff[4]=dianya_min/10;
 480   4                    dsbuff[5]=dianya_min%10;
 481   4                    dsbuff[6]=0;
 482   4                    dsbuff[7]=0;
 483   4                  }
 484   3              }
 485   2          }
 486   1      }
 487          
 488          /******************************************************************************************
C51 COMPILER V9.54   MAIN                                                                  12/26/2017 07:53:09 PAGE 9   

 489          函数名称：display
 490          功能：显示处理函数
 491          *******************************************************************************************/
 492          void display()
 493          {
 494   1        P2=0xef;
 495   1        P0=0xff;
 496   1        P2=0x1f;
 497   1      
 498   1        P2=0xc0;
 499   1        P0=1<<discount;
 500   1        P2=0x1f;
 501   1      
 502   1        P2=0xef;
 503   1        P0=tab[dsbuff[discount]];
 504   1        P2=0x1f;
 505   1      
 506   1        if(++discount == 8)
 507   1         discount = 0;
 508   1      }
 509          
 510          /******************************************************************************************
 511          函数名称：Timer0Init
 512          功能：定时器0初始化函数
 513          *******************************************************************************************/
 514          void Timer0Init(void)   //2微秒@11.0592MHz
 515          {
 516   1        AUXR|=0x80;         //定时器时钟1T模式
 517   1        TMOD&=0xF0;         //设置定时器模式
 518   1        TMOD|=0x04;
 519   1        TL0=0x00;           //设置定时初值
 520   1        TH0=0x00;           //设置定时初值
 521   1        TF0=0;              //清除TF0标志
 522   1      }
 523          
 524          /******************************************************************************************
 525          函数名称：Timer1Init
 526          功能：定时器1初始化函数
 527          *******************************************************************************************/
 528          void Timer1Init(void)   //5毫秒@11.0592MHz
 529          {
 530   1        AUXR|=0x40;         //定时器时钟1T模式
 531   1        TMOD&=0x0F;         //设置定时器模式
 532   1        TL1=0x00;           //设置定时初值
 533   1        TH1=0x28;           //设置定时初值
 534   1        TF1=0;              //清除TF1标志
 535   1        TR1=1;              //定时器1开始计时
 536   1      }
 537          
 538          /******************************************************************************************
 539          函数名称：Timer2Init
 540          功能：定时器2初始化函数
 541          *******************************************************************************************/
 542          void Timer2Init(void)   //2毫秒@11.0592MHz
 543          {
 544   1        AUXR|=0x04;         //定时器时钟1T模式
 545   1        T2L=0x9A;           //设置定时初值
 546   1        T2H=0xA9;           //设置定时初值
 547   1        AUXR|=0x10;         //定时器2开始计时
 548   1      }
 549          
 550          /******************************************************************************************
C51 COMPILER V9.54   MAIN                                                                  12/26/2017 07:53:09 PAGE 10  

 551          函数名称：time_chuli
 552          功能：时间处理函数
 553          *******************************************************************************************/
 554          void time_chuli()
 555          {
 556   1        if(gongneng_flag==0)
 557   1            {
 558   2              dsbuff[0]=shijian[2]/10;
 559   2              dsbuff[1]=shijian[2]%10;
 560   2              dsbuff[2]=10;
 561   2              dsbuff[3]=shijian[1]/10;
 562   2              dsbuff[4]=shijian[1]%10;
 563   2              dsbuff[5]=10;
 564   2              dsbuff[6]=shijian[0]/10;
 565   2              dsbuff[7]=shijian[0]%10;
 566   2            }
 567   1        else 
 568   1            {
 569   2              switch(moshi_flag)
 570   2                {
 571   3                  case 1:hour=1;minute=0;second=0;break;
 572   3                  case 2:minute=1;hour=0;second=0;break;
 573   3                  case 3:second=1;hour=0;minute=0;break;
 574   3                  case 4:moshi_flag=1;break;
 575   3                }
 576   2                if(hour==1)
 577   2                  {
 578   3                    if(jia_flag==1)
 579   3                      {
 580   4                        if(shijian[2]<=22)
 581   4                          {
 582   5                            shijian[2]=shijian[2]+1;
 583   5                          }
 584   4                        jia_flag=0;
 585   4                        dswrite();
 586   4                      }
 587   3                    if(jian_flag==1)
 588   3                      {
 589   4                        if(shijian[2]>=1)
 590   4                          {
 591   5                            shijian[2]-=1;
 592   5                          }
 593   4                        jian_flag=0;
 594   4                        dswrite();
 595   4                      } 
 596   3                  }
 597   2                else if(minute==1)
 598   2                  {
 599   3                    if(jia_flag==1)
 600   3                      {
 601   4                        if(shijian[1]<=58)
 602   4                          shijian[1]+=1;
 603   4                        jia_flag=0;
 604   4                        dswrite();
 605   4                      }
 606   3                    if(jian_flag==1)
 607   3                      {
 608   4                        if(shijian[1]>=1)
 609   4                        shijian[1]-=1;
 610   4                        jian_flag=0;
 611   4                        dswrite();
 612   4                      } 
C51 COMPILER V9.54   MAIN                                                                  12/26/2017 07:53:09 PAGE 11  

 613   3                  }
 614   2                else if(second==1)
 615   2                  {
 616   3                    if(jia_flag==1)
 617   3                      {
 618   4                        if(shijian[0]<=58)
 619   4                        shijian[0]+=1;
 620   4                        jia_flag=0;
 621   4                        dswrite();
 622   4                      }
 623   3                    if(jian_flag==1)
 624   3                      {
 625   4                        if(shijian[0]>=1)
 626   4                        shijian[0]-=1;
 627   4                        jian_flag=0;
 628   4                        dswrite();
 629   4                      }
 630   3                  }
 631   2            } 
 632   1      }
 633          
 634          /******************************************************************************************
 635          函数名称：time_shan
 636          功能：设置时间时闪烁函数
 637          *******************************************************************************************/
 638          void time_shan()
 639          {
 640   1          if(hour==1)
 641   1            {
 642   2              count_1++;
 643   2              if(count_1==200)
 644   2                {
 645   3                  count_1=0; 
 646   3                  if(s_liang==0)
 647   3                    {
 648   4                      s_liang=1;
 649   4                      dsbuff[0]=11;
 650   4                      dsbuff[1]=11;
 651   4                      dsbuff[2]=10;
 652   4                      dsbuff[3]=shijian[1]/10;
 653   4                      dsbuff[4]=shijian[1]%10;
 654   4                      dsbuff[5]=10;
 655   4                      dsbuff[6]=shijian[0]/10;
 656   4                      dsbuff[7]=shijian[0]%10;    
 657   4                    }
 658   3                  else 
 659   3                    {
 660   4                      s_liang=0; 
 661   4                      dsbuff[0]=shijian[2]/10;
 662   4                      dsbuff[1]=shijian[2]%10;
 663   4                      dsbuff[2]=10;
 664   4                      dsbuff[3]=shijian[1]/10;
 665   4                      dsbuff[4]=shijian[1]%10;
 666   4                      dsbuff[5]=10;
 667   4                      dsbuff[6]=shijian[0]/10;
 668   4                      dsbuff[7]=shijian[0]%10;
 669   4                    }
 670   3                }
 671   2            }
 672   1          else if(minute==1)
 673   1            {
 674   2              count_2++;
C51 COMPILER V9.54   MAIN                                                                  12/26/2017 07:53:09 PAGE 12  

 675   2              if(count_2==200)
 676   2                {
 677   3                  count_2=0;
 678   3                  if(f_liang==0)
 679   3                    {
 680   4                      f_liang=1;
 681   4                      dsbuff[0]=shijian[2]/10;
 682   4                      dsbuff[1]=shijian[2]%10;
 683   4                      dsbuff[2]=10;
 684   4                      dsbuff[3]=11;
 685   4                      dsbuff[4]=11;
 686   4                      dsbuff[5]=10;
 687   4                      dsbuff[6]=shijian[0]/10;
 688   4                      dsbuff[7]=shijian[0]%10;    
 689   4                    }
 690   3                  else 
 691   3                    {
 692   4                      f_liang=0;
 693   4                      dsbuff[0]=shijian[2]/10;
 694   4                      dsbuff[1]=shijian[2]%10;
 695   4                      dsbuff[2]=10;
 696   4                      dsbuff[3]=shijian[1]/10;
 697   4                      dsbuff[4]=shijian[1]%10;
 698   4                      dsbuff[5]=10;
 699   4                      dsbuff[6]=shijian[0]/10;
 700   4                      dsbuff[7]=shijian[0]%10;
 701   4                    }
 702   3                }
 703   2            }
 704   1          else if(second==1)
 705   1            {
 706   2              count_3++;
 707   2              if(count_3==200)
 708   2                {
 709   3                  count_3=0;
 710   3                  if(m_liang==0)
 711   3                    {
 712   4                      m_liang=1;
 713   4                      dsbuff[0]=shijian[2]/10;
 714   4                      dsbuff[1]=shijian[2]%10;
 715   4                      dsbuff[2]=10;
 716   4                      dsbuff[3]=shijian[1]/10;
 717   4                      dsbuff[4]=shijian[1]%10;
 718   4                      dsbuff[5]=10;
 719   4                      dsbuff[6]=11;
 720   4                      dsbuff[7]=11;   
 721   4                    }
 722   3                  else 
 723   3                    {
 724   4                      m_liang=0;
 725   4                      dsbuff[0]=shijian[2]/10;
 726   4                      dsbuff[1]=shijian[2]%10;
 727   4                      dsbuff[2]=10;
 728   4                      dsbuff[3]=shijian[1]/10;
 729   4                      dsbuff[4]=shijian[1]%10;
 730   4                      dsbuff[5]=10;
 731   4                      dsbuff[6]=shijian[0]/10;
 732   4                      dsbuff[7]=shijian[0]%10;
 733   4                    }
 734   3                }
 735   2            } 
 736   1      }
C51 COMPILER V9.54   MAIN                                                                  12/26/2017 07:53:09 PAGE 13  

 737          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2157    ----
   CONSTANT SIZE    =     12    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     58       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
