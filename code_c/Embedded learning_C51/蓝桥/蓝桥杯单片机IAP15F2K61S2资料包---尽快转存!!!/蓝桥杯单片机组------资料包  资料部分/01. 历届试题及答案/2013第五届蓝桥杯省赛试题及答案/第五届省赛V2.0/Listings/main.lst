C51 COMPILER V9.54   MAIN                                                                  12/19/2017 16:26:49 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\keil   55\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\ma
                    -in.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /****************************************************************************************
   2          实验功能：第五届省赛试题练习
   3          时间：2017.12.17
   4          作者：吴康
   5          ****************************************************************************************/
   6          #include <STC15F2K60S2.h>
   7          #include <delay.h>
   8          #include <onewire.h>
   9          #define uchar unsigned char 
  10          
  11          uchar dsbuff[8];
  12          unsigned char code tab[]={0XC0,0XF9,0XA4,0XB0,0X99,0X92,0X82,0XF8,0X80,0X90,0XBF,0XFF};
  13          uchar discount = 0;                   //数码管移位控制变量
  14          uchar count_1,count_2=0;              //定时扫描用的变量
  15          uchar tem,flag_1,flag_2=0,flag_3=0;   //定时扫描用的变量
  16          uchar tem_max=30,tem_min=20;          //初始化温度上限下限
  17          uchar gongzuo;                        //工作号变量
  18          uchar num[4];                         //存储矩阵键值的变量
  19          uchar cishu=0;                        //判断按键按的次数，如果按了四次则设置好了
  20          uchar clear=0,shezhi=0;               //设置按键和清除按键初值
  21          uchar qingchu=0;                      //清除标志位
  22          uchar tt=0,fan=0;                     //灯亮时间的控制变量
  23          uchar liang_1=1,liang_2=0;            //亮哪一个灯控制变量
  24          
  25          /****************************************************************************************
  26          函数名称：keyscan
  27          功能：按键处理函数
  28          ****************************************************************************************/
  29          void keyscan()
  30          { 
  31   1        uchar temp;
  32   1        P3=0x7f;
  33   1        P44=0;P42=1;
  34   1        temp=P3;
  35   1        temp=P3&0x0f;
  36   1        if(temp!=0x0f)
  37   1        {
  38   2          Delay5ms();
  39   2          Delay5ms();
  40   2          temp=P3;
  41   2          temp=P3&0x0f;
  42   2          if(temp!=0x0f)
  43   2          {
  44   3            if(shezhi==1)
  45   3            {
  46   4              switch(temp)
  47   4              {
  48   5                case 0x0e:num[cishu]=0;cishu++;break;
  49   5                case 0x0d:num[cishu]=3;cishu++;break; 
  50   5                case 0x0b:num[cishu]=6;cishu++;break; 
  51   5                case 0x07:num[cishu]=9;cishu++;break;  
  52   5              }
  53   4            }
  54   3          }
C51 COMPILER V9.54   MAIN                                                                  12/19/2017 16:26:49 PAGE 2   

  55   2          while(P3!=0x7f);
  56   2        }
  57   1        P3=0xbf;
  58   1        P44=1;P42=0;
  59   1        temp=P3;
  60   1        temp=P3&0x0f;
  61   1        if(temp!=0x0f)
  62   1        {
  63   2          Delay5ms();
  64   2          Delay5ms();
  65   2          temp=P3;
  66   2          temp=P3&0x0f;
  67   2          if(temp!=0x0f)
  68   2          {
  69   3            switch(temp)
  70   3            {
  71   4              case 0x0e:
  72   4              if(shezhi==1){num[cishu]=1;cishu++;}break;
  73   4              case 0x0d:
  74   4              if(shezhi==1){num[cishu]=4;cishu++;}break; 
  75   4              case 0x0b:
  76   4              if(shezhi==1){num[cishu]=7;cishu++;}break; 
  77   4              case 0x07:
  78   4              {
  79   5                if(shezhi==0) {shezhi=1;cishu=0;}
  80   5                else if((shezhi==1)&&(flag_3==0)) shezhi=0;
  81   5              }
  82   4              break;  
  83   4            } 
  84   3          }
  85   2          while(P3!=0xbf);
  86   2        }
  87   1      
  88   1        P3=0xdf;
  89   1        P42=1;
  90   1        temp=P3;
  91   1        temp=P3&0x0f;
  92   1        if(temp!=0x0f)
  93   1        {
  94   2          Delay5ms();
  95   2          Delay5ms();
  96   2          temp=P3;
  97   2          temp=P3&0x0f;
  98   2          if(temp!=0x0f)
  99   2          {
 100   3            if(shezhi==1)
 101   3            {
 102   4              switch(temp)
 103   4              {
 104   5                
 105   5                case 0x0e:num[cishu]=2;cishu++;break;
 106   5                case 0x0d:num[cishu]=5;cishu++;break; 
 107   5                case 0x0b:num[cishu]=8;cishu++;break; 
 108   5                case 0x07:{clear=1;cishu=0;qingchu=1;}break;  
 109   5              }
 110   4            } 
 111   3          }
 112   2          while(P3!=0xdf);
 113   2        }
 114   1      }
 115          
 116          /****************************************************************************************
C51 COMPILER V9.54   MAIN                                                                  12/19/2017 16:26:49 PAGE 3   

 117          函数名称：display
 118          功能：数码管显示函数
 119          ****************************************************************************************/
 120          void display()
 121          {
 122   1        P2 = (P2&0x1f)|0xe0;    //打开段选锁存器
 123   1        P0 = 0xff;              //关闭所有数码管
 124   1        P2 = P2&0x1f;
 125   1          
 126   1        P2 = (P2&0x1f)|0xc0;    //打开位选锁存器
 127   1        P0 = 1<<discount;
 128   1        P2 = P2&0x1f;
 129   1        
 130   1        P2 = (P2&0x1f)|0xe0;    //打开段选锁存器
 131   1        P0 = tab[dsbuff[discount]];
 132   1        P2 = P2&0x1f;
 133   1      
 134   1        if(++discount==8)
 135   1         discount = 0;
 136   1      }
 137          
 138          /****************************************************************************************
 139          函数名称：LED
 140          功能：LED亮灭控制函数
 141          ****************************************************************************************/
 142          void LED(uchar liang)
 143          {
 144   1        P2=P2&0x1f;
 145   1        P2=P2|0x80;
 146   1        P0=liang;
 147   1        P2=P2&0x1f;
 148   1      }
 149          
 150          /****************************************************************************************
 151          函数名称：JIDIANQI
 152          功能：继电器通断控制函数
 153          ****************************************************************************************/
 154          void JIDIANQI(uchar xiang)
 155          {
 156   1        P2=P2&0x1f;
 157   1        P2=P2|0xa0;
 158   1        P0=xiang;
 159   1        P2=P2&0x1f;
 160   1      }
 161          
 162          /****************************************************************************************
 163          函数名称：allinit
 164          功能：板子初始化函数
 165          ****************************************************************************************/
 166          void allinit()
 167          {
 168   1        P2=(P2&0x1f)|0x80;P0=0xff;
 169   1        P2=(P2&0x1f)|0xa0;P0=0x00;
 170   1        P2=(P2&0x1f)|0xc0;P0=0xff;
 171   1        P2=(P2&0x1f)|0xe0;P0=0xff;
 172   1      }
 173          
 174          /****************************************************************************************
 175          函数名称：Timer1Init
 176          功能：定时器1初始化函数
 177          ****************************************************************************************/
 178          void Timer1Init(void)   //5毫秒@11.0592MHz
C51 COMPILER V9.54   MAIN                                                                  12/19/2017 16:26:49 PAGE 4   

 179          {
 180   1        AUXR |= 0x40;   //定时器时钟1T模式
 181   1        TMOD &= 0x0F;   //设置定时器模式
 182   1        TL1 = 0x00;     //设置定时初值
 183   1        TH1 = 0x28;     //设置定时初值
 184   1        TF1 = 0;        //清除TF1标志
 185   1        TR1 = 1;        //定时器1开始计时
 186   1      }
 187          
 188          /****************************************************************************************
 189          函数名称：Timer0Init
 190          功能：定时器0初始化函数
 191          ****************************************************************************************/
 192          void Timer0Init(void)   //2毫秒@11.0592MHz
 193          {
 194   1        AUXR |= 0x80;   //定时器时钟1T模式
 195   1        TMOD &= 0xF0;   //设置定时器模式
 196   1        TL0 = 0x9A;     //设置定时初值
 197   1        TH0 = 0xA9;     //设置定时初值
 198   1        TF0 = 0;        //清除TF0标志
 199   1        TR0 = 1;        //定时器0开始计时
 200   1      }
 201          
 202          /****************************************************************************************
 203          函数名称：main
 204          功能：主函数
 205          ****************************************************************************************/
 206          void main()
 207          {
 208   1        allinit();
 209   1        Timer0Init();
 210   1        Timer1Init(); 
 211   1        EA=1;
 212   1        ET0=1;
 213   1        ET1=1;
 214   1        while(1)
 215   1        {
 216   2          if(flag_2==1)
 217   2          {
 218   3            keyscan();
 219   3            flag_2=0;
 220   3          } 
 221   2           if(shezhi==0)    //初始显示温度工作状态界面
 222   2            {
 223   3              dsbuff[7]=tem%10;
 224   3              dsbuff[6]=tem/10;
 225   3              dsbuff[5]=11;
 226   3              dsbuff[0]=10;
 227   3              dsbuff[1]=gongzuo;
 228   3              dsbuff[2]=10;
 229   3              dsbuff[3]=11;
 230   3              dsbuff[4]=11;
 231   3      
 232   3              if(flag_1==1)
 233   3                {
 234   4                  tem=wendu();
 235   4                  flag_1=0; 
 236   4                }
 237   3              if((tem<=tem_max)&&(tem>=tem_min))
 238   3                {
 239   4                  gongzuo=1;
 240   4                  JIDIANQI(0x00);
C51 COMPILER V9.54   MAIN                                                                  12/19/2017 16:26:49 PAGE 5   

 241   4                }
 242   3              else if (tem>tem_max)
 243   3                {
 244   4                  gongzuo=2;
 245   4                  JIDIANQI(0x10);
 246   4                }
 247   3              else 
 248   3              {
 249   4                gongzuo=0;
 250   4                JIDIANQI(0x00);
 251   4              }
 252   3            }
 253   2          else             //进入设置温度上下限界面
 254   2            {
 255   3              dsbuff[7]=num[3];
 256   3              dsbuff[6]=num[2];
 257   3              dsbuff[5]=10;
 258   3              dsbuff[0]=10;
 259   3              dsbuff[1]=num[0];
 260   3              dsbuff[2]=num[1];
 261   3              dsbuff[3]=11;
 262   3              dsbuff[4]=11;
 263   3              if(clear==1)                //清除按键按下后全部清零
 264   3               {
 265   4                  clear=0;
 266   4                  num[0]=0;
 267   4                  num[1]=0;
 268   4                  num[2]=0;
 269   4                  num[3]=0;
 270   4               }
 271   3               if((cishu==4)||(qingchu==1))//当按键按了四次时进行判断
 272   3               {
 273   4                    qingchu=0;
 274   4                    tem_max=num[0]*10+num[1];//数据处理
 275   4                    tem_min=num[2]*10+num[3];
 276   4                    if(tem_max<tem_min)
 277   4                    {
 278   5                          flag_3=1;
 279   5                          LED(0xfd);
 280   5                          liang_1=0;
 281   5                          liang_2=1;
 282   5                    }
 283   4                  else 
 284   4                    {
 285   5                          flag_3=0;
 286   5                          LED(0xff);
 287   5                          liang_1=1;
 288   5                          liang_2=0;
 289   5                    }
 290   4                } 
 291   3            }
 292   2        }
 293   1      }
 294          /****************************************************************************************
 295          函数名称：time_1
 296          功能：定时器1的中断服务函数
 297          ****************************************************************************************/
 298          void time_1() interrupt 3
 299          {
 300   1        ++tt;
 301   1        if(gongzuo==0)
 302   1        {
C51 COMPILER V9.54   MAIN                                                                  12/19/2017 16:26:49 PAGE 6   

 303   2          if(tt==160)
 304   2          {
 305   3            tt=0;
 306   3            if(fan==0)             
 307   3            {
 308   4              fan=1;
 309   4              LED(0xfe);
 310   4            }
 311   3            else 
 312   3            {
 313   4              fan=0;
 314   4              LED(0xff);
 315   4            }
 316   3          }
 317   2        }
 318   1        else if(gongzuo==1)
 319   1        {
 320   2      
 321   2          if(tt==80)
 322   2          {
 323   3            tt=0;
 324   3            if(fan==0)
 325   3            {
 326   4              fan=1;
 327   4              LED(0xfe);
 328   4            }
 329   3            else 
 330   3            {
 331   4              fan=0;
 332   4              LED(0xff);
 333   4            }
 334   3          } 
 335   2        }
 336   1        else if(gongzuo==2)
 337   1        { 
 338   2          if(tt==40)
 339   2          {
 340   3            tt=0;
 341   3            if(fan==0)
 342   3            {
 343   4              fan=1;
 344   4              LED(0xfe);
 345   4            }
 346   3            else 
 347   3            {
 348   4              fan=0;
 349   4              LED(0xff);
 350   4            }
 351   3          }
 352   2        }
 353   1      }
 354          
 355          /****************************************************************************************
 356          函数名称：time_0
 357          功能：定时器0的中断服务函数
 358          ****************************************************************************************/
 359          void time_0() interrupt 1
 360          {
 361   1        display();      //显示函数定时显示
 362   1        if(++count_1==100)
 363   1        {
 364   2          flag_1=1;
C51 COMPILER V9.54   MAIN                                                                  12/19/2017 16:26:49 PAGE 7   

 365   2          count_1=0;  
 366   2        }
 367   1        if(++count_2==1)
 368   1        {
 369   2          count_2=0;
 370   2          flag_2=1;
 371   2        }
 372   1      }
 373          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    898    ----
   CONSTANT SIZE    =     12    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     30    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
