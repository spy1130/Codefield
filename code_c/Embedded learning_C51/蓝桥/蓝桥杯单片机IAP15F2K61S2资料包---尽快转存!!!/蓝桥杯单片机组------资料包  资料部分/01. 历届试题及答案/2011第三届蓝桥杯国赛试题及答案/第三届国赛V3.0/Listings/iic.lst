C51 COMPILER V9.54   IIC                                                                   12/24/2017 13:49:41 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE IIC
OBJECT MODULE PLACED IN .\Objects\iic.obj
COMPILER INVOKED BY: C:\keil   55\C51\BIN\C51.EXE iic.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\iic
                    -.lst) TABS(2) OBJECT(.\Objects\iic.obj)

line level    source

   1          /*
   2            程序说明: IIC总线驱动程序
   3            软件环境: Keil uVision 4.10 
   4            硬件环境: CT107单片机综合实训平台 8051，12MHz
   5            日    期: 2011-8-9
   6          */
   7          
   8          #include <STC15F2K60S2.h>
   9          #include  "intrins.h"
  10          #include <iic.h>
  11          
  12          #define somenop {_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_
             -nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();}    
  13          
  14          
  15          #define SlaveAddrW 0xA0
  16          #define SlaveAddrR 0xA1
  17          
  18          //总线引脚定义
  19          sbit SDA = P2^1;  /* 数据线 */
  20          sbit SCL = P2^0;  /* 时钟线 */
  21          
  22          
  23          
  24          //总线启动条件
  25          void IIC_Start(void)
  26          {
  27   1        SDA = 1;
  28   1        SCL = 1;
  29   1        somenop;
  30   1        SDA = 0;
  31   1        somenop;
  32   1        SCL = 0;  
  33   1      }
  34          
  35          //总线停止条件
  36          void IIC_Stop(void)
  37          {
  38   1        SDA = 0;
  39   1        SCL = 1;
  40   1        somenop;
  41   1        SDA = 1;
  42   1      }
  43          
  44          //等待应答
  45          bit IIC_WaitAck(void)
  46          {
  47   1        SDA = 1;
  48   1        somenop;
  49   1        SCL = 1;
  50   1        somenop;
  51   1        if(SDA)    
  52   1        {   
  53   2          SCL = 0;
C51 COMPILER V9.54   IIC                                                                   12/24/2017 13:49:41 PAGE 2   

  54   2          IIC_Stop();
  55   2          return 0;
  56   2        }
  57   1        else  
  58   1        { 
  59   2          SCL = 0;
  60   2          return 1;
  61   2        }
  62   1      }
  63          
  64          //通过I2C总线发送数据
  65          void IIC_SendByte(unsigned char byt)
  66          {
  67   1        unsigned char i;
  68   1        for(i=0;i<8;i++)
  69   1        {   
  70   2          if(byt&0x80) 
  71   2          { 
  72   3            SDA = 1;
  73   3          }
  74   2          else 
  75   2          {
  76   3            SDA = 0;
  77   3          }
  78   2          somenop;
  79   2          SCL = 1;
  80   2          byt <<= 1;
  81   2          somenop;
  82   2          SCL = 0;
  83   2        }
  84   1      }
  85          
  86          //从I2C总线上接收数据
  87          unsigned char IIC_RecByte(void)
  88          {
  89   1        unsigned char da;
  90   1        unsigned char i;
  91   1        
  92   1        for(i=0;i<8;i++)
  93   1        {   
  94   2          SCL = 1;
  95   2          somenop;
  96   2          da <<= 1;
  97   2          if(SDA) 
  98   2          da |= 0x01;
  99   2          SCL = 0;
 100   2          somenop;
 101   2        }
 102   1        return da;
 103   1      }
 104          void iicwrite(uchar add,uchar dat)
 105          {
 106   1        IIC_Start();
 107   1        IIC_SendByte(0xa0);
 108   1        IIC_WaitAck();
 109   1        IIC_SendByte(add);
 110   1        IIC_WaitAck();
 111   1        IIC_SendByte(dat);
 112   1        IIC_WaitAck();
 113   1        IIC_Stop();
 114   1      }
 115          uchar iicread(uchar add)
C51 COMPILER V9.54   IIC                                                                   12/24/2017 13:49:41 PAGE 3   

 116          {
 117   1        uchar da;
 118   1        IIC_Start();
 119   1        IIC_SendByte(0xa0);
 120   1        IIC_WaitAck();
 121   1        IIC_SendByte(add);
 122   1        IIC_WaitAck();
 123   1      
 124   1        IIC_Start();
 125   1        IIC_SendByte(0xa1);
 126   1        IIC_WaitAck();
 127   1        da=IIC_RecByte();
 128   1        IIC_WaitAck();
 129   1        return da;
 130   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    320    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
