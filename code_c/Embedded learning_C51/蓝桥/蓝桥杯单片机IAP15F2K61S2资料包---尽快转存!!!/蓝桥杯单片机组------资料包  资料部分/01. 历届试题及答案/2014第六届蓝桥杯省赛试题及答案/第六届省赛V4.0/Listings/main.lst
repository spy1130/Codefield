C51 COMPILER V9.54   MAIN                                                                  12/20/2017 20:06:55 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\keil   55\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\ma
                    -in.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /*************************************************************************************
   2          实验功能：第六届省赛试题程序设计
   3          时间：2017.12.20
   4          作者：吴康
   5          **************************************************************************************/
   6          #include <STC15F2K60S2.h>
   7          #include <delay.h>
   8          #include <onewire.h> 
   9          #include <ds13022.h>
  10          
  11          #define uchar unsigned char 
  12          #define uint unsigned int 
  13          
  14          uchar discount = 0;                         //数码管移位控制变量
  15          uchar dsbuff[8] = {11,11,11,11,11,11,11,11};//初始化数组
  16          uchar tab[12] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xbf,0xff};
  17          uchar key_1 = 0,key_2 = 0,key_3 = 0,key_4 = 0;//按键标志位
  18          uchar count_1=1;                              //采集时间间隔选着变量
  19          uchar jiange=1,j=0;                           //时间间隔设置变量
  20          uchar count_2=0,count_3=0,count_4=0;          //
  21          uchar tt_1=0,tt_2=0,flag_1=0,flag_2=0,flag_3=0;//
  22          uchar tem[10];                                 //采集温度存储数组
  23          uchar i=0,tt_3=0,biaozhi=0,flag_4=0,flag_5=0,flag_6=0,flag_7=0;//标志位
  24          uint tt_4=0;                                  //定时器变量标志位
  25          uchar temp;                                   //DS1302秒的数据存储变量
  26          
  27          /**************************************************************************************
  28          函数名称：led
  29          功能：LED亮灭控制函数
  30          ***************************************************************************************/
  31          void led(uchar liang)
  32          {
  33   1        P2=P2&0x1f;
  34   1        P2=0x80;
  35   1        P0=liang;
  36   1        P2=P2&0x1f;
  37   1      }
  38          
  39          /**************************************************************************************
  40          函数名称：display
  41          功能：数码管显示函数
  42          ***************************************************************************************/
  43          void display()
  44          {
  45   1        P2=0xef;
  46   1        P0=0xff;
  47   1        P2=0x1f;
  48   1        
  49   1        P2=0xcf;
  50   1        P0=1<<discount;
  51   1        P2=0x1f;
  52   1        
  53   1        P2=0xef;
  54   1        P0=tab[dsbuff[discount]];
C51 COMPILER V9.54   MAIN                                                                  12/20/2017 20:06:55 PAGE 2   

  55   1        P2=0x1f;
  56   1        
  57   1        if(++discount==8)
  58   1          discount = 0;
  59   1      }
  60          
  61          /**************************************************************************************
  62          函数名称：allinit
  63          功能：板子初始化函数
  64          ***************************************************************************************/
  65          void allinit()
  66          {
  67   1        P2=0x80;P0=0xff;//关闭LED
  68   1        P2=0xa0;P0=0x00;//关闭蜂鸣器，继电器
  69   1        P2=0xc0;P0=0xff;//选中所有数码管
  70   1        P2=0xe0;P0=0xff;//关闭所有数码管
  71   1      }
  72          
  73          /**************************************************************************************
  74          函数名称：caiji
  75          功能：采集温度控制函数
  76          ***************************************************************************************/
  77          void caiji()
  78          {
  79   1        if(flag_2==0)
  80   1          {
  81   2            ds_write();     //对于一开始不显示时钟的先不让时钟初始化
  82   2            flag_2=1;        
  83   2            temp=shijian[0];//第一次执行总程序先将temp初始化为刚开始的时钟秒数
  84   2          }
  85   1          ds_read();        //读时间
  86   1        if(flag_7==1)
  87   1          {
  88   2            flag_7=0;
  89   2            temp=clk[0];//第二次……第N次执行总程序时 由于ds1302在执行别的程序的时候仍在走 为了弥补这部分时间 将tem
             -p初始化为按S5键后的秒数 
  90   2                        //则可以从这里继续去判断第二次，第三次……是否符合时间间隔
  91   2          }     
  92   1        if(i<10)
  93   1          {
  94   2            key_2=0;key_1=0;
  95   2            dsbuff[7] = clk[0]%10;
  96   2            dsbuff[6] = clk[0]/10;  
  97   2            dsbuff[4] = clk[1]%10;
  98   2            dsbuff[3] = clk[1]/10;
  99   2            dsbuff[1] = clk[2]%10;
 100   2            dsbuff[0] = clk[2]/10;
 101   2          }
 102   1      
 103   1      /************用1302写时间间隔 要特别注意temp的一开始的初始化要对应每次按键后的时间************/
 104   1          if(clk[0]-temp==jiange)       //用1302写时间间隔 注意temp要不断刷新
 105   1            {                           //当记录的秒数减去初始化为间隔时
 106   2              if(i<10)
 107   2                tem[i]=wendu();         //存储这十个温度数据
 108   2              i++;
 109   2              if(i>=10) i=10;
 110   2              temp=clk[0];              //更新temp的值
 111   2            }
 112   1          else if(60+clk[0]-temp==jiange)//当进入下一分钟后clk[0]小于temp时需要加上一分钟（60）秒
 113   1            {
 114   2              if(i<10)
 115   2                tem[i]=wendu();
C51 COMPILER V9.54   MAIN                                                                  12/20/2017 20:06:55 PAGE 3   

 116   2              i++;
 117   2              if(i>=10) i=10;
 118   2              temp=clk[0];
 119   2            } 
 120   1      }
 121          
 122          /**************************************************************************************
 123          函数名称：Timer1Init
 124          功能：定时器1初始化函数
 125          ***************************************************************************************/
 126          void Timer1Init(void)   //5毫秒@11.0592MHz
 127          {
 128   1        AUXR |= 0x40;   //定时器时钟1T模式
 129   1        TMOD &= 0x0F;   //设置定时器模式
 130   1        TL1 = 0x00;     //设置定时初值
 131   1        TH1 = 0x28;     //设置定时初值
 132   1        TF1 = 0;        //清除TF1标志
 133   1        TR1 = 1;        //定时器1开始计时
 134   1      }
 135          
 136          /**************************************************************************************
 137          函数名称：Timer10Init
 138          功能：定时器10初始化函数
 139          ***************************************************************************************/
 140          void Timer0Init(void)   //2毫秒@11.0592MHz
 141          {
 142   1        AUXR |= 0x80;   //定时器时钟1T模式
 143   1        TMOD &= 0xF0;   //设置定时器模式
 144   1        TL0 = 0x9A;     //设置定时初值
 145   1        TH0 = 0xA9;     //设置定时初值
 146   1        TF0 = 0;        //清除TF0标志
 147   1        TR0 = 1;        //定时器0开始计时
 148   1      }
 149          
 150          /**************************************************************************************
 151          函数名称：keyscan
 152          功能：按键扫描函数
 153          ***************************************************************************************/
 154          void keyscan()
 155          {
 156   1        if(P30==0)        //重新进入参数设置界面
 157   1        {
 158   2          Delay5ms();     //延时消抖
 159   2          if(P30==0)
 160   2            {
 161   3              key_1=1;
 162   3            }
 163   2            while(!P30);
 164   2        }
 165   1        if(P31==0)      //按键切换显示刚刚存储的十个温度数据
 166   1        {
 167   2          Delay5ms();   //延时消抖
 168   2          if(P31==0)
 169   2            {
 170   3              key_2=1;
 171   3            }
 172   2            while(!P31);
 173   2        }
 174   1        if(P32==0)      //确认采集间隔时间，并设置标志位让他退出设置界面，进入时钟显示界面
 175   1        {
 176   2          Delay5ms();   //延时消抖
 177   2          if(P32==0)
C51 COMPILER V9.54   MAIN                                                                  12/20/2017 20:06:55 PAGE 4   

 178   2            {
 179   3              key_3 = 1;
 180   3              count_1=0;//把选择的时间隔清零为下次进入准备
 181   3              count_4=0;
 182   3            }
 183   2            while(!P32);
 184   2        }
 185   1        
 186   1        if(P33==0)      //切换温度采集间隔时间
 187   1        {
 188   2          Delay5ms();   //延时消抖
 189   2          if(P33==0)
 190   2            {
 191   3              key_4 = 1;
 192   3              count_1++;//用于选择是什么时间间隔
 193   3            }
 194   2            while(!P33);
 195   2        }
 196   1      }
 197          
 198          /**************************************************************************************
 199          函数名称：main
 200          功能：主函数
 201          ***************************************************************************************/
 202          void main()
 203          {
 204   1        allinit();        //板子整体初始化
 205   1        Timer0Init();     //定时器0初始化
 206   1        Timer1Init();     //定时器1初始化
 207   1        EA=1;             //打开中断
 208   1        ET0=1;            //打开中断0
 209   1        ET1=1;            //打开中断1
 210   1        while(1)
 211   1        {
 212   2          keyscan();      //按键扫描
 213   2          if(key_3==1)    //按键S5按下 确定温度间隔
 214   2            { 
 215   3                caiji();  //采集温度函数初始化
 216   3                if(i==10) //判断是否采集到十个温度数据
 217   3                  {
 218   4                      if(key_2==0)
 219   4                        {
 220   5                          dsbuff[7] = tem[1]%10;
 221   5                          dsbuff[6] = tem[1]/10;
 222   5                          dsbuff[5] = 10;
 223   5                          dsbuff[4] = 11;
 224   5                          dsbuff[3] = 11;
 225   5                          dsbuff[2] = 0;
 226   5                          dsbuff[1] = 0;
 227   5                          dsbuff[0] = 10;
 228   5                        }
 229   4                      if((flag_5==1)&&(key_1==0)&&(key_2==1))
 230   4                        {
 231   5                          flag_5=0;  
 232   5                          P2=0x80;P0=0xff;//打开LED锁存器
 233   5                          if(j==10)
 234   5                            {
 235   6                              j=9;
 236   6                            }
 237   5                            dsbuff[7] = tem[j]%10;
 238   5                            dsbuff[6] = tem[j]/10;
 239   5                            dsbuff[5] = 10;
C51 COMPILER V9.54   MAIN                                                                  12/20/2017 20:06:55 PAGE 5   

 240   5                            dsbuff[4] = 11;
 241   5                            dsbuff[3] = 11;
 242   5                            dsbuff[2] = j%10;
 243   5                            dsbuff[1] = j/10;
 244   5                            dsbuff[0] = 10;
 245   5                            j++;
 246   5                        }
 247   4                      if(key_1==1)
 248   4                        {
 249   5                          key_1=0;
 250   5                          flag_6=1;
 251   5                          key_3=0;
 252   5                          key_2=0;
 253   5                          i=0;
 254   5                          j=0;
 255   5                          flag_7=1;
 256   5                        }   
 257   4                    }
 258   3              }
 259   2          else if((key_3==0)||(flag_6==1)) //设置采集时间间隔和显示时间间隔
 260   2          {
 261   3              flag_6=0;
 262   3              switch(count_1)
 263   3                {
 264   4                  case 1:jiange=1;break;
 265   4                  case 2:jiange=5;break;
 266   4                  case 3:jiange=30;break;
 267   4                  case 4:jiange=60;count_1=0;break;
 268   4                }
 269   3                dsbuff[7] = jiange%10;
 270   3                dsbuff[6] = jiange/10;
 271   3                dsbuff[5] = 10;
 272   3                dsbuff[4] = 11;
 273   3                dsbuff[3] = 11;
 274   3                dsbuff[2] = 11;
 275   3                dsbuff[1] = 11;
 276   3                dsbuff[0] = 11;
 277   3          }
 278   2        }
 279   1      }
 280          
 281          /**************************************************************************************
 282          函数名称：time_0
 283          功能：中断服务函数
 284          ***************************************************************************************/
 285          void time_0() interrupt 1
 286          {
 287   1        display();//扫描数码管函数
 288   1        if(++tt_4==500)
 289   1        {
 290   2          tt_4=0;
 291   2          flag_5=1;//用于控制采集的温度显示时间间隔为一秒
 292   2        }
 293   1      }
 294          
 295          /**************************************************************************************
 296          函数名称：time_1
 297          功能：中断服务函数
 298          ***************************************************************************************/
 299          void time_1() interrupt 3
 300          {
 301   1          if((key_3==1)&&(i<10))//当采集的数据没有到十个时
C51 COMPILER V9.54   MAIN                                                                  12/20/2017 20:06:55 PAGE 6   

 302   1          {
 303   2      //        if(count_4<=2)
 304   2              ++tt_1;
 305   2              if(tt_1==200)
 306   2                {
 307   3                  tt_1=0;
 308   3                  if(flag_1==0)//用于控制提示字符1提示字符2间隔一秒闪烁
 309   3                    {
 310   4                      flag_1=1;
 311   4                      dsbuff[5]=11;
 312   4                      dsbuff[2]=11;
 313   4                    }
 314   3                  else 
 315   3                    {
 316   4                      flag_1=0;
 317   4                      dsbuff[5]=10;
 318   4                      dsbuff[2]=10;
 319   4      //                count_4++;
 320   4                    }
 321   3                }
 322   2              ++tt_3;
 323   2              if(tt_3==200)
 324   2                {
 325   3                  biaozhi++;
 326   3                  tt_3=0;
 327   3                  if(biaozhi==jiange)
 328   3                    {
 329   4                      biaozhi=0;
 330   4                      flag_4=1;
 331   4                    }
 332   3                }
 333   2          }
 334   1        if((i==10)&&(key_2==0))//采集到十个数据后灯开始闪烁
 335   1          {
 336   2            ++tt_2;
 337   2            if(tt_2==100)
 338   2              {
 339   3                tt_2=0;
 340   3                if(flag_3==0)
 341   3                  {
 342   4                    flag_3=1;
 343   4                    led(0xff);
 344   4                  }
 345   3                else 
 346   3                  {
 347   4                    flag_3=0;
 348   4                    led(0xfe);
 349   4                  }
 350   3              }
 351   2          }
 352   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    824    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     56    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.54   MAIN                                                                  12/20/2017 20:06:55 PAGE 7   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
