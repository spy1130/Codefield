C51 COMPILER V9.52.0.0   EX15                                                              01/25/2015 00:42:58 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE EX15
OBJECT MODULE PLACED IN ex15.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE ex15.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*******************************************************************************  
   2          * 文件名称：串口通讯实验
   3          * 实验目的：1.掌握51单片机串口工作模式及相关寄存器配置方法
   4          *           2.了解51单片机波特率的计算方法
   5          *           3.掌握单片机串口接收中断服务函数的设计方法
   6          * 程序说明：1.通过USB连接线连接PC机，在计算机硬件管理器中查看串口号
   7          *           2.打开串口调试工具软件，并将串口通讯波特率设定为2400
   8          *                       3.将跳线J13配置为MM模式
   9          *                       4.输入1-8字符，控制8个LED指示灯状态
  10          * 硬件说明：IAP15F2K61S2@11.0592MHz
  11          * 日期版本：2012-9-5/V1.0a 
  12          *******************************************************************************/
  13          
  14          #include "reg52.h"  //定义51单片机特殊功能寄存器
  15          #include "absacc.h"
  16          
  17          #define BAUD         2400               //波特率
  18          #define SYSTEMCLOCK  11059200L  //系统时钟频率
  19          
  20          sfr AUXR  = 0x8e; 
  21          
  22          bit rxc = 0;
  23          char rx = '1';
  24          void uart_sendstring(unsigned char *str);
  25          
  26          //主函数
  27          void main(void)
  28          { 
  29   1          SCON = 0x50;                
  30   1      
  31   1          AUXR = 0x40;                //1T
  32   1          TMOD = 0x00;                //
  33   1          TL1 = (65536 - (SYSTEMCLOCK/4/BAUD));   //
  34   1          TH1 = (65536 - (SYSTEMCLOCK/4/BAUD))>>8;
  35   1          TR1 = 1;  
  36   1              ES = 1;
  37   1              EA = 1;
  38   1              
  39   1          while(1)
  40   1          {
  41   2                      if(rxc == 1){
  42   3                              rxc = 0;
  43   3                              switch(rx){
  44   4                                      case '1':
  45   4                                              XBYTE[0x8000] = 0xFE;
  46   4                                              break;
  47   4                                      case '2':
  48   4                                              XBYTE[0x8000] = 0xFD;
  49   4                                              break;
  50   4                                      case '3':
  51   4                                              XBYTE[0x8000] = 0xFB;
  52   4                                              break;
  53   4                                      case '4':
  54   4                                              XBYTE[0x8000] = 0xF7;
  55   4                                              break;
C51 COMPILER V9.52.0.0   EX15                                                              01/25/2015 00:42:58 PAGE 2   

  56   4                                      case '5':
  57   4                                              XBYTE[0x8000] = 0xEF;
  58   4                                              break;
  59   4                                      case '6':
  60   4                                              XBYTE[0x8000] = 0xDF;
  61   4                                              break;
  62   4                                      case '7':
  63   4                                              XBYTE[0x8000] = 0xBF;
  64   4                                              break;
  65   4                                      case '8':
  66   4                                              XBYTE[0x8000] = 0x7F;
  67   4                                              break;
  68   4                                      default:
  69   4                                              uart_sendstring("error\r\n");   //输入其他数据返回error
  70   4                                              break;
  71   4                              }
  72   3                              ES = 1;
  73   3                      }
  74   2          }
  75   1      }
  76          
  77          //串口中断服务函数
  78          void isr_uart(void) interrupt 4
  79          {
  80   1          if(RI)
  81   1          {
  82   2              RI = 0;  //清除接收标志位 
  83   2              rx = SBUF;
  84   2                      ES = 0;
  85   2                      rxc = 1;
  86   2              }
  87   1      }
  88          
  89          //通过串口发送字符串
  90          void uart_sendstring(unsigned char *str)
  91          {
  92   1          unsigned char *p;
  93   1          
  94   1          p = str;
  95   1          while(*p != '\0')
  96   1          {
  97   2              SBUF = *p;
  98   2                      while(TI == 0);  //等待发送标志位置位
  99   2                      TI = 0;
 100   2              p++;
 101   2          }
 102   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    186    ----
   CONSTANT SIZE    =      8    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
