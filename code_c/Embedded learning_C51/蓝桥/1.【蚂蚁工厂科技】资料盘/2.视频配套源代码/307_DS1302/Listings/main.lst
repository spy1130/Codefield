C51 COMPILER V9.60.7.0   MAIN                                                              12/13/2023 22:17:22 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\Applications\Keil_5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver;..\Sys) DEB
                    -UG OBJECTEXTEND PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          # include "bsp_init.h"
   2          # include "bsp_seg.h"
   3          # include "timer.h"
*** WARNING C329 IN LINE 8 OF ..\Sys\timer.h: single-line comment contains line-continuation
*** WARNING C329 IN LINE 9 OF ..\Sys\timer.h: single-line comment contains line-continuation
*** WARNING C329 IN LINE 17 OF ..\Sys\timer.h: single-line comment contains line-continuation
*** WARNING C329 IN LINE 18 OF ..\Sys\timer.h: single-line comment contains line-continuation
   4          # include "bsp_key.h"
   5          # include "stdio.h"
   6          #include "bsp_ds1302.h"
   7          # include "bsp_led.h"
   8          
   9          
  10          //-----------------------------------------------
  11          /* 函数声明 */
  12          //三个主体循环，基本上永远不变
  13          void Key_Proc(void);//按键处理，底层数据变更
  14          void Seg_Proc(void);//显示处理，显示信息生成
  15          void Led_Proc(void);//LED处理，LED状态信息表示
  16          
  17          
  18          //-----------------------------------------------
  19          /* 全局变量声明 */
  20          
  21          //数码管显示专用，基本上永远不变
  22          unsigned char seg_buf[8];//放置字符串转换后的段码到数组
  23          unsigned char seg_string[10];//放置字符串
  24          unsigned char   pos = 0;//中断显示专用
  25          
  26          //LED显示专用，基本上永远不变
  27          unsigned char ucLed;//记录LED的状态信息
  28          
  29          //按键专用，基本上永远不变
  30          unsigned char Key_Value;//读取按键的数值存储变量
  31          unsigned char Key_Down, Key_Old;//读取按键的数值存储变量        
  32          
  33          //按键和显示函数减速专用，基本永远不变
  34          unsigned int Key_Slow_Down;//按键减速
  35          unsigned int Seg_Slow_Down;//按键减速
  36          
  37          //ds1302专用，当使用DS1302时，基本永远不变
  38          unsigned char ucRtc[3] = {23,59,55};//数组初始值，里边放的是时分秒的数值
  39          
  40          
  41          //根据代码需求发生变化
  42          unsigned int ms_count;//记录毫秒数据
  43          unsigned char s_count;//记录秒数据
  44                  
  45          unsigned char Running_State;//记录运行状态
  46          
  47                  
  48          //-----------------------------------------------
  49          /* main */
  50          void main()
C51 COMPILER V9.60.7.0   MAIN                                                              12/13/2023 22:17:22 PAGE 2   

  51          {
  52   1              //根据代码需求发生变化
  53   1              Cls_Peripheral();//关闭外设
  54   1              Timer1Init();//定时器1初始化，并且使能定时器1中断，1ms进入一次
  55   1              EA = 1;//打开总中断
  56   1      
  57   1              Set_Rtc(ucRtc);//设置RTC时间，23-59-55
  58   1      
  59   1              
  60   1              while(1)
  61   1              {
  62   2                      //永远不变
  63   2                      Key_Proc();//按键处理，底层数据变更
  64   2                      Seg_Proc();//显示处理，显示信息生成
  65   2                      Led_Proc();//LED处理，LED状态信息表示           
  66   2              }
  67   1      
  68   1      
  69   1      }
  70          
  71          
  72          
  73          //-----------------------------------------------
  74          /* Timer1_interrupt routine */
  75          void tm1_isr() interrupt 3
  76          {       
  77   1              
  78   1              //永远不变
  79   1              if(++Key_Slow_Down == 10) Key_Slow_Down = 0;
  80   1              if(++Seg_Slow_Down == 500) Seg_Slow_Down = 0;//数值刷新
  81   1              
  82   1              if(++ms_count == 1000) //记录运行时间
  83   1              {
  84   2                      s_count++;
  85   2                      ms_count = 0;
  86   2              }
  87   1              
  88   1      
  89   1              //永远不变
  90   1              Seg_Disp(seg_buf, pos);//数码管显示HZ刷新
  91   1              if( ++pos == 8 )        pos = 0;
  92   1              
  93   1              Led_Disp(ucLed);//LED显示
  94   1              
  95   1              
  96   1      }
  97          
  98          
  99          
 100          //-----------------------------------------------
 101          /*key_proc */
 102          
 103          void Key_Proc(void)//按键处理，底层数据变更
 104          {
 105   1              //永远不变
 106   1              if(Key_Slow_Down) return;
 107   1              Key_Slow_Down = 1;//减速程序
 108   1              
 109   1              Key_Value = Key_Read();//读取按键按下的编号
 110   1              Key_Down = Key_Value & (Key_Old ^ Key_Value);// (0000^0101) = 0101     0101 & 0101 =0101  ,如果按键发生了
             -下降沿的变化，输出结果和本次按键数值相同
 111   1                                                                                                                                                                              // (0101^0101) = 0000       0101&0000 = 0000  如果按键一直保持同样的状态，输出结果为0
C51 COMPILER V9.60.7.0   MAIN                                                              12/13/2023 22:17:22 PAGE 3   

 112   1              Key_Old = Key_Value;
 113   1              
 114   1              
 115   1              
 116   1              
 117   1              
 118   1              //根据代码需求发生变化
 119   1              if(Key_Down)//如果捕捉到下降沿跳变
 120   1              {
 121   2                              if(++Running_State == 2)  Running_State = 0;//保证Running_State在0-1之间翻滚
 122   2              }
 123   1              
 124   1      }
 125          
 126          
 127          
 128          //----------------------------------------------
 129          /*seg_proc */
 130          void Seg_Proc(void)//显示处理，显示信息生成
 131          {
 132   1              //永远不变
 133   1              if(Seg_Slow_Down) return;
 134   1              Seg_Slow_Down = 1;//减速程序
 135   1      
 136   1              
 137   1              
 138   1      
 139   1              
 140   1              //根据代码需求发生变化
 141   1              switch(Running_State)
 142   1              {
 143   2                      case 0:
 144   2                                      Read_Rtc(ucRtc);//读取1302内部时分秒的数据，放到预定义的数组空间中      
 145   2                                      sprintf(seg_string,"%02d-%02d-%02d",(unsigned int)ucRtc[0],(unsigned int)ucRtc[1],(unsigned int)ucRtc[
             -2]);//将要显示的数值打印到字符串当中
 146   2                                      break;
 147   2              
 148   2                      case 1:
 149   2                                      sprintf(seg_string,"-----%03d",(unsigned int)s_count);//将要显示的数值打印到字符串当中  
 150   2                                      break;          
 151   2              }       
 152   1              
 153   1      
 154   1              
 155   1              //永远不变
 156   1              Seg_Tran(seg_string, seg_buf);
 157   1      }
 158          
 159          //----------------------------------------------
 160          /*led_proc */
 161          void Led_Proc(void)//显示处理，显示信息生成
 162          {
 163   1              
 164   1              //根据代码需求发生变化
 165   1              switch(Running_State)
 166   1              {
 167   2                      case 0:
 168   2                                      ucLed = 0x0F;//让左边亮
 169   2                                      break;
 170   2              
 171   2                      case 1:
 172   2                                      ucLed = 0xF0;//让右边亮
C51 COMPILER V9.60.7.0   MAIN                                                              12/13/2023 22:17:22 PAGE 4   

 173   2                                      break;          
 174   2              }
 175   1                      
 176   1      }
 177          
 178          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    332    ----
   CONSTANT SIZE    =     25    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     34    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  4 WARNING(S),  0 ERROR(S)
