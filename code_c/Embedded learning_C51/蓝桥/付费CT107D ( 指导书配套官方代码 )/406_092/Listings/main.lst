C51 COMPILER V9.56.0.0   MAIN                                                              07/04/2019 16:23:38 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_C51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver) DEFINE(T0_COUNT,EEPRO
                    -M_AT24C02,PCF8591_ADC) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "tim.h"
   2          #include "key.h"
   3          #include "seg.h"
   4          #include "stdio.h"
   5          #include "onewire.h"
   6          #include "iic.h"
   7          
   8          unsigned int  uiFre_Val, uiTem_Val, uiSeg_Dly;
   9          unsigned int  uiFre_Echo, uiTem_Echo;
  10          unsigned char ucVol_Val, ucVol_Echo, ucVol_Thr, ucVol_Flag;
  11          unsigned char ucState, ucLed=1;
  12          unsigned char pucSeg_Buf[10], pucSeg_Code[8], ucSeg_Pos;
  13          unsigned char ucKey_Dly, ucKey_Old;
  14          unsigned long ulms, ulKey_Time;
  15          
  16          void Timer0Init(void)     // 16位计数器模式
  17          {
  18   1        AUXR &= 0x7F;           // 定时器时钟12T模式
  19   1        TMOD |= 5;            // 设置16位计数器模式
  20   1        TL0 = 0;              // 设置计数初值
  21   1        TH0 = 0;              // 设置计数初值
  22   1        TF0 = 0;              // 清除TF0标志
  23   1        TR0 = 1;              // 开始计数
  24   1      }
  25          
  26          void Key_Proc(void);
  27          void Seg_Proc(void);
  28          
  29          void main(void)
  30          {
  31   1        Cls_Peripheral();
  32   1        Timer1Init();
  33   1        Timer0Init();
  34   1      
  35   1        EEPROM_Read(pucSeg_Buf, 0, 6);
  36   1        ucVol_Val = pucSeg_Buf[0];
  37   1        uiFre_Val = (pucSeg_Buf[2]<<8)+pucSeg_Buf[1];
  38   1        uiTem_Val = (pucSeg_Buf[4]<<8)+pucSeg_Buf[3];
  39   1        ucVol_Thr = pucSeg_Buf[5];
  40   1        if(ucVol_Thr > 50) ucVol_Thr = 20;
  41   1      
  42   1        while(1)
  43   1        {
  44   2          Key_Proc();
  45   2          Seg_Proc();
  46   2        }
  47   1      }
  48          
  49          void Time_1(void) interrupt 3
  50          {
  51   1        ulms++;
  52   1        if(++ucKey_Dly == 10)
  53   1          ucKey_Dly = 0;
  54   1        if(++uiSeg_Dly == 500)
C51 COMPILER V9.56.0.0   MAIN                                                              07/04/2019 16:23:38 PAGE 2   

  55   1          uiSeg_Dly = 0;
  56   1        if(ucVol_Flag)
  57   1          if(!(ulms % 200))
  58   1            ucLed ^= 0x80;
  59   1        if(!(ulms % 1000))
  60   1        {
  61   2          uiFre_Val = (TH0<<8)+TL0;
  62   2          TH0 = 0;
  63   2          TL0 = 0;
  64   2        }
  65   1        Led_Disp(ucLed);
  66   1        Seg_Disp(pucSeg_Code, ucSeg_Pos);
  67   1        if(++ucSeg_Pos == 8) ucSeg_Pos = 0;
  68   1      }
  69          
  70          void Key_Proc(void)
  71          {
  72   1        unsigned char ucKey_Val, ucKey_Down;
  73   1      
  74   1        if(ucKey_Dly) return;
  75   1        ucKey_Dly = 1;
  76   1      
  77   1        ucKey_Val = Key_Read();
  78   1        ucKey_Down = ucKey_Val & (ucKey_Old ^ ucKey_Val);
  79   1        ucKey_Old = ucKey_Val;
  80   1        if(ucKey_Down) ulKey_Time = ulms;
  81   1      
  82   1        switch(ucKey_Down)
  83   1        {
  84   2          case 4:             // S4
  85   2            if(ucState < 3)
  86   2            {
  87   3              if(++ucState == 3) ucState = 0;
  88   3              if(!ucState) ucLed = 1;
  89   3              if(ucState == 1) ucLed = 2;
  90   3              if(ucState == 2) ucLed = 4;
  91   3            }
  92   2            else if(ucState < 0x13)
  93   2              if(++ucState == 0x13) ucState = 0x10;
  94   2            break;
  95   2          case 5:             // S5
  96   2            pucSeg_Buf[0] = ucVol_Val;
  97   2            pucSeg_Buf[1] = uiFre_Val & 0xff;
  98   2            pucSeg_Buf[2] = uiFre_Val >> 8;
  99   2            pucSeg_Buf[3] = uiTem_Val & 0xff;
 100   2            pucSeg_Buf[4] = uiTem_Val >> 8;
 101   2            EEPROM_Write(pucSeg_Buf, 0, 5);
 102   2            break;
 103   2          case 8:             // S8
 104   2            if(ucState < 0x10)
 105   2            {
 106   3              ucState = 0x10;
 107   3              ucLed = 0;
 108   3              EEPROM_Read(pucSeg_Buf, 0, 5);
 109   3              ucVol_Echo = pucSeg_Buf[0];
 110   3              uiFre_Echo = (pucSeg_Buf[2]<<8)+pucSeg_Buf[1];
 111   3              uiTem_Echo = (pucSeg_Buf[4]<<8)+pucSeg_Buf[3];
 112   3            }
 113   2            else if(ucState < 0x20)
 114   2            {
 115   3              ucState = 0;
 116   3              ucLed = 1;
C51 COMPILER V9.56.0.0   MAIN                                                              07/04/2019 16:23:38 PAGE 3   

 117   3            }
 118   2            if(ucState == 0x20)
 119   2              if(++ucVol_Thr > 50) ucVol_Thr = 1;
 120   2            break;
 121   2          case 9:             // S9
 122   2            if(ucState != 0x20) ucState = 0x20;
 123   2            else
 124   2            {
 125   3              ucState = 0;
 126   3              pucSeg_Buf[0] = ucVol_Thr;
 127   3              EEPROM_Write(pucSeg_Buf, 5, 1);
 128   3            }
 129   2        }
 130   1      
 131   1        if((ucState==0x20) && (ucKey_Old==8))
 132   1          if(ulms-ulKey_Time > 800)
 133   1          {
 134   2            ulKey_Time = ulms;
 135   2            if(++ucVol_Thr > 50) ucVol_Thr = 1;
 136   2          }
 137   1      }
 138          
 139          void Seg_Proc(void)
 140          {
 141   1        if(uiSeg_Dly) return;
 142   1        uiSeg_Dly = 1;
 143   1      
 144   1        switch(ucState&0xf0)
 145   1        {
 146   2          case 0:             // 测量
 147   2            switch(ucState)
 148   2            {
 149   3              case 0:           // 电压
 150   3                ucVol_Val = PCF8591_Adc()*50/255;
 151   3                if(ucVol_Val > ucVol_Thr)
 152   3                  ucVol_Flag = 1;
 153   3                else
 154   3                {
 155   4                  ucVol_Flag = 0;
 156   4                  ucLed &= 0x7f;
 157   4                }
 158   3                sprintf(pucSeg_Buf, "U     %02.1f", (float)ucVol_Val/10.0);
 159   3                break;
 160   3              case 1:           // 频率
 161   3                sprintf(pucSeg_Buf, "F  %5u", (unsigned int)uiFre_Val);
 162   3                break;
 163   3              case 2:           // 温度
 164   3                uiTem_Val = rd_temperature();
 165   3                sprintf(pucSeg_Buf, "C   %04.2f", (float)uiTem_Val/16.0);
 166   3            }break;
 167   2          case 0x10:            // 回显
 168   2            switch(ucState)
 169   2            {
 170   3              case 0x10:          // 电压
 171   3                sprintf(pucSeg_Buf, "HU    %02.1f", (float)ucVol_Echo/10.0);
 172   3                break;
 173   3              case 0x11:          // 频率
 174   3                sprintf(pucSeg_Buf, "HF %5u", uiFre_Echo);
 175   3                break;
 176   3              case 0x12:          // 温度 
 177   3                sprintf(pucSeg_Buf, "HC  %04.2f", (float)uiTem_Echo/16.0);
 178   3            }break;
C51 COMPILER V9.56.0.0   MAIN                                                              07/04/2019 16:23:38 PAGE 4   

 179   2          case 0x20:
 180   2            sprintf(pucSeg_Buf, "P     %02.1f", (float)ucVol_Thr/10.0);
 181   2        }
 182   1        Seg_Tran(pucSeg_Buf, pucSeg_Code);
 183   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1001    ----
   CONSTANT SIZE    =     75    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     45    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
