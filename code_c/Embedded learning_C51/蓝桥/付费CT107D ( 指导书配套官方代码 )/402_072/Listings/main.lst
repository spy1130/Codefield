C51 COMPILER V9.56.0.0   MAIN                                                              06/30/2019 17:27:45 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_C51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver) DEFINE(T0_COUNT,EEPRO
                    -M_AT24C02,PCF8591_ADC) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "tim.h"
   2          #include "key.h"
   3          #include "seg.h"
   4          #include "stdio.h"
   5          #include "ds1302.h"
   6          #include "iic.h"
   7          
   8          unsigned int  uiSeg_Dly;
   9          unsigned int  uiVol_Val, uiFre_Val;
  10          unsigned int  uiVol_Low, uiVol_High;
  11          unsigned char pucRtc[3] = {23, 59, 50};
  12          unsigned char ucState, ucSec, pucEvent[4];
  13          unsigned char pucSeg_Buf[9], pucSeg_Code[8], ucSeg_Pos;
  14          unsigned char ucKey_Dly, ucKey_Old;
  15          unsigned long ulms;
  16          
  17          void Timer0Init(void)       // 16位计数器模式
  18          {
  19   1        AUXR &= 0x7F;           // 定时器时钟12T模式
  20   1        TMOD |= 5;            // 设置16位计数器模式
  21   1        TL0 = 0;              // 设置计数初值
  22   1        TH0 = 0;              // 设置计数初值
  23   1        TF0 = 0;              // 清除TF0标志
  24   1        TR0 = 1;              // 开始计数
  25   1      }
  26          
  27          void Key_Proc(void);
  28          void Seg_Proc(void);
  29          
  30          void main(void)
  31          { 
  32   1        Cls_Peripheral();
  33   1        Timer1Init();
  34   1        Timer0Init();
  35   1      
  36   1        Set_RTC(pucRtc);
  37   1        EEPROM_Read(pucSeg_Buf, 0, 4);
  38   1        uiVol_Low = (pucSeg_Buf[1]<<8) + pucSeg_Buf[0];
  39   1        uiVol_High = (pucSeg_Buf[3]<<8) + pucSeg_Buf[2];
  40   1        if(uiVol_Low > 5000) uiVol_Low = 1000;
  41   1        if(uiVol_High > 5000) uiVol_High = 2000;
  42   1      
  43   1        while(1)
  44   1        {
  45   2          Key_Proc();
  46   2          Seg_Proc();
  47   2        }
  48   1      }
  49          
  50          void Time_1(void) interrupt 3
  51          {
  52   1        ulms++;
  53   1        if(++ucKey_Dly == 10)
  54   1          ucKey_Dly = 0;
C51 COMPILER V9.56.0.0   MAIN                                                              06/30/2019 17:27:45 PAGE 2   

  55   1        if(++uiSeg_Dly == 500)
  56   1          uiSeg_Dly = 0;
  57   1        if(!(ulms % 1000))
  58   1        {
  59   2          ucSec++;
  60   2          uiFre_Val = (TH0<<8)+TL0;
  61   2          TH0 = 0;
  62   2          TL0 = 0;
  63   2        }
  64   1        Seg_Disp(pucSeg_Code, ucSeg_Pos);
  65   1        if(++ucSeg_Pos == 8) ucSeg_Pos = 0;
  66   1      }
  67          
  68          void Key_Proc(void)
  69          {
  70   1        unsigned char ucKey_Val, ucKey_Down;
  71   1      
  72   1        if(ucKey_Dly) return;
  73   1        ucKey_Dly = 1;
  74   1      
  75   1        ucKey_Val = Key_Read();
  76   1        ucKey_Down = ucKey_Val & (ucKey_Old ^ ucKey_Val);
  77   1        ucKey_Old = ucKey_Val;
  78   1        
  79   1        switch(ucKey_Down)
  80   1        {
  81   2          case 5:             // S5：切换显示时钟、电压、频率或事件
  82   2            ucState = (ucState&0xf0)+0x10;
  83   2            if(ucState >= 0x40) ucState = 0;
  84   2            if(ucState == 0x30)
  85   2            {               // 读取事件
  86   3              EEPROM_Read(pucEvent, 4, 4);
  87   3              if(pucEvent[0] > 2) pucEvent[0] = 0;
  88   3              if(pucEvent[1] > 24) pucEvent[1] = 0;
  89   3              if(pucEvent[2] > 60) pucEvent[2] = 0;
  90   3              if(pucEvent[3] > 60) pucEvent[3] = 0;
  91   3            }break;
  92   2          case 4:             // S4：功能选择
  93   2            switch(ucState&0xf0)
  94   2            {
  95   3              case 0:           // 选择显示时钟、设置时、设置分或设置秒
  96   3                if(++ucState == 4)
  97   3                {
  98   4                  ucState = 0;
  99   4                  Set_RTC(pucRtc);      // 设置时钟
 100   4                }break;
 101   3              case 0x10:          // 选择显示电压、设置电压上限或下限
 102   3                if(++ucState == 0x13)
 103   3                {
 104   4                  ucState = 0x10;
 105   4                  // 保存阈值
 106   4                  pucSeg_Buf[0] = uiVol_Low & 0xff;
 107   4                  pucSeg_Buf[1] = uiVol_Low >> 8;
 108   4                  pucSeg_Buf[2] = uiVol_High & 0xff;
 109   4                  pucSeg_Buf[3] = uiVol_High >> 8;
 110   4                  EEPROM_Write(pucSeg_Buf, 0, 4);
 111   4                }break;
 112   3              case 0x20:          // 选择显示频率或周期
 113   3                if(++ucState == 0x22) ucState = 0x20;
 114   3                break;
 115   3              case 0x30:          // 选择显示事件类型或时间
 116   3                if(++ucState == 0x32) ucState = 0x30;
C51 COMPILER V9.56.0.0   MAIN                                                              06/30/2019 17:27:45 PAGE 3   

 117   3            }break;
 118   2          case 9:             // S9：参数加
 119   2            switch(ucState)
 120   2            {
 121   3              case 1:
 122   3                if(++pucRtc[0] >= 24) pucRtc[0] = 0;
 123   3                break;
 124   3              case 2:
 125   3                if(++pucRtc[1] >= 60) pucRtc[1] = 0;
 126   3                break;
 127   3              case 3:
 128   3                if(++pucRtc[2] >= 60) pucRtc[2] = 0;
 129   3                break;
 130   3              case 0x11:
 131   3                if(uiVol_High <= 4500) uiVol_High += 500;
 132   3                break;
 133   3              case 0x12:
 134   3                if(uiVol_High - uiVol_Low > 500) uiVol_Low += 500;
 135   3            }break;
 136   2          case 8:             // S8：参数减
 137   2            switch(ucState)
 138   2            {
 139   3              case 1:
 140   3                if(pucRtc[0]) pucRtc[0]--;
 141   3                else pucRtc[0] = 23;
 142   3                break;
 143   3              case 2:
 144   3                if(pucRtc[1]) pucRtc[1]--;
 145   3                else pucRtc[1] = 59;
 146   3                break;
 147   3              case 3:
 148   3                if(pucRtc[2]) pucRtc[2]--;
 149   3                else pucRtc[2] = 59;
 150   3                break;
 151   3              case 0x11:
 152   3                if(uiVol_High - uiVol_Low > 500) uiVol_High -= 500;
 153   3                break;
 154   3              case 0x12:
 155   3                if(uiVol_Low >= 500) uiVol_Low -= 500;
 156   3            }
 157   2        }
 158   1        Led_Disp(ucState+0x11);
 159   1      }
 160          
 161          void Seg_Proc(void)
 162          {
 163   1        if(uiSeg_Dly) return;
 164   1        uiSeg_Dly = 1;
 165   1      
 166   1        switch(ucState&0xf0)
 167   1        {
 168   2          case 0:             // 显示时钟
 169   2            if(!ucState) Read_RTC(pucRtc);
 170   2            sprintf(pucSeg_Buf, "%02u-%02u-%02u", (unsigned int)pucRtc[0],\
 171   2              (unsigned int)pucRtc[1], (unsigned int)pucRtc[2]);
 172   2            if(ucSec&1)
 173   2              switch(ucState)
 174   2              {
 175   3                case 1:           // 熄灭时
 176   3                pucSeg_Buf[0] = 0xff;
 177   3                pucSeg_Buf[1] = 0xff;
 178   3                break;
C51 COMPILER V9.56.0.0   MAIN                                                              06/30/2019 17:27:45 PAGE 4   

 179   3              case 2:           // 熄灭分
 180   3                pucSeg_Buf[3] = 0xff;
 181   3                pucSeg_Buf[4] = 0xff;
 182   3                break;
 183   3              case 3:           // 熄灭秒 
 184   3                pucSeg_Buf[6] = 0xff;
 185   3                pucSeg_Buf[7] = 0xff;
 186   3             }break;
 187   2          case 0x10:
 188   2            uiVol_Val = PCF8591_Adc()*19.6;  // 5000/255=19.6
 189   2            if((uiVol_Val<uiVol_Low)||(uiVol_Val>uiVol_High))
 190   2            {               // 保存事件
 191   3              if(uiVol_Val<uiVol_Low) pucSeg_Buf[0] = 0;
 192   3              else pucSeg_Buf[0] = 1;
 193   3              pucSeg_Buf[1] = pucRtc[0];
 194   3              pucSeg_Buf[2] = pucRtc[1];
 195   3              pucSeg_Buf[3] = pucRtc[2];
 196   3              EEPROM_Write(pucSeg_Buf, 4, 4);
 197   3            }
 198   2            if(ucState == 0x10)
 199   2              sprintf(pucSeg_Buf, "-1- %04u", uiVol_Val);
 200   2            else
 201   2            {               // 显示阈值
 202   3              sprintf(pucSeg_Buf, "%04u%04u", uiVol_High, uiVol_Low);
 203   3              if(ucSec&1)
 204   3                if(ucState == 0x11)
 205   3                {             // 熄灭上限
 206   4                  pucSeg_Buf[0] = 0xff;
 207   4                  pucSeg_Buf[1] = 0xff;
 208   4                  pucSeg_Buf[2] = 0xff;
 209   4                  pucSeg_Buf[3] = 0xff;
 210   4                }
 211   3                else
 212   3                {             // 熄灭下限
 213   4                  pucSeg_Buf[4] = 0xff;
 214   4                  pucSeg_Buf[5] = 0xff;
 215   4                  pucSeg_Buf[6] = 0xff;
 216   4                  pucSeg_Buf[7] = 0xff;
 217   4                }
 218   3            }break;
 219   2          case 0x20:
 220   2            switch(ucState)
 221   2            {
 222   3              case 0x20:          // 显示频率
 223   3                sprintf(pucSeg_Buf, "-2-%05u", (unsigned int)uiFre_Val);
 224   3                break;
 225   3              case 0x21:          // 显示周期
 226   3                sprintf(pucSeg_Buf, "-3-%05.0f", (float)1000000.0/uiFre_Val);
 227   3            }break;
 228   2          case 0x30:
 229   2            switch(ucState)
 230   2            {
 231   3              case 0x30:          // 显示事件类型
 232   3                sprintf(pucSeg_Buf, "      %02u", (unsigned int)pucEvent[0]);
 233   3                break;
 234   3              case 0x31:          // 显示事件时间
 235   3                sprintf(pucSeg_Buf, "%02u-%02u-%02u", (unsigned int)pucEvent[1],\
 236   3                  (unsigned int)pucEvent[2], (unsigned int)pucEvent[3]);
 237   3            }
 238   2        }
 239   1        Seg_Tran(pucSeg_Buf, pucSeg_Code);
 240   1      }
C51 COMPILER V9.56.0.0   MAIN                                                              06/30/2019 17:27:45 PAGE 5   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1298    ----
   CONSTANT SIZE    =     62    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     43    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
