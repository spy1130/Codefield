C51 COMPILER V9.56.0.0   MAIN                                                              06/29/2019 09:17:00 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_C51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver) DEFINE(EEPROM_AT24C02
                    -,PCF8591_ADC) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "tim.h"
   2          #include "key.h"
   3          #include "seg.h"
   4          #include "stdio.h"
   5          #include "iic.h"
   6          
   7          unsigned int  puiInter[4];
   8          unsigned char ucMode=1, ucLedi, ucLedj;
   9          unsigned char ucBright=1, ucBright_Flag, ucRun, ucNum;
  10          unsigned char pucLed_Val[4][8]
  11            ={0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  12              0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01,
  13              0x81, 0x42, 0x24, 0x18, 0x81, 0x42, 0x24, 0x18,
  14              0x18, 0x24, 0x42, 0x81, 0x18, 0x24, 0x42, 0x81};
  15          unsigned char ucState, uc800ms, ucLed;
  16          unsigned char pucSeg_Buf[9], pucSeg_Code[8], ucSeg_Pos;
  17          unsigned char ucKey_Dly, ucKey_Old;
  18          unsigned long ulms, ulStart;
  19          
  20          void Int_Proc(void);
  21          void Key_Proc(void);
  22          void Seg_Proc(void);
  23          void Led_Proc(void);
  24          
  25          void main(void)
  26          {
  27   1        Cls_Peripheral();
  28   1        Timer1Init();
  29   1      
  30   1        Int_Proc();
  31   1      
  32   1        while(1)
  33   1        {
  34   2          Key_Proc();
  35   2          Seg_Proc();
  36   2          Led_Proc();
  37   2        }
  38   1      }
  39          
  40          void Time_1(void) interrupt 3
  41          {
  42   1        ulms++;
  43   1        if(++ucKey_Dly == 10)
  44   1          ucKey_Dly = 0;
  45   1        if(!(ulms % 800))
  46   1          uc800ms++;
  47   1        Seg_Disp(pucSeg_Code, ucSeg_Pos);
  48   1        if(++ucSeg_Pos == 8) ucSeg_Pos = 0;
  49   1        if(ucRun)
  50   1        {
  51   2          if(ucBright > ucNum)
  52   2            Led_Disp(ucLed);
  53   2          else
  54   2            Led_Disp(0);
C51 COMPILER V9.56.0.0   MAIN                                                              06/29/2019 09:17:00 PAGE 2   

  55   2          if(++ucNum == 5)
  56   2            ucNum = 0;
  57   2        }
  58   1        else
  59   1          Led_Disp(0);
  60   1      }
  61          
  62          void Int_Proc(void)
  63          {
  64   1        unsigned char i;
  65   1        EEPROM_Read(pucSeg_Buf, 0, 4);
  66   1        for(i=0; i<4; i++)
  67   1          if((puiInter[0]>=4) && (puiInter[0]<=12))
  68   1            puiInter[i] = pucSeg_Buf[i]*100;
  69   1          else
  70   1            puiInter[i] = 400;
  71   1      }
  72          
  73          void Key_Proc(void)
  74          {
  75   1        unsigned char ucKey_Val, ucKey_Down;
  76   1      
  77   1        if(ucKey_Dly) return;
  78   1        ucKey_Dly = 1;
  79   1      
  80   1        ucKey_Val = Key_Read();
  81   1        ucKey_Down = ucKey_Val & (ucKey_Old ^ ucKey_Val);
  82   1        ucKey_Old = ucKey_Val;
  83   1        
  84   1        switch(ucKey_Down)
  85   1        {
  86   2          case 5:             // S5
  87   2            ucRun ^= 1;
  88   2            ulStart = ulms;
  89   2            ucLed = pucLed_Val[0][0];
  90   2            ucLedi = 0;
  91   2            ucLedj = 1;
  92   2            break;
  93   2          case 4:             // S4
  94   2            if(++ucState == 3)
  95   2            {
  96   3              ucState = 0;
  97   3              pucSeg_Buf[0] = puiInter[0]/100;
  98   3              pucSeg_Buf[1] = puiInter[1]/100;
  99   3              pucSeg_Buf[2] = puiInter[2]/100;
 100   3              pucSeg_Buf[3] = puiInter[3]/100;
 101   3              EEPROM_Write(pucSeg_Buf, 0, 4);
 102   3            }break;
 103   2          case 9:
 104   2            if(ucState == 1)
 105   2              if(++ucMode == 5)
 106   2                ucMode = 1;
 107   2            if(ucState == 2)
 108   2            {
 109   3              puiInter[ucMode-1] += 100;
 110   3              if(puiInter[ucMode-1] == 1300)
 111   3                puiInter[ucMode-1] = 400;
 112   3            }break;
 113   2          case 8:
 114   2            if(ucState == 1)
 115   2              if(--ucMode == 0)
 116   2                ucMode = 4;
C51 COMPILER V9.56.0.0   MAIN                                                              06/29/2019 09:17:00 PAGE 3   

 117   2            if(ucState == 2)
 118   2            {
 119   3              puiInter[ucMode-1] -= 100;
 120   3              if(puiInter[ucMode-1] == 300)
 121   3                puiInter[ucMode-1] = 1200;
 122   3            }
 123   2        }
 124   1        if(!ucState && (ucKey_Old == 8))
 125   1          ucBright_Flag = 1;
 126   1        if(!ucState && !ucKey_Old)
 127   1          ucBright_Flag = 0;
 128   1      }
 129          
 130          void Seg_Proc(void)
 131          {
 132   1        if(ucState)
 133   1        {
 134   2          sprintf(pucSeg_Buf, "-%1u- %4u", (unsigned int)ucMode,\
 135   2            (unsigned int)puiInter[ucMode-1]);
 136   2          if(uc800ms&1)
 137   2          {
 138   3            if(ucState == 1)
 139   3              pucSeg_Buf[1] = 0xff;
 140   3            else
 141   3            {
 142   4              pucSeg_Buf[4] = 0xff;
 143   4              pucSeg_Buf[5] = 0xff;
 144   4              pucSeg_Buf[6] = 0xff;
 145   4              pucSeg_Buf[7] = 0xff;
 146   4            }
 147   3          }
 148   2        }
 149   1        else
 150   1        {
 151   2          if(ucBright_Flag)
 152   2            sprintf(pucSeg_Buf, "      -%1u", (unsigned int)ucBright);
 153   2          else
 154   2            sprintf(pucSeg_Buf, "        ");
 155   2        }
 156   1        Seg_Tran(pucSeg_Buf, pucSeg_Code);
 157   1        ucBright = (PCF8591_Adc()>>6)+1;
 158   1      }
 159          
 160          void Led_Proc(void)
 161          {
 162   1        if(ulms-ulStart >= puiInter[ucLedi])
 163   1        {
 164   2          ulStart = ulms;
 165   2          ucLed = pucLed_Val[ucLedi][ucLedj];
 166   2          if(++ucLedj == 8)
 167   2          {
 168   3            ucLedj = 0;
 169   3            if(++ucLedi == 4)
 170   3              ucLedi = 0;
 171   3          }
 172   2        }
 173   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    823    ----
   CONSTANT SIZE    =     30    ----
C51 COMPILER V9.56.0.0   MAIN                                                              06/29/2019 09:17:00 PAGE 4   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     78    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
