C51 COMPILER V9.59.0.0   MAIN                                                              02/29/2024 16:09:23 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver) DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "main.h"
   2          /* LED显示 */
   3          uchar ucLed[8] = {0, 0, 0, 0, 0, 0, 0, 0};
   4          
   5          /* 数码管显示 */
   6          uchar Seg_Slow_Down;                                 // 数码管减速
   7          uchar Seg_Buf[8] = {10, 10, 10, 10, 10, 10, 10, 10}; // 数码管显示的值
   8          uchar Seg_Pos;                                       // 数码管指示
   9          uchar Seg_Point[8] = {0, 0, 0, 0, 0, 0, 0, 0};       // 某位是否显示小数点
  10          
  11          /* 时间方面 */
  12          uchar ucRtc[3] = {0x13, 0x11, 0x11}; // 初始化时间13:11:11
  13          
  14          /* 键盘方面 */
  15          uchar Key_Slow_Down;
  16          
  17          /* 显示 */
  18          uchar Seg_show_mode; // 0 模式界面 1 输出界面
  19          uchar Control_mode;
  20          
  21          /* 数据 */
  22          uint temperature_value_10x;
  23          uchar light_value;
  24          uchar DAC_out_dig;     // 数字输出0-255
  25          uchar DAC_out_ana_10x; // 模拟输出0-50
  26          /* 键盘处理函数 */
  27          void Key_Proc()
  28          {
  29   1          static uchar Key_Val, Key_Down, Key_Up, Key_Old;
  30   1          if (Key_Slow_Down)
  31   1              return;
  32   1          Key_Slow_Down = 1;
  33   1      
  34   1          Key_Val = Key_Read();
  35   1          Key_Down = Key_Val & (Key_Old ^ Key_Val);
  36   1          Key_Up = ~Key_Val & (Key_Old ^ Key_Val);
  37   1          Key_Old = Key_Val;
  38   1          if (Key_Down == 4)
  39   1              Control_mode = (++Control_mode) % 2;
  40   1          if (Key_Down == 5)
  41   1              Seg_show_mode = (++Seg_show_mode) % 2;
  42   1      }
  43          /* 数码管处理函数 */
  44          void Seg_Proc()
  45          {
  46   1          if (Seg_Slow_Down)
  47   1              return;
  48   1          Seg_Slow_Down = 1;
  49   1          temperature_value_10x = rd_temperature() * 10;
  50   1          light_value = Ad_Read(0x41);
  51   1          DAC_out_dig = DAC_out_ana_10x * 51 / 10;
  52   1          Da_Write(DAC_out_dig);
  53   1          switch (Seg_show_mode)
  54   1          {
C51 COMPILER V9.59.0.0   MAIN                                                              02/29/2024 16:09:23 PAGE 2   

  55   2          case 0:
  56   2              /* 模式界面 */
  57   2              Seg_Buf[0] = Control_mode + 1;
  58   2              Seg_Buf[1] = Seg_Buf[2] = Seg_Buf[3] = Seg_Buf[4] = 10;
  59   2              if (Control_mode == 0)
  60   2              {
  61   3      
  62   3                  Seg_Buf[5] = temperature_value_10x / 100 % 10;
  63   3                  Seg_Buf[6] = temperature_value_10x / 10 % 10;
  64   3                  Seg_Buf[7] = temperature_value_10x % 10;
  65   3                  Seg_Point[6] = 1;
  66   3              }
  67   2              else
  68   2              {
  69   3                  Seg_Buf[5] = (light_value / 100 % 10 == 0) ? 10 : light_value / 100 % 10;
  70   3                  Seg_Buf[6] = ((light_value / 10 % 10 == 0) && (Seg_Buf[5] == 10)) ? 10 : light_value / 10 % 10
             -;
  71   3                  Seg_Buf[7] = light_value % 10;
  72   3                  Seg_Point[6] = 0;
  73   3              }
  74   2              break;
  75   2      
  76   2          case 1:
  77   2              /* 输出界面 */
  78   2              Seg_Buf[0] = 11; // U
  79   2      
  80   2              Seg_Buf[1] = Seg_Buf[2] = Seg_Buf[3] = Seg_Buf[4] = Seg_Buf[5] = 10;
  81   2              Seg_Buf[6] = DAC_out_ana_10x / 10 % 10;
  82   2              Seg_Buf[7] = DAC_out_ana_10x % 10;
  83   2              Seg_Point[6] = 1;
  84   2              break;
  85   2          }
  86   1      }
  87          
  88          /* LED处理函数 */
  89          void Led_Proc()
  90          {
  91   1          if (Control_mode == 0)
  92   1          {
  93   2              if (temperature_value_10x >= 400)
  94   2                  DAC_out_ana_10x = 50;
  95   2              else if (temperature_value_10x <= 100)
  96   2                  DAC_out_ana_10x = 10;
  97   2              else
  98   2                  DAC_out_ana_10x =
  99   2                      (temperature_value_10x - 100) * 2 / 15 + 10;
 100   2          }
 101   1          else
 102   1          {
 103   2              if (light_value >= 240)
 104   2                  DAC_out_ana_10x = 50;
 105   2              else if (light_value <= 10)
 106   2                  DAC_out_ana_10x = 10;
 107   2              else
 108   2                  DAC_out_ana_10x =
 109   2                      (light_value - 10) * 4 / 23 + 10;
 110   2          }
 111   1          ucLed[0] = (Control_mode == 0);
 112   1          ucLed[1] = (Control_mode == 1);
 113   1      }
 114          
 115          /* 定时器0中断初始化 */
C51 COMPILER V9.59.0.0   MAIN                                                              02/29/2024 16:09:23 PAGE 3   

 116          void Timer0_Init(void) // 1毫秒@12.000MHz
 117          {
 118   1          AUXR &= 0x7F; // 定时器时钟12T模式
 119   1          TMOD &= 0xF0; // 设置定时器模式
 120   1          TL0 = 0x18;   // 设置定时初始值
 121   1          TH0 = 0xFC;   // 设置定时初始值
 122   1          TF0 = 0;      // 清除TF0标志
 123   1          TR0 = 1;      // 定时器0开始计时
 124   1          ET0 = 1;
 125   1          EA = 1;
 126   1      }
 127          
 128          /* 定时器0中断函数 */
 129          void Timer0_ISR(void) interrupt 1
 130          {
 131   1          if (++Key_Slow_Down == 10)
 132   1              Key_Slow_Down = 0;
 133   1          if (++Seg_Slow_Down == 200)
 134   1              Seg_Slow_Down = 0;
 135   1          if (++Seg_Pos == 8)
 136   1              Seg_Pos = 0;
 137   1          Seg_Disp(Seg_Pos, Seg_Buf[Seg_Pos], Seg_Point[Seg_Pos]);
 138   1          Led_Disp(Seg_Pos, ucLed[Seg_Pos]);
 139   1      }
 140          void Delay750ms(void) //@12.000MHz
 141          {
 142   1          unsigned char data i, j, k;
 143   1      
 144   1          _nop_();
 145   1          _nop_();
 146   1          i = 35;
 147   1          j = 51;
 148   1          k = 182;
 149   1          do
 150   1          {
 151   2              do
 152   2              {
 153   3                  while (--k)
 154   3                      ;
 155   3              } while (--j);
 156   2          } while (--i);
 157   1      }
 158          void main()
 159          {
 160   1          System_Init();
 161   1          Timer0_Init();
 162   1          Delay750ms();
 163   1          rd_temperature();
 164   1          while (1)
 165   1          {
 166   2              Key_Proc();
 167   2              Seg_Proc();
 168   2              Led_Proc();
 169   2          }
 170   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    639    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.59.0.0   MAIN                                                              02/29/2024 16:09:23 PAGE 4   

   DATA SIZE        =     41    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
