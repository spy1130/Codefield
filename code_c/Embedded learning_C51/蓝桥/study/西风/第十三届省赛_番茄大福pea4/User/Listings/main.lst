C51 COMPILER V9.60.7.0   MAIN                                                              03/16/2024 00:28:54 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver) DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          /*Created By pea4-*/
   2          
   3          /* 头文件声明区 */
   4          #include <STC15F2K60S2.H>//单片机寄存器专用头文件
   5          #include <Init.h>//初始化底层驱动专用头文件
   6          #include <Led.h>//Led底层驱动专用头文件
   7          #include <Key.h>//按键底层驱动专用头文件
   8          #include <Seg.h>//数码管底层驱动专用头文件
   9          #include <ds1302.h>//ds1302底层驱动专用头文件
  10          #include <onewire.h>//ds18b20底层驱动专用头文件
  11          
  12          #define u8 unsigned char
  13          #define u16 unsigned int
  14          
  15          /* 变量声明区 */
  16          u8 Key_Slow_Down;//按键减速变量
  17          u16 Seg_Slow_Down;//数码管减速变量
  18          u8 Key_Val,Key_Down,Key_Old,Key_Up;//按键专用变量
  19          u8 Seg_Buf[8] = {16,16,16,16,16,16,16,16};//数码管显示数据存放数组
  20          u8 Seg_Point[8] = {0,0,0,0,0,0,0,0};//数码管小数点数据存放数组
  21          u8 Seg_Pos;//数码管扫描专用变量
  22          u8 ucLed[8] = {0,0,0,0,0,0,0,0};//Led显示数据存放数组
  23          
  24          u16 Temperature=0;//温度变量
  25          u8 Relay_Buf=0;//继电器变量
  26          u8 Display_Mode = 0; // 0-温度显示 1-时间显示 2- 参数设置
  27          u16 Timer_5000ms=0;//5秒计时变量
  28          u8 Timer_100ms=0;//0.1秒计时变量
  29          u8 Temp_Thres=23;//温度阈值
  30          u8 Temp_Thres_Buf=0;//温度阈值显示缓存
  31          
  32          bit Relay_Mode = 1;//继电器
  33          bit Alarm_Flag=0;
  34          bit Led_Flash_Flag=0;
  35          bit Flash=0;//闪烁标志位
  36          
  37          u8 ucRtc[3]={23,59,30};//ds1302时间寄存器
  38          
  39          /* 键盘处理函数 */
  40          void Key_Proc()
  41          {
  42   1              if(Key_Slow_Down) return;
  43   1              Key_Slow_Down = 1;//键盘减速程序
  44   1      
  45   1              Key_Val = Key_Read();//实时读取键码值
  46   1              Key_Down = Key_Val & (Key_Old ^ Key_Val);//捕捉按键下降沿
  47   1              Key_Up = ~Key_Val & (Key_Old ^ Key_Val);//捕捉按键上降沿
  48   1              Key_Old = Key_Val;//辅助扫描变量
  49   1      
  50   1              switch(Key_Down)
  51   1              {
  52   2                      case 12:
  53   2                              switch(Display_Mode)
  54   2                              {
C51 COMPILER V9.60.7.0   MAIN                                                              03/16/2024 00:28:54 PAGE 2   

  55   3                                      case 0:
  56   3                                              Display_Mode = 1;
  57   3                                      break;
  58   3                                      case 1:
  59   3                                              Temp_Thres_Buf=Temp_Thres;
  60   3                                              Display_Mode = 2;
  61   3                                      break;
  62   3                                      case 2:
  63   3                                              Temp_Thres=Temp_Thres_Buf;
  64   3                                              Display_Mode = 0;
  65   3                                      break;
  66   3                              }
  67   2                              break;
  68   2                      case 17:
  69   2                              if(Display_Mode == 1)
  70   2                                      Display_Mode = 3;
  71   2                              else if(Display_Mode == 2)
  72   2                              {
  73   3                                      if(Temp_Thres_Buf>10)
  74   3                                              Temp_Thres_Buf--;
  75   3                              }
  76   2                              break;
  77   2                      case 16:
  78   2                              if(Display_Mode == 2)
  79   2                              {
  80   3                                      if(Temp_Thres_Buf<99)
  81   3                                              Temp_Thres_Buf++;
  82   3                              }
  83   2                              break;
  84   2                      case 13:
  85   2                              ucLed[2]=0;
  86   2                              Relay_Buf=0;
  87   2                              Relay_Mode ^= 1;
  88   2                      break;
  89   2              }
  90   1              
  91   1              switch(Key_Up)
  92   1              {
  93   2                      case 17:
  94   2                              if(Display_Mode == 3)
  95   2                                      Display_Mode = 1;
  96   2                      break;
  97   2              }
  98   1      }
  99          
 100          //
 101          
 102          /* 信息处理函数 */
 103          void Seg_Proc()
 104          {
 105   1              if(Seg_Slow_Down) return;
 106   1              Seg_Slow_Down = 1;//数码管减速程序
 107   1              
 108   1              Read_Rtc(ucRtc);
 109   1              Temperature=rd_temperature();
 110   1              
 111   1              switch(Display_Mode)
 112   1              {
 113   2                      case 0:
 114   2                              Seg_Buf[0]=25;
 115   2                              Seg_Buf[1]=1;
 116   2                              Seg_Buf[2]=Seg_Buf[3]=Seg_Buf[4]=16;
C51 COMPILER V9.60.7.0   MAIN                                                              03/16/2024 00:28:54 PAGE 3   

 117   2                              if(Temperature/100 == 0) Seg_Buf[5]=16;
 118   2                              else Seg_Buf[5]=Temperature/100;
 119   2                              Seg_Buf[6]=32 + (Temperature/10 % 10);
 120   2                              Seg_Buf[7]=Temperature%10;
 121   2                              break;
 122   2                      case 1:
 123   2                              Seg_Buf[0]=25;
 124   2                              Seg_Buf[1]=2;
 125   2                              Seg_Buf[2]=16;
 126   2                              Seg_Buf[3]=ucRtc[0]/10;
 127   2                              Seg_Buf[4]=ucRtc[0]%10;
 128   2                              Seg_Buf[5]=17;
 129   2                              Seg_Buf[6]=ucRtc[1]/10;
 130   2                              Seg_Buf[7]=ucRtc[1]%10;
 131   2                              break;
 132   2                      case 3:
 133   2                              Seg_Buf[0]=25;
 134   2                              Seg_Buf[1]=2;
 135   2                              Seg_Buf[2]=16;
 136   2                              Seg_Buf[3]=ucRtc[1]/10;
 137   2                              Seg_Buf[4]=ucRtc[1]%10;
 138   2                              Seg_Buf[5]=17;
 139   2                              Seg_Buf[6]=ucRtc[2]/10;
 140   2                              Seg_Buf[7]=ucRtc[2]%10;
 141   2                              break;
 142   2                      case 2:
 143   2                              Seg_Buf[0]=25;
 144   2                              Seg_Buf[1]=3;
 145   2                              Seg_Buf[2]=Seg_Buf[3]=Seg_Buf[4]=Seg_Buf[5]=16;
 146   2                              if(Temp_Thres_Buf/10 == 0) Seg_Buf[6]=16;
 147   2                              else Seg_Buf[6]=Temp_Thres_Buf/10;
 148   2                              Seg_Buf[7]=Temp_Thres_Buf%10;
 149   2                              break;
 150   2              }
 151   1      }
 152          
 153          /* 其他显示函数 */
 154          void Led_Proc()
 155          {
 156   1              //如果整点并且Alarm_Flag还没有被置1
 157   1              if(ucRtc[1]==0x00 && ucRtc[2]==0x00 && Alarm_Flag==0)
 158   1                      Alarm_Flag=1;
 159   1              
 160   1              ucLed[0]=Alarm_Flag;//L1在整点也亮5秒
 161   1              ucLed[1]=Relay_Mode;//L2显示控制模式
 162   1              
 163   1              //继电器吸合就闪烁
 164   1              ucLed[2]=Relay_Buf?Flash:0;
 165   1              
 166   1              if(Relay_Mode)//温度控制模式
 167   1                      Relay_Buf=(Temperature > (Temp_Thres * 10));
 168   1              else//时间控制模式
 169   1                      Relay_Buf=Alarm_Flag;
 170   1      }
 171          
 172          /* 定时器0中断初始化函数 */
 173          void Timer0Init(void)           //1毫秒@12.000MHz
 174          {
 175   1              AUXR &= 0x7F;           //定时器时钟12T模式
 176   1              TMOD &= 0xF0;           //设置定时器模式
 177   1              TL0 = 0x18;             //设置定时初始值
 178   1              TH0 = 0xFC;             //设置定时初始值
C51 COMPILER V9.60.7.0   MAIN                                                              03/16/2024 00:28:54 PAGE 4   

 179   1              TF0 = 0;                //清除TF0标志
 180   1              TR0 = 1;                //定时器0开始计时
 181   1              ET0 = 1;    //定时器中断0打开
 182   1              EA = 1;     //总中断打开
 183   1      }
 184          
 185          /* 定时器0中断服务函数 */
 186          void Timer0Server() interrupt 1
 187          {  
 188   1              if(++Key_Slow_Down == 10) Key_Slow_Down = 0;//键盘减速专用
 189   1              if(++Seg_Slow_Down == 50) Seg_Slow_Down = 0;//数码管减速专用
 190   1      
 191   1              //整点亮五秒
 192   1              if(Alarm_Flag)Timer_5000ms++;
 193   1              else Timer_5000ms=0;
 194   1              if(Timer_5000ms==5000)
 195   1              {
 196   2                      Timer_5000ms=0;
 197   2                      Alarm_Flag=0;
 198   2              }
 199   1              
 200   1              //继电器吸合闪烁
 201   1              if(Relay_Buf)Timer_100ms++;
 202   1              else Timer_100ms=0; //不吸合就清空计时变量
 203   1              if(Timer_100ms==100)
 204   1              {
 205   2                      Timer_100ms=0;
 206   2                      Flash^=1;
 207   2              }
 208   1              
 209   1              
 210   1              if(++Seg_Pos == 8) Seg_Pos = 0;//数码管显示专用
 211   1              Seg_Disp(Seg_Pos,Seg_Buf[Seg_Pos],Seg_Point[Seg_Pos]);
 212   1              Led_Disp(Seg_Pos,ucLed[Seg_Pos]);
 213   1              Relay(Relay_Buf);
 214   1      }
 215          
 216          /* Main */
 217          void main()
 218          {
 219   1              System_Init();
 220   1              Set_Rtc(ucRtc);
 221   1              Temperature=rd_temperature();
 222   1              while(Temperature==850)Temperature=rd_temperature();
 223   1              Timer0Init();
 224   1              while (1)
 225   1              {
 226   2                      Key_Proc();
 227   2                      Seg_Proc();
 228   2                      Led_Proc();
 229   2              }
 230   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    739    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     44    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4    ----
C51 COMPILER V9.60.7.0   MAIN                                                              03/16/2024 00:28:54 PAGE 5   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
