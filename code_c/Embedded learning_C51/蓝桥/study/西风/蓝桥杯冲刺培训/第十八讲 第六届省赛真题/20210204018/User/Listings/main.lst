C51 COMPILER V9.60.7.0   MAIN                                                              03/31/2024 18:35:34 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\Applications\Keil_5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver) DEBUG OBJE
                    -CTEXTEND PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          /* 头文件声明区 */
   2          #include <STC15F2K60S2.H>//单片机寄存器专用头文件
   3          #include <Init.h>//初始化底层驱动专用头文件
   4          #include <Led.h>//Led底层驱动专用头文件
   5          #include <Key.h>//按键底层驱动专用头文件
   6          #include <Seg.h>//数码管底层驱动专用头文件
   7          #include "ds1302.h"  
   8          #include "onewire.h"
   9          
  10          /* 变量声明区 */
  11          unsigned char Key_Val,Key_Down,Key_Old,Key_Up;//按键专用变量
  12          unsigned char Key_Slow_Down;//按键减速专用变量
  13          unsigned char Seg_Buf[8] = {10,10,10,10,10,10,10,10};//数码管显示数据存放数组
  14          unsigned char Seg_Point[8] = {0,0,0,0,0,0,0,0};//数码管小数点数据存放数组
  15          unsigned char Seg_Pos;//数码管扫描专用变量
  16          unsigned int Seg_Slow_Down;//数码管减速专用变量
  17          unsigned char ucLed[8] = {0,0,0,0,0,0,0,0};//Led显示数据存放数组
  18          unsigned char Seg_Disp_Mode;//数码管显示模式变量 0-参数设置 1-时钟显示 2-温度显示
  19          unsigned char AcqInvl_Disp = 1;//采集间隔显示变量
  20          unsigned char AcqInvl_Ctrol = 1;//采集间隔控制变量
  21          unsigned char ucRtc[3] = {0x23,0x59,0x50};//系统时钟数据储存变量
  22          unsigned char Time_Data[4] = {1,5,30,60};//时间间隔数据储存数组
  23          unsigned char Time_Data_Index;
  24          bit Seg_Star_Flag;//数码管闪烁标志位
  25          unsigned char Temperature_Data[10];//温度采集数据储存数组
  26          unsigned char Temperature_Data_Index;
  27          unsigned int Sys_Tick;//系统计时器
  28          unsigned char Time_Sec;
  29          unsigned char Timer_200Ms;
  30          bit Led_Star_Flag;
  31          bit Led_Enable_Flag;
  32          
  33          /* 键盘处理函数 */
  34          void Key_Proc()
  35          {
  36   1              if(Key_Slow_Down) return;
  37   1              Key_Slow_Down = 1;//键盘减速程序
  38   1      
  39   1              Key_Val = Key_Read();//实时读取键码值
  40   1              Key_Down = Key_Val & (Key_Old ^ Key_Val);//捕捉按键下降沿
  41   1              Key_Up = ~Key_Val & (Key_Old ^ Key_Val);//捕捉按键上降沿
  42   1              Key_Old = Key_Val;//辅助扫描变量
  43   1              
  44   1              switch(Key_Down)
  45   1              {
  46   2                      case 4:
  47   2                              if(Seg_Disp_Mode == 0)
  48   2                              {
  49   3                                      if(++Time_Data_Index == 4)
  50   3                                              Time_Data_Index = 0;
  51   3                                      AcqInvl_Disp = Time_Data[Time_Data_Index];
  52   3                              }
  53   2                      break;
  54   2                      case 5:
C51 COMPILER V9.60.7.0   MAIN                                                              03/31/2024 18:35:34 PAGE 2   

  55   2                              if(Seg_Disp_Mode == 0)
  56   2                              {
  57   3                                      AcqInvl_Ctrol = AcqInvl_Disp;
  58   3                                      Temperature_Data[Temperature_Data_Index] = rd_temperature();
  59   3                                      Temperature_Data_Index++;
  60   3                                      Seg_Disp_Mode = 1;
  61   3                              }
  62   2                      break;
  63   2                      case 6:
  64   2                              if(Seg_Disp_Mode == 2)
  65   2                              {
  66   3                                      Led_Enable_Flag = 0;
  67   3                                      if(++Temperature_Data_Index == 10)
  68   3                                              Temperature_Data_Index = 0;
  69   3                              }
  70   2                      break;
  71   2                      case 7:
  72   2                              if(Seg_Disp_Mode == 2)
  73   2                              {
  74   3                                      Temperature_Data_Index = 0;
  75   3                                      Seg_Disp_Mode = 0;
  76   3                              }
  77   2                      break;
  78   2              }
  79   1      
  80   1      }
  81          
  82          /* 信息处理函数 */
  83          void Seg_Proc()
  84          {
  85   1              unsigned char i;
  86   1              if(Seg_Slow_Down) return;
  87   1              Seg_Slow_Down = 1;//数码管减速程序
  88   1      
  89   1              /* 数据读取区域 */
  90   1              Read_Rtc(ucRtc);
  91   1              if(Time_Sec == AcqInvl_Ctrol)
  92   1              {
  93   2                      Time_Sec = 0;
  94   2                      Temperature_Data[Temperature_Data_Index] = rd_temperature();
  95   2                      if(++Temperature_Data_Index == 10)
  96   2                      {
  97   3                              Temperature_Data_Index = 0;
  98   3                              Led_Enable_Flag = 1;
  99   3                              Seg_Disp_Mode = 2;
 100   3                      }
 101   2              }
 102   1              
 103   1              /* 信息显示区域 */
 104   1              switch(Seg_Disp_Mode)
 105   1              {
 106   2                      case 0://参数设置
 107   2                              for(i=0;i<3;i++)
 108   2                                      Seg_Buf[i] = 10;
 109   2                              Seg_Buf[5] = 11;
 110   2                              Seg_Buf[6] = AcqInvl_Disp / 10;
 111   2                              Seg_Buf[7] = AcqInvl_Disp % 10;
 112   2                      break;
 113   2                      case 1:
 114   2                              for(i=0;i<3;i++)
 115   2                              {
 116   3                                      Seg_Buf[3*i] = ucRtc[i] / 16;
C51 COMPILER V9.60.7.0   MAIN                                                              03/31/2024 18:35:34 PAGE 3   

 117   3                                      Seg_Buf[3*i+1] = ucRtc[i] % 16;
 118   3                              }
 119   2                              Seg_Star_Flag = Seg_Buf[7] % 2;
 120   2                              Seg_Buf[2] = Seg_Buf[5] = Seg_Star_Flag?10:11;
 121   2                      break;
 122   2                      case 2:
 123   2                              Seg_Buf[0] = Seg_Buf[5] = 11;
 124   2                              Seg_Buf[1] = 0;
 125   2                              Seg_Buf[2] = Temperature_Data_Index;
 126   2                              Seg_Buf[3] = Seg_Buf[4] = 10;
 127   2                              Seg_Buf[6] = Temperature_Data[Temperature_Data_Index] / 10;
 128   2                              Seg_Buf[7] = Temperature_Data[Temperature_Data_Index] % 10;
 129   2                      break;
 130   2              }
 131   1      }
 132          
 133          /* 其他显示函数 */
 134          void Led_Proc()
 135          {
 136   1              ucLed[0] = Led_Enable_Flag & Led_Star_Flag;
 137   1      }
 138          
 139          /* 定时器0中断初始化函数 */
 140          void Timer0Init(void)           //1毫秒@12.000MHz
 141          {
 142   1              AUXR &= 0x7F;           //定时器时钟12T模式
 143   1              TMOD &= 0xF0;           //设置定时器模式
 144   1              TL0 = 0x18;             //设置定时初始值
 145   1              TH0 = 0xFC;             //设置定时初始值
 146   1              TF0 = 0;                //清除TF0标志
 147   1              TR0 = 1;                //定时器0开始计时
 148   1              ET0 = 1;    //定时器中断0打开
 149   1              EA = 1;     //总中断打开
 150   1      }
 151          
 152          /* 定时器0中断服务函数 */
 153          void Timer0Server() interrupt 1
 154          {  
 155   1              if(++Key_Slow_Down == 10) Key_Slow_Down = 0;//键盘减速专用
 156   1              if(++Seg_Slow_Down == 500) Seg_Slow_Down = 0;//数码管减速专用
 157   1              if(++Seg_Pos == 8) Seg_Pos = 0;//数码管显示专用
 158   1              Seg_Disp(Seg_Pos,Seg_Buf[Seg_Pos],Seg_Point[Seg_Pos]);
 159   1              Led_Disp(Seg_Pos,ucLed[Seg_Pos]);
 160   1              if(Seg_Disp_Mode == 1)
 161   1              {
 162   2                      if(++Sys_Tick == 1000)
 163   2                      {
 164   3                              Sys_Tick = 0;
 165   3                              Time_Sec++;
 166   3                      }
 167   2              }
 168   1              if(++Timer_200Ms == 200)
 169   1              {
 170   2                      Timer_200Ms = 0;
 171   2                      Led_Star_Flag ^= 1;
 172   2              }
 173   1      }
 174          
 175          /* Main */
 176          void main()
 177          {
 178   1              rd_temperature();
C51 COMPILER V9.60.7.0   MAIN                                                              03/31/2024 18:35:34 PAGE 4   

 179   1              Set_Rtc(ucRtc);
 180   1              System_Init();
 181   1              Timer0Init();
 182   1              while (1)
 183   1              {
 184   2                      Key_Proc();
 185   2                      Seg_Proc();
 186   2                      Led_Proc();
 187   2              }
 188   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    579    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     58       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
