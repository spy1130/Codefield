C51 COMPILER V9.54   MAIN                                                                  03/30/2023 13:13:13 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver) DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /* 头文件声明区 */
   2          #include <STC15F2K60S2.H>//单片机寄存器专用头文件
   3          #include <Init.h>//初始化底层驱动专用头文件
   4          #include <Led.h>//Led底层驱动专用头文件
   5          #include <Key.h>//按键底层驱动专用头文件
   6          #include <Seg.h>//数码管底层驱动专用头文件
   7          #include <ultrasound.h>
   8          
   9          /* 变量声明区 */
  10          unsigned char Key_Val,Key_Down,Key_Old,Key_Up;//按键专用变量
  11          unsigned char Key_Slow_Down;//按键减速专用变量
  12          unsigned char Seg_Buf[8] = {10,10,10,10,10,10,10,10};//数码管显示数据存放数组
  13          unsigned char Seg_Point[8] = {0,0,0,0,0,0,0,0};//数码管小数点数据存放数组
  14          unsigned char Seg_Pos;//数码管扫描专用变量
  15          unsigned int Seg_Slow_Down;//数码管减速专用变量
  16          unsigned char ucLed[8] = {0,0,0,0,0,0,0,0};//Led显示数据存放数组
  17          unsigned int Freq;//实时频率储存变量
  18          unsigned int Timer_1000Ms;//一千毫秒计时变量
  19          unsigned char Wave_Dat;//超声波测距变量
  20          bit Seg_Disp_Mode;//数码管显示模式变量 0-频率显示 1-距离显示
  21          bit Wave_Flag;//测距使能标志位 0-不使能 1-使能
  22          
  23          /* 键盘处理函数 */
  24          void Key_Proc()
  25          {
  26   1        if(Key_Slow_Down) return;
  27   1        Key_Slow_Down = 1;//键盘减速程序
  28   1      
  29   1        Key_Val = Key_Read();//实时读取键码值
  30   1        Key_Down = Key_Val & (Key_Old ^ Key_Val);//捕捉按键下降沿
  31   1        Key_Up = ~Key_Val & (Key_Old ^ Key_Val);//捕捉按键上降沿
  32   1        Key_Old = Key_Val;//辅助扫描变量
  33   1      
  34   1        switch(Key_Down)
  35   1        {
  36   2          case 4:
  37   2            Seg_Disp_Mode ^= 1;
  38   2          break;
  39   2        }
  40   1      }
  41          
  42          /* 信息处理函数 */
  43          void Seg_Proc()
  44          {
  45   1        unsigned char i = 3;//循环专用变量
  46   1        if(Seg_Slow_Down) return;
  47   1        Seg_Slow_Down = 1;//数码管减速程序
  48   1      
  49   1        /* 信息获取区域 */
  50   1        Wave_Dat = Wave_Read();
  51   1        
  52   1        
  53   1        /* 数据显示区域 */
  54   1        Seg_Buf[0] = 11;//标识符U
C51 COMPILER V9.54   MAIN                                                                  03/30/2023 13:13:13 PAGE 2   

  55   1        Seg_Buf[1] = 1 + (unsigned char)Seg_Disp_Mode;//界面标识符
  56   1        Seg_Buf[2] = 10;//熄灭
  57   1        Seg_Point[5] = Seg_Disp_Mode;
  58   1        
  59   1        if(Seg_Disp_Mode == 0) //处于频率显示界面
  60   1        {
  61   2          Seg_Buf[3] = Freq / 10000 % 10;
  62   2          Seg_Buf[4] = Freq / 1000 % 10;
  63   2          Seg_Buf[5] = Freq / 100 % 10;
  64   2          Seg_Buf[6] = Freq / 10 % 10;
  65   2          Seg_Buf[7] = Freq % 10;
  66   2          while(Seg_Buf[i] == 0)
  67   2          {
  68   3            Seg_Buf[i] = 10;
  69   3            if(++i == 7) break;
  70   3          }
  71   2        }
  72   1        else
  73   1        {
  74   2          Seg_Buf[3] = 10;
  75   2          Seg_Buf[4] = 10;
  76   2          Seg_Buf[5] = Wave_Dat / 100 % 10;
  77   2          Seg_Buf[6] = Wave_Dat / 10 % 10;
  78   2          Seg_Buf[7] = Wave_Dat % 10;
  79   2        }
  80   1      }
  81          
  82          /* 其他显示函数 */
  83          void Led_Proc()
  84          {
  85   1        
  86   1      }
  87          
  88          /* 定时器0初始化函数 */
  89          void Timer0Init(void)   //0毫秒@12.000MHz
  90          {
  91   1        AUXR &= 0x7F;   //定时器时钟12T模式
  92   1        TMOD &= 0xF0;   //设置定时器模式
  93   1        TMOD |= 0x04;   //设置计数模式
  94   1        TL0 = 0x00;   //设置定时初值
  95   1        TH0 = 0x00;   //设置定时初值
  96   1        TF0 = 0;    //清除TF0标志
  97   1        TR0 = 1;    //定时器0开始计时
  98   1      }
  99          
 100          /* 定时器2初始化函数 */
 101          void Timer2Init(void)   //1毫秒@12.000MHz
 102          {
 103   1        AUXR &= 0xFB;   //定时器时钟12T模式
 104   1        T2L = 0x18;   //设置定时初值
 105   1        T2H = 0xFC;   //设置定时初值
 106   1        AUXR |= 0x10;   //定时器2开始计时
 107   1        IE2  |=  0x04;    //允许定时器2中断
 108   1        EA = 1;         //总中断打开
 109   1      }
 110          
 111          
 112          /* 定时器0中断服务函数 */
 113          void Timer0Server() interrupt 12
 114          {  
 115   1        if(++Key_Slow_Down == 10) Key_Slow_Down = 0;//键盘减速专用
 116   1        if(++Seg_Slow_Down == 500) Seg_Slow_Down = 0;//数码管减速专用
C51 COMPILER V9.54   MAIN                                                                  03/30/2023 13:13:13 PAGE 3   

 117   1        if(++Seg_Pos == 8) Seg_Pos = 0;//数码管显示专用
 118   1        Seg_Disp(Seg_Pos,Seg_Buf[Seg_Pos],Seg_Point[Seg_Pos]);
 119   1        Led_Disp(Seg_Pos,ucLed[Seg_Pos]);
 120   1        
 121   1        if(++Timer_1000Ms == 1000) //实时读取频率值
 122   1        {
 123   2          Timer_1000Ms = 0;
 124   2          TR0 = 0;
 125   2          Freq = TH0 << 8 | TL0;
 126   2          TH0 = TL0 = 0;
 127   2          TR0 = 1;
 128   2        } 
 129   1      }
 130          
 131          /* Main */
 132          void main()
 133          {
 134   1        System_Init();
 135   1        Timer2Init();
 136   1        Timer0Init();
 137   1        while (1)
 138   1        {
 139   2          Key_Proc();
 140   2          Seg_Proc();
 141   2          Led_Proc();
 142   2        }
 143   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    474    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     37       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
