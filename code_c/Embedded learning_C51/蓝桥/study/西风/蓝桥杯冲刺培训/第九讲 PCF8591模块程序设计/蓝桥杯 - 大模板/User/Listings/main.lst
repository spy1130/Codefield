C51 COMPILER V9.54   MAIN                                                                  01/13/2023 19:27:04 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver) DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /* 头文件声明区 */
   2          #include <STC15F2K60S2.H>//单片机寄存器专用头文件
   3          #include <Init.h>//初始化底层驱动专用头文件
   4          #include <Led.h>//Led底层驱动专用头文件
   5          #include <Key.h>//按键底层驱动专用头文件
   6          #include <Seg.h>//数码管底层驱动专用头文件
   7          #include "iic.h"//数模转换底层驱动头文件
   8          
   9          /* 变量声明区 */
  10          unsigned char Key_Val,Key_Down,Key_Old,Key_Up;//按键专用变量
  11          unsigned char Key_Slow_Down;//按键减速专用变量
  12          unsigned char Seg_Buf[8] = {10,10,10,10,10,10,10,10};//数码管显示数据存放数组
  13          unsigned char Seg_Point[8] = {0,0,0,0,0,0,0,0};//数码管小数点数据存放数组
  14          unsigned char Seg_Pos;//数码管扫描专用变量
  15          unsigned int Seg_Slow_Down;//数码管减速专用变量
  16          unsigned char ucLed[8] = {0,0,0,0,0,0,0,0};//Led显示数据存放数组
  17          bit Seg_Disp_Mode;//数码管显示模式变量 0-电压显示界面 1-电压输出界面
  18          float Voltage;//实时电压变量
  19          float Voltage_Output;//实时电压输出变量
  20          bit Output_Mode;//输出模式专用变量 0-2V 1-随AD输出
  21          bit Seg_Flag = 1;//数码管功能标志位
  22          
  23          /* 键盘处理函数 */
  24          void Key_Proc()
  25          {
  26   1        if(Key_Slow_Down) return;
  27   1        Key_Slow_Down = 1;//键盘减速程序
  28   1      
  29   1        Key_Val = Key_Read();//实时读取键码值
  30   1        Key_Down = Key_Val & (Key_Old ^ Key_Val);//捕捉按键下降沿
  31   1        Key_Up = ~Key_Val & (Key_Old ^ Key_Val);//捕捉按键上降沿
  32   1        Key_Old = Key_Val;//辅助扫描变量
  33   1      
  34   1        switch(Key_Down)
  35   1        {
  36   2          case 19://显示界面切换按键
  37   2            Seg_Disp_Mode ^= 1;
  38   2          break;
  39   2          case 18://输出模式切换按键
  40   2            Output_Mode ^= 1;
  41   2          break;
  42   2          case 16://数码管功能按键
  43   2            Seg_Flag ^= 1;
  44   2          break;
  45   2        }
  46   1      }
  47          
  48          /* 信息处理函数 */
  49          void Seg_Proc()
  50          {
  51   1        if(Seg_Slow_Down) return;
  52   1        Seg_Slow_Down = 1;//数码管减速程序
  53   1        
  54   1        
C51 COMPILER V9.54   MAIN                                                                  01/13/2023 19:27:04 PAGE 2   

  55   1        Voltage = AD_Read(0x43) / 51.0;//实时读取RB2电压数据
  56   1        if(Output_Mode == 0)//固定输出2V
  57   1          Voltage_Output = 2;
  58   1        else
  59   1          Voltage_Output = Voltage;
  60   1        
  61   1        if(Seg_Disp_Mode == 0)//处于电压显示界面
  62   1        {
  63   2          Seg_Buf[0] = 11;//U
  64   2          Seg_Buf[5] = (unsigned char)Voltage;
  65   2          Seg_Buf[6] = (unsigned int)(Voltage * 100) / 10 % 10;
  66   2          Seg_Buf[7] = (unsigned int)(Voltage * 100) % 10;
  67   2          Seg_Point[5] = 1;//点亮小数点
  68   2        }
  69   1        else//处于电压输出界面
  70   1        {
  71   2          Seg_Buf[0] = 12;//F
  72   2          Seg_Buf[5] = (unsigned char)Voltage_Output;
  73   2          Seg_Buf[6] = (unsigned int)(Voltage_Output * 100) / 10 % 10;
  74   2          Seg_Buf[7] = (unsigned int)(Voltage_Output * 100) % 10;
  75   2          Seg_Point[5] = 1;//点亮小数点    
  76   2        }
  77   1      }
  78          
  79          /* 其他显示函数 */
  80          void Led_Proc()
  81          {
  82   1        unsigned char i;
  83   1        DA_Write(Voltage_Output);//电压输出
  84   1        for(i=0;i<2;i++)
  85   1          ucLed[i] = (i == Seg_Disp_Mode);
  86   1        if(Voltage < 1.5 || (Voltage >= 2.5 && Voltage < 3.5))
  87   1          ucLed[2] = 0;
  88   1        else
  89   1          ucLed[2] = 1;
  90   1        ucLed[3] = Output_Mode;
  91   1      }
  92          
  93          /* 定时器0中断初始化函数 */
  94          void Timer0Init(void)   //1毫秒@12.000MHz
  95          {
  96   1        AUXR &= 0x7F;   //定时器时钟12T模式
  97   1        TMOD &= 0xF0;   //设置定时器模式
  98   1        TL0 = 0x18;   //设置定时初始值
  99   1        TH0 = 0xFC;   //设置定时初始值
 100   1        TF0 = 0;    //清除TF0标志
 101   1        TR0 = 1;    //定时器0开始计时
 102   1        ET0 = 1;    //定时器中断0打开
 103   1        EA = 1;     //总中断打开
 104   1      }
 105          
 106          /* 定时器0中断服务函数 */
 107          void Timer0Server() interrupt 1
 108          {  
 109   1        if(++Key_Slow_Down == 10) Key_Slow_Down = 0;//键盘减速专用
 110   1        if(++Seg_Slow_Down == 500) Seg_Slow_Down = 0;//数码管减速专用
 111   1        if(++Seg_Pos == 8) Seg_Pos = 0;//数码管显示专用
 112   1        if(Seg_Flag == 1)
 113   1          Seg_Disp(Seg_Pos,Seg_Buf[Seg_Pos],Seg_Point[Seg_Pos]);
 114   1        else
 115   1          Seg_Disp(Seg_Pos,10,0);
 116   1        Led_Disp(Seg_Pos,ucLed[Seg_Pos]);
C51 COMPILER V9.54   MAIN                                                                  01/13/2023 19:27:04 PAGE 3   

 117   1      }
 118          
 119          /* Main */
 120          void main()
 121          {
 122   1        System_Init();
 123   1        Timer0Init();
 124   1        while (1)
 125   1        {
 126   2          Key_Proc();
 127   2          Seg_Proc();
 128   2          Led_Proc();
 129   2        }
 130   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    541    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     40    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
