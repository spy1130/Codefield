C51 COMPILER V9.54   MAIN                                                                  01/08/2023 19:51:30 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver) DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /* 头文件声明区 */
   2          #include <STC15F2K60S2.H>//单片机寄存器专用头文件
   3          #include <Init.h>//初始化底层驱动专用头文件
   4          #include <Led.h>//Led底层驱动专用头文件
   5          #include <Key.h>//按键底层驱动专用头文件
   6          #include <Seg.h>//数码管底层驱动专用头文件
   7          #include "iic.h"
   8          
   9          /* 变量声明区 */
  10          unsigned char Key_Val,Key_Down,Key_Old,Key_Up;//按键专用变量
  11          unsigned char Key_Slow_Down;//按键减速专用变量
  12          unsigned char Seg_Buf[8] = {10,10,10,10,10,10,10,10};//数码管显示数据存放数组
  13          unsigned char Seg_Point[8] = {0,0,0,0,0,0,0,0};//数码管小数点数据存放数组
  14          unsigned char Seg_Pos;//数码管扫描专用变量
  15          unsigned int Seg_Slow_Down;//数码管减速专用变量
  16          unsigned char ucLed[8] = {0,0,0,0,0,0,0,0};//Led显示数据存放数组
  17          unsigned char dat,dat2;
  18          
  19          /* 键盘处理函数 */
  20          void Key_Proc()
  21          {
  22   1        if(Key_Slow_Down) return;
  23   1        Key_Slow_Down = 1;//键盘减速程序
  24   1      
  25   1        Key_Val = Key_Read();//实时读取键码值
  26   1        Key_Down = Key_Val & (Key_Old ^ Key_Val);//捕捉按键下降沿
  27   1        Key_Up = ~Key_Val & (Key_Old ^ Key_Val);//捕捉按键上降沿
  28   1        Key_Old = Key_Val;//辅助扫描变量
  29   1      
  30   1      }
  31          
  32          /* 信息处理函数 */
  33          void Seg_Proc()
  34          {
  35   1        if(Seg_Slow_Down) return;
  36   1        Seg_Slow_Down = 1;//数码管减速程序
  37   1      
  38   1        dat2 = Ad_Read(0x41);
  39   1        dat = Ad_Read(0x43);
  40   1        Da_Write(255);
  41   1        
  42   1        Seg_Buf[0] = dat / 100 % 10;
  43   1        Seg_Buf[1] = dat / 10 % 10;
  44   1        Seg_Buf[2] = dat % 10;
  45   1        
  46   1        Seg_Buf[4] = dat2 / 100 % 10;
  47   1        Seg_Buf[5] = dat2 / 10 % 10;
  48   1        Seg_Buf[6] = dat2 % 10; 
  49   1        
  50   1        
  51   1      }
  52          
  53          /* 其他显示函数 */
  54          void Led_Proc()
C51 COMPILER V9.54   MAIN                                                                  01/08/2023 19:51:30 PAGE 2   

  55          {
  56   1        Relay(1);
  57   1      }
  58          
  59          /* 定时器0中断初始化函数 */
  60          void Timer0Init(void)   //1毫秒@12.000MHz
  61          {
  62   1        AUXR &= 0x7F;   //定时器时钟12T模式
  63   1        TMOD &= 0xF0;   //设置定时器模式
  64   1        TL0 = 0x18;   //设置定时初始值
  65   1        TH0 = 0xFC;   //设置定时初始值
  66   1        TF0 = 0;    //清除TF0标志
  67   1        TR0 = 1;    //定时器0开始计时
  68   1        ET0 = 1;    //定时器中断0打开
  69   1        EA = 1;     //总中断打开
  70   1      }
  71          
  72          /* 定时器0中断服务函数 */
  73          void Timer0Server() interrupt 1
  74          {  
  75   1        if(++Key_Slow_Down == 10) Key_Slow_Down = 0;//键盘减速专用
  76   1        if(++Seg_Slow_Down == 500) Seg_Slow_Down = 0;//数码管减速专用
  77   1        if(++Seg_Pos == 8) Seg_Pos = 0;//数码管显示专用
  78   1        Seg_Disp(Seg_Pos,Seg_Buf[Seg_Pos],Seg_Point[Seg_Pos]);
  79   1        Led_Disp(Seg_Pos,ucLed[Seg_Pos]);
  80   1      }
  81          
  82          /* Main */
  83          void main()
  84          {
  85   1        System_Init();
  86   1        Timer0Init();
  87   1        while (1)
  88   1        {
  89   2          Key_Proc();
  90   2          Seg_Proc();
  91   2          Led_Proc();
  92   2        }
  93   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    312    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     34    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
