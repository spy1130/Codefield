C51 COMPILER V9.54   MAIN                                                                  06/01/2023 22:14:51 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver) DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /* 
   2              ´óÄ£°å V5 ¸üĞÂËµÃ÷
   3              
   4              1¡¢ÓÅ»¯¼õËÙÎÊÌâ ¹²ÓÃÒ»¸öÖĞ¶Ï¼õËÙ±äÁ¿ Ê¹ÓÃ±êÖ¾Î»½øĞĞÅĞ¶Ï ±ÜÃâÄ³Ò»Ê±¼äµãÎŞ·¨½øÈë×Ó³ÌĞòµÄÎÊÌâ
   5              
   6              2¡¢ĞÂÔöÊı¾İ¶ÁÈ¡º¯Êı ÊıÂë¹ÜÏÔÊ¾º¯ÊıÖ»×öÊı¾İÏÔÊ¾ ¶ÁÈ¡²¿·Ö·ÖÀë¿ªÀ´ ¼õÉÙ¼õËÙÖÜÆÚ²»Í¬¶Ô×ÊÔ´µÄÀË·Ñ
   7              
   8              3¡¢ĞÂÔöÂË²¨Êı¾İ´¦Àíº¯Êı ½â¾öÖØ¸´¶ÁÈ¡ºóÊı¾İÅ¼¶ûÌø¶¯µÄÎÊÌâ
   9              
  10              ------------------------------------
  11              
  12              ĞÂÔö±äÁ¿ËµÃ÷£º
  13              
  14              Proc_Flag - ×Ó³ÌĞòÖ´ĞĞ±êÖ¾Î» Ä¬ÈÏ 1 -> °´¼ü´¦Àíº¯Êı 2 -> ÊıÂë¹ÜÏÔÊ¾º¯Êı 3 -> ´®¿Ú´¦Àíº¯Êı 4 -> Êı¾İ¶ÁÈ¡º
             -¯Êı£¨Ä£°åÒÔ¶ÁÈ¡³¬Éù²¨ÎªÀı£©
  15              
  16              ------------------------------------
  17              
  18              ĞÂÔöº¯Êı¿âËµÃ÷£º    
  19              
  20              Filtering.h - ÂË²¨´¦Àíº¯Êı×¨ÓÃÍ·ÎÄ¼ş Moving_Average_Filter -> »¬¶¯Æ½¾ùÂË²¨Æ÷ Median_Filter -> ÖĞÖµÂË²¨Æ÷
  21              
  22              Tpis £ºÊı¾İÂË²¨Ö»Ö§³ÖÕûĞÎÊı¾İ Éæ¼°µ½Ğ¡Êı ÇëÏÈ½øĞĞÂË²¨ºó ÔÙ¶ÔÊı¾İ½øĞĞĞ¡Êı»¯´¦Àí
  23              
  24          */
  25          
  26          /* Í·ÎÄ¼şÉùÃ÷Çø */
  27          #include <STC15F2K60S2.H>//µ¥Æ¬»ú¼Ä´æÆ÷×¨ÓÃÍ·ÎÄ¼ş
  28          #include <Init.h>//³õÊ¼»¯µ×²ãÇı¶¯×¨ÓÃÍ·ÎÄ¼ş
  29          #include <Led.h>//Ledµ×²ãÇı¶¯×¨ÓÃÍ·ÎÄ¼ş
  30          #include <Key.h>//°´¼üµ×²ãÇı¶¯×¨ÓÃÍ·ÎÄ¼ş
  31          #include <Seg.h>//ÊıÂë¹Üµ×²ãÇı¶¯×¨ÓÃÍ·ÎÄ¼ş
  32          #include <Uart.h>//´®¿Úµ×²ãÇı¶¯×¨ÓÃÍ·ÎÄ¼ş
  33          #include <stdio.h>//±ê×¼¿âµ×²ãÇı¶¯×¨ÓÃÍ·ÎÄ¼ş
  34          #include <Filtering.h>//Êı¾İÂË²¨Çı¶¯×¨ÓÃÍ·ÎÄ¼ş
  35          #include <ultrasound.h>//³¬Éù²¨µ×²ãÇı¶¯×¨ÓÃÍ·ÎÄ¼ş
  36          #include "onewire.h"
  37          
  38          
  39          /* ±äÁ¿ÉùÃ÷Çø */
  40          unsigned int Proc_Slow_Down;//×Óº¯Êı¼õËÙ±äÁ¿
  41          unsigned char Key_Val,Key_Down,Key_Old,Key_Up;//°´¼ü×¨ÓÃ±äÁ¿
  42          unsigned char Seg_Buf[8] = {10,10,10,10,10,10,10,10};//ÊıÂë¹ÜÏÔÊ¾Êı¾İ´æ·ÅÊı×é
  43          unsigned char Seg_Point[8] = {0,0,0,0,0,0,0,0};//ÊıÂë¹ÜĞ¡ÊıµãÊı¾İ´æ·ÅÊı×é
  44          unsigned char Seg_Pos;//ÊıÂë¹ÜÉ¨Ãè×¨ÓÃ±äÁ¿
  45          idata unsigned char ucLed[8] = {0,0,0,0,0,0,0,0};//LedÏÔÊ¾Êı¾İ´æ·ÅÊı×é
  46          idata unsigned char Uart_Recv[10];//´®¿Ú½ÓÊÕÊı¾İ´¢´æÊı×é Ä¬ÈÏ10¸ö×Ö½Ú Èô½ÓÊÕÊı¾İ½Ï³¤ ¿É¸ü¸Ä×î´ó×Ö½ÚÊı
  47          unsigned char Uart_Recv_Index;//´®¿Ú½ÓÊÕÊı×éÖ¸Õë
  48          unsigned char Proc_Flag;//×Ó³ÌĞòÖ´ĞĞ±êÖ¾Î» 
  49          float Wave_Data;//³¬Éù²¨Êı¾İ´¢´æ±äÁ¿
  50          unsigned char dat;
  51          
  52          /* ¼üÅÌ´¦Àíº¯Êı */
  53          void Key_Proc()
C51 COMPILER V9.54   MAIN                                                                  06/01/2023 22:14:51 PAGE 2   

  54          {
  55   1        if(Proc_Flag != 1) return;
  56   1        Proc_Flag = 0;//¼üÅÌ¼õËÙ³ÌĞò
  57   1      
  58   1        Key_Val = Key_Read();//ÊµÊ±¶ÁÈ¡¼üÂëÖµ
  59   1        Key_Down = Key_Val & (Key_Old ^ Key_Val);//²¶×½°´¼üÏÂ½µÑØ
  60   1        Key_Up = ~Key_Val & (Key_Old ^ Key_Val);//²¶×½°´¼üÉÏ½µÑØ
  61   1        Key_Old = Key_Val;//¸¨ÖúÉ¨Ãè±äÁ¿
  62   1      
  63   1      }
  64          
  65          /* Êı¾İ¶ÁÈ¡º¯Êı */
  66          void Read_Proc()
  67          {
  68   1        unsigned int Filter_Dat[2];//ÂË²¨Ç°Êı¾İ½ÓÊÕ±äÁ¿
  69   1        switch(Proc_Flag)
  70   1        {
  71   2          case 4://³¬Éù²¨¶ÁÈ¡
  72   2            Filter_Dat[0] = rd_temperature();//¶ÁÈ¡³¬Éù²¨Êı¾İ
  73   2            Filter_Dat[1] = Ut_Wave_Data();
  74   2            Wave_Data = Moving_Average_Filter(0,Filter_Dat[0]) / 16.0;//»¬¶¯Æ½¾ùÊıÂË²¨´¦Àí
  75   2            dat = Moving_Average_Filter(1,Filter_Dat[1]);
  76   2            Proc_Flag = 0;//Çå³ı±êÖ¾Î»×´Ì¬
  77   2          break;
  78   2        }
  79   1      }
  80          
  81          /* ĞÅÏ¢´¦Àíº¯Êı */
  82          void Seg_Proc()
  83          {
  84   1        if(Proc_Flag != 2) return;
  85   1        Proc_Flag = 0;//ÊıÂë¹Ü¼õËÙ³ÌĞò
  86   1      
  87   1        Seg_Buf[0] = (int)Wave_Data / 10 % 10;
  88   1        Seg_Buf[1] = (int)Wave_Data % 10;
  89   1        Seg_Buf[2] = (int)(Wave_Data * 10) % 10;
  90   1        
  91   1        Seg_Buf[5] = dat / 100 % 10;
  92   1        Seg_Buf[6] = dat / 10 % 10;
  93   1        Seg_Buf[7] = dat % 10;
  94   1      }
  95          
  96          /* ÆäËûÏÔÊ¾º¯Êı */
  97          void Led_Proc()
  98          {
  99   1        
 100   1      }
 101          
 102          /* ´®¿Ú´¦Àíº¯Êı */
 103          void Uart_Proc()
 104          {
 105   1        if(Proc_Flag != 3) return;
 106   1        Proc_Flag = 0;//´®¿Ú¼õËÙ³ÌĞò
 107   1        
 108   1      }
 109          
 110          /* ¶¨Ê±Æ÷0ÖĞ¶Ï³õÊ¼»¯º¯Êı */
 111          void Timer0Init(void)   //1ºÁÃë@12.000MHz
 112          {
 113   1        AUXR &= 0x7F;   //¶¨Ê±Æ÷Ê±ÖÓ12TÄ£Ê½
 114   1        TMOD &= 0xF0;   //ÉèÖÃ¶¨Ê±Æ÷Ä£Ê½
 115   1        TL0 = 0x18;   //ÉèÖÃ¶¨Ê±³õÊ¼Öµ
C51 COMPILER V9.54   MAIN                                                                  06/01/2023 22:14:51 PAGE 3   

 116   1        TH0 = 0xFC;   //ÉèÖÃ¶¨Ê±³õÊ¼Öµ
 117   1        TF0 = 0;    //Çå³ıTF0±êÖ¾
 118   1        TR0 = 1;    //¶¨Ê±Æ÷0¿ªÊ¼¼ÆÊ±
 119   1        ET0 = 1;    //¶¨Ê±Æ÷ÖĞ¶Ï0´ò¿ª
 120   1        EA = 1;     //×ÜÖĞ¶Ï´ò¿ª
 121   1      }
 122          
 123          /* ¶¨Ê±Æ÷0ÖĞ¶Ï·şÎñº¯Êı */
 124          void Timer0Server() interrupt 1
 125          {  
 126   1        if(++Proc_Slow_Down == 500) Proc_Slow_Down = 0;//×Ó³ÌĞò¼õËÙ×¨ÓÃ
 127   1        
 128   1        if(Proc_Slow_Down % 9 == 0) Proc_Flag = 1;
 129   1          
 130   1        if(Proc_Slow_Down % 49 == 0) Proc_Flag = 2;
 131   1        
 132   1        if(Proc_Slow_Down % 29 == 0) Proc_Flag = 4;
 133   1        
 134   1        
 135   1        switch(Proc_Slow_Down)
 136   1        {
 137   2          //case 50: Proc_Flag = 2; break;
 138   2          case 100: Proc_Flag = 3; break;
 139   2          //case 200: Proc_Flag = 4; break;
 140   2        }
 141   1        
 142   1        if(++Seg_Pos == 8) Seg_Pos = 0;//ÊıÂë¹ÜÏÔÊ¾×¨ÓÃ
 143   1        Seg_Disp(Seg_Pos,Seg_Buf[Seg_Pos],Seg_Point[Seg_Pos]);
 144   1        Led_Disp(Seg_Pos,ucLed[Seg_Pos]);
 145   1      }
 146          
 147          /* ´®¿Ú1ÖĞ¶Ï·şÎñº¯Êı */
 148          void Uart1Server() interrupt 4
 149          {
 150   1        if(RI == 1) //´®¿Ú½ÓÊÕÊı¾İ
 151   1        {
 152   2          Uart_Recv[Uart_Recv_Index] = SBUF;
 153   2          Uart_Recv_Index++;
 154   2          RI = 0;
 155   2        }
 156   1      }
 157          
 158          /* Main */
 159          void main()
 160          {
 161   1        System_Init();
 162   1        Timer0Init();
 163   1        UartInit();
 164   1        while (1)
 165   1        {
 166   2          Key_Proc();
 167   2          Read_Proc();
 168   2          Seg_Proc();
 169   2          Led_Proc();
 170   2          Uart_Proc();
 171   2        }
 172   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    505    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.54   MAIN                                                                  06/01/2023 22:14:51 PAGE 4   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     30       4
   IDATA SIZE       =     18    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
