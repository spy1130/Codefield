C51 COMPILER V9.54   IIC                                                                   01/15/2023 19:32:47 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE IIC
OBJECT MODULE PLACED IN .\Objects\iic.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\Driver\iic.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver) DEBUG OBJECTE
                    -XTEND PRINT(.\Listings\iic.lst) TABS(2) OBJECT(.\Objects\iic.obj)

line level    source

   1          /*
   2            程序说明: IIC总线驱动程序
   3            软件环境: Keil uVision 4.10 
   4            硬件环境: CT107单片机综合实训平台 8051，12MHz
   5            日    期: 2011-8-9
   6          */
   7          
   8          #include "iic.h"
   9          
  10          
  11          #include "intrins.h"
  12          
  13          #define DELAY_TIME 5
  14          
  15          #define Photo_Res_Channel 0x41
  16          #define Adj_Res_Channel 0x43
  17          
  18          
  19          //总线引脚定义
  20          sbit SDA = P2^1;  /* 数据线 */
  21          sbit SCL = P2^0;  /* 时钟线 */
  22          
  23          void IIC_Delay(unsigned char i)
  24          {
  25   1          do{_nop_();}
  26   1          while(i--);        
  27   1      }
  28          
  29          //总线启动条件
  30          void IIC_Start(void)
  31          {
  32   1          SDA = 1;
  33   1          SCL = 1;
  34   1          IIC_Delay(DELAY_TIME);
  35   1          SDA = 0;
  36   1          IIC_Delay(DELAY_TIME);
  37   1          SCL = 0;  
  38   1      }
  39          
  40          //总线停止条件
  41          void IIC_Stop(void)
  42          {
  43   1          SDA = 0;
  44   1          SCL = 1;
  45   1          IIC_Delay(DELAY_TIME);
  46   1          SDA = 1;
  47   1          IIC_Delay(DELAY_TIME);
  48   1      }
  49          
  50          //发送应答
  51          void IIC_SendAck(bit ackbit)
  52          {
  53   1          SCL = 0;
  54   1          SDA = ackbit;           // 0：应答，1：非应答
C51 COMPILER V9.54   IIC                                                                   01/15/2023 19:32:47 PAGE 2   

  55   1          IIC_Delay(DELAY_TIME);
  56   1          SCL = 1;
  57   1          IIC_Delay(DELAY_TIME);
  58   1          SCL = 0; 
  59   1          SDA = 1;
  60   1          IIC_Delay(DELAY_TIME);
  61   1      }
  62          
  63          //等待应答
  64          bit IIC_WaitAck(void)
  65          {
  66   1          bit ackbit;
  67   1        
  68   1          SCL  = 1;
  69   1          IIC_Delay(DELAY_TIME);
  70   1          ackbit = SDA;
  71   1          SCL = 0;
  72   1          IIC_Delay(DELAY_TIME);
  73   1          return ackbit;
  74   1      }
  75          
  76          //通过I2C总线发送数据
  77          void IIC_SendByte(unsigned char byt)
  78          {
  79   1          unsigned char i;
  80   1      
  81   1          for(i=0; i<8; i++)
  82   1          {
  83   2              SCL  = 0;
  84   2              IIC_Delay(DELAY_TIME);
  85   2              if(byt & 0x80) SDA  = 1;
  86   2              else SDA  = 0;
  87   2              IIC_Delay(DELAY_TIME);
  88   2              SCL = 1;
  89   2              byt <<= 1;
  90   2              IIC_Delay(DELAY_TIME);
  91   2          }
  92   1          SCL  = 0;  
  93   1      }
  94          
  95          //从I2C总线上接收数据
  96          unsigned char IIC_RecByte(void)
  97          {
  98   1          unsigned char i, da;
  99   1          for(i=0; i<8; i++)
 100   1          {   
 101   2            SCL = 1;
 102   2        IIC_Delay(DELAY_TIME);
 103   2        da <<= 1;
 104   2        if(SDA) da |= 1;
 105   2        SCL = 0;
 106   2        IIC_Delay(DELAY_TIME);
 107   2          }
 108   1          return da;    
 109   1      }
 110          
 111          
 112          
 113          
 114          
 115          //函数名：ADC转换函数
 116          //入口参数：要进行转换的通道控制位
C51 COMPILER V9.54   IIC                                                                   01/15/2023 19:32:47 PAGE 3   

 117          //返回值：ADC转换的数值
 118          //函数功能：对指定的通道进行ADC转换，函数返回转换的数值
 119          unsigned char Pcf8591_Adc(unsigned char channel_num_contrl)
 120          {
 121   1        unsigned char temp;
 122   1        
 123   1        IIC_Start();//发送开启信号
 124   1        IIC_SendByte(0x90);//选择PCF8591芯片，确定写的模式
 125   1        IIC_WaitAck();//等待PCF8591反馈
 126   1        
 127   1        IIC_SendByte(channel_num_contrl);//确定要转换的通道（顺便，使能DA转换）
 128   1        IIC_WaitAck();//等待PCF8591反馈 
 129   1        
 130   1        IIC_Start();//发送开启信号
 131   1        IIC_SendByte(0x91);//选择PCF8591芯片，确定读的模式
 132   1        IIC_WaitAck();//等待PCF8591反馈 
 133   1          
 134   1        temp = IIC_RecByte();//接收数据
 135   1        IIC_SendAck(1);//选择不应答
 136   1        IIC_Stop();//停止发送
 137   1        
 138   1        return temp;
 139   1      
 140   1      }
 141          
 142          
 143          
 144          //函数名：DAC转换函数
 145          //入口参数：要进行转换的数值
 146          //返回值：无
 147          //函数功能：对入口参数要转换的DA数据进行转换
 148          void Pcf8591_Dac(unsigned char trans_dat)
 149          {
 150   1        IIC_Start();//发送开启信号
 151   1        IIC_SendByte(0x90);//选择PCF8591芯片，确定写的模式
 152   1        IIC_WaitAck();//等待PCF8591反馈
 153   1        
 154   1        IIC_SendByte(0x41);//使能DA转换（随便写通道编号，不影响，主要的功能是使能DA）
 155   1        IIC_WaitAck();//等待PCF8591反馈   
 156   1      
 157   1        IIC_SendByte(trans_dat);//将待转换的数据发送出去
 158   1        IIC_WaitAck();//等待PCF8591反馈 
 159   1        IIC_Stop();//停止发送 
 160   1      
 161   1      }
 162          
 163          
 164          
 165          //函数名：写EEPROM函数
 166          //入口参数：需要写入的字符串，写入的地址(务必为8的倍数)，写入数量
 167          //返回值：无
 168          //函数功能：向EERPOM的某个地址写入字符串中特定数量的字符。
 169          void EEPROM_Write(unsigned char* EEPROM_String, unsigned char addr, unsigned char num)
 170          {
 171   1        IIC_Start();//发送开启信号
 172   1        IIC_SendByte(0xA0);//选择EEPROM芯片，确定写的模式
 173   1        IIC_WaitAck();//等待EEPROM反馈
 174   1        
 175   1        IIC_SendByte(addr);//写入要存储的数据地址
 176   1        IIC_WaitAck();//等待EEPROM反馈    
 177   1      
 178   1        while(num--)
C51 COMPILER V9.54   IIC                                                                   01/15/2023 19:32:47 PAGE 4   

 179   1        {
 180   2          IIC_SendByte(*EEPROM_String++);//将要写入的信息写入
 181   2          IIC_WaitAck();//等待EEPROM反馈    
 182   2          IIC_Delay(200); 
 183   2        }
 184   1        IIC_Stop();//停止发送 
 185   1      }
 186          
 187          
 188          //函数名：读EEPROM函数
 189          //入口参数：读到的数据需要存储的字符串，读取的地址(务必为8的倍数)，读取的数量
 190          //返回值：无
 191          //函数功能：读取EERPOM的某个地址中的数据，并存放在字符串数组中。
 192          void EEPROM_Read(unsigned char* EEPROM_String, unsigned char addr, unsigned char num)
 193          {
 194   1        IIC_Start();//发送开启信号
 195   1        IIC_SendByte(0xA0);//选择EEPROM芯片，确定写的模式
 196   1        IIC_WaitAck();//等待EEPROM反馈
 197   1        
 198   1        IIC_SendByte(addr);//写入要读取的数据地址
 199   1        IIC_WaitAck();//等待EEPROM反馈    
 200   1      
 201   1        IIC_Start();//发送开启信号
 202   1        IIC_SendByte(0xA1);//选择EEPROM芯片，确定读的模式
 203   1        IIC_WaitAck();//等待EEPROM反馈  
 204   1        
 205   1        while(num--)
 206   1        {
 207   2          *EEPROM_String++ = IIC_RecByte();//将要写入的信息写入
 208   2          if(num) IIC_SendAck(0);//发送应答
 209   2            else IIC_SendAck(1);//不应答
 210   2        }
 211   1        
 212   1        IIC_Stop();//停止发送 
 213   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    367    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
