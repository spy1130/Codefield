C51 COMPILER V9.54   MAIN                                                                  02/13/2023 19:27:58 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver) DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /* 头文件声明区 */
   2          #include <STC15F2K60S2.H>//单片机寄存器专用头文件
   3          #include <Init.h>//初始化底层驱动专用头文件
   4          #include <Led.h>//Led底层驱动专用头文件
   5          #include <Key.h>//按键底层驱动专用头文件
   6          #include <Seg.h>//数码管底层驱动专用头文件
   7          #include "onewire.h"
   8          
   9          /* 变量声明区 */
  10          unsigned char Key_Val,Key_Down,Key_Old,Key_Up;//按键专用变量
  11          unsigned char Key_Slow_Down;//按键减速专用变量
  12          unsigned char Seg_Buf[8] = {10,10,10,10,10,10,10,10};//数码管显示数据存放数组
  13          unsigned char Seg_Point[8] = {0,0,0,0,0,0,0,0};//数码管小数点数据存放数组
  14          unsigned char Seg_Pos;//数码管扫描专用变量
  15          unsigned int Seg_Slow_Down;//数码管减速专用变量
  16          unsigned char ucLed[8] = {0,0,0,0,0,0,0,0};//Led显示数据存放数组
  17          unsigned char Work_Time;//工作时间变量
  18          unsigned char Wind_Mode;//风速模式变量 0-睡眠风 1-自然风 2-常风
  19          unsigned char Time_Data[3] = {0,60,120};//设置时间储存数组
  20          unsigned char Time_Data_Index;//时间储存数组指针
  21          bit Seg_Disp_Mode;//数码管显示模式变量 0-风速 1-温度
  22          unsigned int Timer_1000Ms;//一千毫秒计时变量
  23          unsigned char Temperature;//实时温度变量
  24          unsigned char Pwm_Count;
  25          unsigned char Pwm_Level;
  26          
  27          /* 键盘处理函数 */
  28          void Key_Proc()
  29          {
  30   1        if(Key_Slow_Down) return;
  31   1        Key_Slow_Down = 1;//键盘减速程序
  32   1      
  33   1        Key_Val = Key_Read();//实时读取键码值
  34   1        Key_Down = Key_Val & (Key_Old ^ Key_Val);//捕捉按键下降沿
  35   1        Key_Up = ~Key_Val & (Key_Old ^ Key_Val);//捕捉按键上降沿
  36   1        Key_Old = Key_Val;//辅助扫描变量
  37   1      
  38   1      
  39   1        switch(Key_Down)
  40   1        {
  41   2          case 4:
  42   2            if(++Wind_Mode == 3)
  43   2              Wind_Mode = 0;
  44   2          break;
  45   2          case 5:
  46   2            if(++Time_Data_Index == 3)
  47   2              Time_Data_Index = 0;
  48   2            Work_Time = Time_Data[Time_Data_Index];
  49   2          break;
  50   2          case 6:
  51   2            Work_Time = 0;
  52   2          break;
  53   2          case 7:
  54   2            Seg_Disp_Mode ^= 1;
C51 COMPILER V9.54   MAIN                                                                  02/13/2023 19:27:58 PAGE 2   

  55   2          break;
  56   2        }
  57   1      }
  58          
  59          /* 信息处理函数 */
  60          void Seg_Proc()
  61          {
  62   1        if(Seg_Slow_Down) return;
  63   1        Seg_Slow_Down = 1;//数码管减速程序
  64   1        
  65   1        Temperature = rd_temperature();
  66   1        switch(Wind_Mode)
  67   1        {
  68   2          case 0:
  69   2            Pwm_Level = 2;
  70   2          break;
  71   2          case 1:
  72   2            Pwm_Level = 3;
  73   2          break;
  74   2          case 2:
  75   2            Pwm_Level = 7;
  76   2          break;    
  77   2        }
  78   1        
  79   1        
  80   1        if(Seg_Disp_Mode == 0)
  81   1        {
  82   2          Seg_Buf[1] = Wind_Mode + 1;
  83   2          Seg_Buf[0] = Seg_Buf[2] = 11;
  84   2          Seg_Buf[4] = 0;
  85   2          Seg_Buf[5] = Work_Time / 100 % 10;
  86   2          Seg_Buf[6] = Work_Time / 10 % 10;
  87   2          Seg_Buf[7] = Work_Time % 10;
  88   2        }
  89   1        else
  90   1        {
  91   2          Seg_Buf[1] = 4;
  92   2          Seg_Buf[4] = 10;
  93   2          Seg_Buf[5] = Temperature / 10 % 10;
  94   2          Seg_Buf[6] = Temperature % 10;
  95   2          Seg_Buf[7] = 12;    
  96   2        }
  97   1      
  98   1      }
  99          
 100          /* 其他显示函数 */
 101          void Led_Proc()
 102          {
 103   1        unsigned char i;
 104   1        for(i=0;i<3;i++)
 105   1          ucLed[i] = (i == Wind_Mode) * Work_Time;
 106   1      }
 107          
 108          /* 定时器0中断初始化函数 */
 109          void Timer0Init(void)   //1毫秒@12.000MHz
 110          {
 111   1        AUXR &= 0x7F;   //定时器时钟12T模式
 112   1        TMOD &= 0xF0;   //设置定时器模式
 113   1        TL0 = 0x18;   //设置定时初始值
 114   1        TH0 = 0xFC;   //设置定时初始值
 115   1        TF0 = 0;    //清除TF0标志
 116   1        TR0 = 1;    //定时器0开始计时
C51 COMPILER V9.54   MAIN                                                                  02/13/2023 19:27:58 PAGE 3   

 117   1        ET0 = 1;    //定时器中断0打开
 118   1        EA = 1;     //总中断打开
 119   1      }
 120          
 121          void Timer1Init(void)   //100微秒@12.000MHz
 122          {
 123   1        AUXR &= 0xBF;   //定时器时钟12T模式
 124   1        TMOD &= 0x0F;   //设置定时器模式
 125   1        TL1 = 0x9C;   //设置定时初始值
 126   1        TH1 = 0xFF;   //设置定时初始值
 127   1        TF1 = 0;    //清除TF1标志
 128   1        TR1 = 1;    //定时器1开始计时
 129   1        ET1 = 1;
 130   1        EA = 1;
 131   1      }
 132          
 133          
 134          /* 定时器0中断服务函数 */
 135          void Timer0Server() interrupt 1
 136          {  
 137   1        if(++Key_Slow_Down == 10) Key_Slow_Down = 0;//键盘减速专用
 138   1        if(++Seg_Slow_Down == 500) Seg_Slow_Down = 0;//数码管减速专用
 139   1        if(++Seg_Pos == 8) Seg_Pos = 0;//数码管显示专用
 140   1        Seg_Disp(Seg_Pos,Seg_Buf[Seg_Pos],Seg_Point[Seg_Pos]);
 141   1        Led_Disp(Seg_Pos,ucLed[Seg_Pos]);
 142   1        
 143   1        if(Work_Time != 0)
 144   1        {
 145   2          if(++Timer_1000Ms == 1000)
 146   2          {
 147   3            Timer_1000Ms = 0;
 148   3            Work_Time--;
 149   3          }
 150   2        }
 151   1      }
 152          
 153          void Timer1Server() interrupt 3
 154          {
 155   1        if(++Pwm_Count == 10) Pwm_Count = 0;
 156   1        if(Work_Time != 0)
 157   1        {
 158   2          if(Pwm_Count >= Pwm_Count)
 159   2            P34 = 1;
 160   2          else
 161   2            P34 = 0;
 162   2        }
 163   1        else
 164   1          P34 = 0;
 165   1      }
 166          
 167          /* Main */
 168          void main()
 169          {
 170   1        System_Init();
 171   1        Timer1Init();
 172   1        Timer0Init();
 173   1        while (1)
 174   1        {
 175   2          Key_Proc();
 176   2          Seg_Proc();
 177   2          Led_Proc();
 178   2        }
C51 COMPILER V9.54   MAIN                                                                  02/13/2023 19:27:58 PAGE 4   

 179   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    512    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     43    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
