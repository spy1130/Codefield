C51 COMPILER V9.60.7.0   MAIN                                                              03/18/2024 21:38:25 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\Applications\Keil_5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver) DEBUG OBJE
                    -CTEXTEND PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          /* 头文件声明区 */
   2          #include <STC15F2K60S2.H>//单片机寄存器专用头文件
   3          #include <Init.h>//初始化底层驱动专用头文件
   4          #include <Led.h>//Led底层驱动专用头文件
   5          #include <Key.h>//按键底层驱动专用头文件
   6          #include <Seg.h>//数码管底层驱动专用头文件
   7          #include <stdio.h>//标准库底层驱动专用头文件
   8          #include <ds1302.h>
   9          
  10          /* 变量声明区 */
  11          unsigned char Key_Val,Key_Down,Key_Old,Key_Up;//按键专用变量
  12          unsigned char Key_Slow_Down;//按键减速专用变量
  13          unsigned char Seg_Buf[8] = {10,10,10,10,10,10,10,10};//数码管显示数据存放数组
  14          unsigned char Seg_Point[8] = {0,0,0,0,0,0,0,0};//数码管小数点数据存放数组
  15          unsigned char Seg_Pos;//数码管扫描专用变量
  16          unsigned int Seg_Slow_Down;//数码管减速专用变量
  17          unsigned char ucLed[8] = {0,0,0,0,0,0,0,0};//Led显示数据存放数组
  18          unsigned char Led_Mode;//led灯模式
  19          unsigned char ucRTC[3]={0x23,0x59,0x55};//时钟数据数组，初始化23:59:55,BCD码
  20          /* 键盘处理函数 */
  21          void Key_Proc()
  22          {
  23   1              if(Key_Slow_Down) return;
  24   1              Key_Slow_Down = 1;//键盘减速程序
  25   1      
  26   1              Key_Val = Key_Read();//实时读取键码值
  27   1              Key_Down = Key_Val & (Key_Old ^ Key_Val);//捕捉按键下降沿
  28   1              Key_Up = ~Key_Val & (Key_Old ^ Key_Val);//捕捉按键上降沿
  29   1              Key_Old = Key_Val;//辅助扫描变量
  30   1      
  31   1      }
  32          
  33          /* 信息处理函数 */
  34          void Seg_Proc()
  35          {       unsigned char i;
  36   1              if(Seg_Slow_Down) return;
  37   1              Seg_Slow_Down = 1;//数码管减速程序
  38   1              
  39   1              Read_Rtc(ucRTC);
  40   1              for(i=0;i<3;i++)
  41   1              {
  42   2                      Seg_Buf[3*i]=ucRTC[i]/16;
  43   2                      Seg_Buf[3*i+1]=ucRTC[i]%16;
  44   2              }
  45   1              Seg_Buf[2]=Seg_Buf[5]= 11;
  46   1              
  47   1      
  48   1      }
  49          
  50          /* 其他显示函数 */
  51          void Led_Proc()
  52          {
  53   1              
  54   1      }
C51 COMPILER V9.60.7.0   MAIN                                                              03/18/2024 21:38:25 PAGE 2   

  55          
  56          
  57          
  58          /* 定时器0中断初始化函数 */
  59          void Timer0Init(void)           //1毫秒@12.000MHz
  60          {
  61   1              AUXR &= 0x7F;           //定时器时钟12T模式
  62   1              TMOD &= 0xF0;           //设置定时器模式
  63   1              TL0 = 0x18;             //设置定时初始值
  64   1              TH0 = 0xFC;             //设置定时初始值
  65   1              TF0 = 0;                //清除TF0标志
  66   1              TR0 = 1;                //定时器0开始计时
  67   1              ET0 = 1;    //定时器中断0打开
  68   1              EA = 1;     //总中断打开
  69   1      }
  70          
  71          /* 定时器0中断服务函数 */
  72          void Timer0Server() interrupt 1
  73          {  
  74   1              if(++Key_Slow_Down == 10) Key_Slow_Down = 0;//键盘减速专用
  75   1              if(++Seg_Slow_Down == 500) Seg_Slow_Down = 0;//数码管减速专用
  76   1              if(++Seg_Pos == 8) Seg_Pos = 0;//数码管显示专用
  77   1              Seg_Disp(Seg_Pos,Seg_Buf[Seg_Pos],Seg_Point[Seg_Pos]);
  78   1              Led_Disp(Seg_Pos,ucLed[Seg_Pos]);
  79   1      }
  80          
  81          
  82          
  83          /* Main */
  84          void main()
  85          {
  86   1              System_Init();
  87   1              Timer0Init();
  88   1              Set_Rtc(ucRTC);
  89   1              while (1)
  90   1              {
  91   2                      Key_Proc();
  92   2                      Seg_Proc();
  93   2                      Led_Proc();
  94   2              }
  95   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    284    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     36    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
