C51 COMPILER V9.59.0.0   MAIN                                                              03/12/2024 10:13:41 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver) DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "main.h"
   2          /* LED显示 */
   3          uchar ucLed[8] = {0, 0, 0, 0, 0, 0, 0, 0};
   4          
   5          /* 数码管显示 */
   6          uchar Seg_Slow_Down;                                // 数码管减速
   7          uchar Seg_Buf[8] = {10, 10, 10, 10, 10, 10, 10, 10}; // 数码管显示的值
   8          uchar Seg_Pos;                                      // 数码管指示
   9          uchar Seg_Point[8] = {0, 0, 0, 0, 0, 0, 0, 0};      // 某位是否显示小数点
  10          
  11          /* 键盘方面 */
  12          uchar Key_Slow_Down;
  13          
  14          /* 数据 */
  15          uchar read_data;
  16          uchar write_data;
  17          /* 键盘处理函数 */
  18          void Key_Proc()
  19          {
  20   1          static uchar Key_Val, Key_Down, Key_Up, Key_Old;
  21   1          if (Key_Slow_Down)
  22   1              return;
  23   1          Key_Slow_Down = 1;
  24   1      
  25   1          Key_Val = Key_Read();
  26   1          Key_Down = Key_Val & (Key_Old ^ Key_Val);
  27   1          Key_Up = ~Key_Val & (Key_Old ^ Key_Val);
  28   1          Key_Old = Key_Val;
  29   1          if (Key_Down > 4)
  30   1              write_data = Key_Down;
  31   1          if (Key_Down == 4)
  32   1          {
  33   2              EEPROM_Write(&write_data, 0, 1);
  34   2          }
  35   1      }
  36          /* 数码管处理函数 */
  37          void Seg_Proc()
  38          {
  39   1          if (Seg_Slow_Down)
  40   1              return;
  41   1          Seg_Slow_Down = 1;
  42   1          Seg_Buf[0] = read_data / 100 % 10;
  43   1          Seg_Buf[1] = read_data / 10 % 10;
  44   1          Seg_Buf[2] = read_data % 10;
  45   1          Seg_Buf[5] = write_data / 100 % 10;
  46   1          Seg_Buf[6] = write_data / 10 % 10;
  47   1          Seg_Buf[7] = write_data % 10;
  48   1      }
  49          
  50          /* LED处理函数 */
  51          void Led_Proc()
  52          {
  53   1      }
  54          
C51 COMPILER V9.59.0.0   MAIN                                                              03/12/2024 10:13:41 PAGE 2   

  55          /* 定时器0中断初始化 */
  56          void Timer0_Init(void) // 1毫秒@12.000MHz
  57          {
  58   1          AUXR &= 0x7F; // 定时器时钟12T模式
  59   1          TMOD &= 0xF0; // 设置定时器模式
  60   1          TL0 = 0x18;   // 设置定时初始值
  61   1          TH0 = 0xFC;   // 设置定时初始值
  62   1          TF0 = 0;      // 清除TF0标志
  63   1          TR0 = 1;      // 定时器0开始计时
  64   1          ET0 = 1;
  65   1          EA = 1;
  66   1      }
  67          
  68          /* 定时器0中断函数 */
  69          void Timer0_ISR(void) interrupt 1
  70          {
  71   1          if (++Key_Slow_Down == 10)
  72   1              Key_Slow_Down = 0;
  73   1          if (++Seg_Slow_Down == 500)
  74   1              Seg_Slow_Down = 0;
  75   1          if (++Seg_Pos == 8)
  76   1              Seg_Pos = 0;
  77   1          Seg_Disp(Seg_Pos, Seg_Buf[Seg_Pos], Seg_Point[Seg_Pos]);
  78   1          Led_Disp(Seg_Pos, ucLed[Seg_Pos]);
  79   1      }
  80          
  81          void main()
  82          {
  83   1          System_Init();
  84   1          Timer0_Init();
  85   1          EEPROM_Read(&read_data, 0, 1);
  86   1          while (1)
  87   1          {
  88   2              Key_Proc();
  89   2              Seg_Proc();
  90   2              Led_Proc();
  91   2          }
  92   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    319    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     33    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
