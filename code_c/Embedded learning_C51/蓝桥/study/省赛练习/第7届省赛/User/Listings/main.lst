C51 COMPILER V9.60.7.0   MAIN                                                              03/30/2024 20:45:08 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\Applications\Keil_5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver) DEBUG OBJE
                    -CTEXTEND PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          /* 头文件声明区 */
   2          #include <STC15F2K60S2.H>//单片机寄存器专用头文件
   3          #include <Init.h>//初始化底层驱动专用头文件
   4          #include <Led.h>//Led底层驱动专用头文件
   5          #include <Key.h>//按键底层驱动专用头文件
   6          #include <Seg.h>//数码管底层驱动专用头文件
   7          #include <stdio.h>//标准库底层驱动专用头文件
   8          #include "onewire.h"
   9          
  10          /* 变量声明区 */
  11          unsigned char Key_Val,Key_Down,Key_Old,Key_Up;//按键专用变量
  12          unsigned char Key_Slow_Down;//按键减速专用变量
  13          unsigned char Seg_Buf[8] = {10,10,10,10,10,10,10,10};//数码管显示数据存放数组
  14          unsigned char Seg_Point[8] = {0,0,0,0,0,0,0,0};//数码管小数点数据存放数组
  15          unsigned char Seg_Pos;//数码管扫描专用变量
  16          unsigned int Seg_Slow_Down;//数码管减速专用变量
  17          unsigned char ucLed[8] = {0,0,0,0,0,0,0,0};//Led显示数据存放数组
  18          unsigned char Work_Time;//工作时间变量
  19          unsigned char Wind_Mode;//风速 0-睡眠风 1-自然风 2- 常风
  20          unsigned char Time_Data[3] = {0,60,120};//设置时间储存数组
  21          unsigned char Time_Data_Index;//时间储存数组指针
  22          bit Seg_Disp_Mode;//0-风速 1-温度
  23          unsigned int Timer_1000Ms;//一千毫秒计时变量
  24          unsigned char Temperature;//实时温度变量
  25          unsigned char Pwm_Count;
  26          unsigned char Pwm_Level;
  27          
  28          
  29          /* 键盘处理函数 */
  30          void Key_Proc()
  31          {
  32   1              if(Key_Slow_Down) return;
  33   1              Key_Slow_Down = 1;//键盘减速程序
  34   1      
  35   1              Key_Val = Key_Read();//实时读取键码值
  36   1              Key_Down = Key_Val & (Key_Old ^ Key_Val);//捕捉按键下降沿
  37   1              Key_Up = ~Key_Val & (Key_Old ^ Key_Val);//捕捉按键上降沿
  38   1              Key_Old = Key_Val;//辅助扫描变量
  39   1              
  40   1              switch(Key_Down)
  41   1              {
  42   2                      case 4:
  43   2                              if(++Wind_Mode == 3)
  44   2                                      Wind_Mode = 0;
  45   2                      break;
  46   2                      case 5:
  47   2                              if(++Time_Data_Index == 3)
  48   2                                      Time_Data_Index = 0;
  49   2                              Work_Time = Time_Data[Time_Data_Index];
  50   2                      break;
  51   2                      case 6:
  52   2                              Work_Time = 0;
  53   2                      break;
  54   2                      case 7:
C51 COMPILER V9.60.7.0   MAIN                                                              03/30/2024 20:45:08 PAGE 2   

  55   2                              Seg_Disp_Mode ^= 1;
  56   2                      break;
  57   2              }
  58   1      
  59   1      }
  60          
  61          /* 信息处理函数 */
  62          void Seg_Proc()
  63          {
  64   1              if(Seg_Slow_Down) return;
  65   1              Seg_Slow_Down = 1;//数码管减速程序
  66   1              Temperature = rd_temperature();
  67   1              switch(Wind_Mode)
  68   1              {
  69   2                      case 0:
  70   2                              Pwm_Level = 2;
  71   2                      break;
  72   2                      case 1:
  73   2                              Pwm_Level = 3;
  74   2                      break;
  75   2                      case 2:
  76   2                              Pwm_Level = 7;
  77   2                      break;          
  78   2              }
  79   1              if(Seg_Disp_Mode == 0)
  80   1              {
  81   2                      Seg_Buf[1] = Wind_Mode + 1;
  82   2                      Seg_Buf[0] = Seg_Buf[2] = 11;
  83   2                      Seg_Buf[4] = 0;
  84   2                      Seg_Buf[5] = Work_Time / 100 % 10;
  85   2                      Seg_Buf[6] = Work_Time / 10 % 10;
  86   2                      Seg_Buf[7] = Work_Time % 10;
  87   2              }
  88   1              else
  89   1              {
  90   2                      Seg_Buf[1] = 4;
  91   2                      Seg_Buf[4] = 10;
  92   2                      Seg_Buf[5] = Temperature / 10 % 10;
  93   2                      Seg_Buf[6] = Temperature % 10;
  94   2                      Seg_Buf[7] = 12;                
  95   2              }
  96   1      }
  97          
  98          /* 其他显示函数 */
  99          void Led_Proc()
 100          {
 101   1              unsigned char i;
 102   1              for(i=0;i<3;i++)
 103   1                      ucLed[i] = (i == Wind_Mode) * Work_Time;//只要Work_Time不为0就可以
 104   1      }
 105          
 106          
 107          /* 定时器0中断初始化函数 */
 108          void Timer0Init(void)           //1毫秒@12.000MHz
 109          {
 110   1              AUXR &= 0x7F;           //定时器时钟12T模式
 111   1              TMOD &= 0xF0;           //设置定时器模式
 112   1              TL0 = 0x18;             //设置定时初始值
 113   1              TH0 = 0xFC;             //设置定时初始值
 114   1              TF0 = 0;                //清除TF0标志
 115   1              TR0 = 1;                //定时器0开始计时
 116   1              ET0 = 1;    //定时器中断0打开
C51 COMPILER V9.60.7.0   MAIN                                                              03/30/2024 20:45:08 PAGE 3   

 117   1              EA = 1;     //总中断打开
 118   1      }
 119          void Timer1Init(void)           //100微秒@12.000MHz
 120          {
 121   1              AUXR &= 0xBF;           //定时器时钟12T模式
 122   1              TMOD &= 0x0F;           //设置定时器模式
 123   1              TL1 = 0x9C;             //设置定时初始值
 124   1              TH1 = 0xFF;             //设置定时初始值
 125   1              TF1 = 0;                //清除TF1标志
 126   1              TR1 = 1;                //定时器1开始计时
 127   1              ET1 = 1;
 128   1              EA = 1;
 129   1      }
 130          
 131          /* 定时器0中断服务函数 */
 132          void Timer0Server() interrupt 1
 133          {  
 134   1              if(++Key_Slow_Down == 10) Key_Slow_Down = 0;//键盘减速专用
 135   1              if(++Seg_Slow_Down == 500) Seg_Slow_Down = 0;//数码管减速专用
 136   1              if(++Seg_Pos == 8) Seg_Pos = 0;//数码管显示专用
 137   1              Seg_Disp(Seg_Pos,Seg_Buf[Seg_Pos],Seg_Point[Seg_Pos]);
 138   1              Led_Disp(Seg_Pos,ucLed[Seg_Pos]);
 139   1              if(Work_Time != 0)
 140   1              {
 141   2                      if(++Timer_1000Ms == 1000)
 142   2                      {
 143   3                              Timer_1000Ms = 0;
 144   3                              Work_Time--;
 145   3                      }
 146   2              }
 147   1      }
 148          
 149          void Timer1Server() interrupt 3
 150          {
 151   1              if(++Pwm_Count == 10) Pwm_Count = 0;
 152   1              if(Work_Time != 0)
 153   1              {
 154   2                      if(Pwm_Level >= Pwm_Count)
 155   2                              P34 = 1;
 156   2                      else
 157   2                              P34 = 0;
 158   2              }
 159   1              else
 160   1                      P34 = 0;
 161   1      }
 162          
 163          /* Main */
 164          void main()
 165          {
 166   1              System_Init();
 167   1              Timer0Init();
 168   1              Timer1Init();
 169   1              while (1)
 170   1              {
 171   2                      Key_Proc();
 172   2                      Seg_Proc();
 173   2                      Led_Proc();
 174   2                      
 175   2              }
 176   1      }


C51 COMPILER V9.60.7.0   MAIN                                                              03/30/2024 20:45:08 PAGE 4   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    511    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     43    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
