C51 COMPILER V9.54   MAIN                                                                  02/28/2023 17:26:35 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver) DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /* 头文件声明区 */
   2          #include <STC15F2K60S2.H>//单片机寄存器专用头文件
   3          #include <Init.h>//初始化底层驱动专用头文件
   4          #include <Led.h>//Led底层驱动专用头文件
   5          #include <Key.h>//按键底层驱动专用头文件
   6          #include <Seg.h>//数码管底层驱动专用头文件
   7          #include <Uart.h>//串口底层驱动专用头文件
   8          #include "onewire.h"
   9          #include <stdio.h>
  10          
  11          
  12          /* 变量声明区 */
  13          unsigned char Key_Val,Key_Down,Key_Old,Key_Up;//按键专用变量
  14          unsigned char Key_Slow_Down;//按键减速专用变量
  15          unsigned char Seg_Buf[8] = {10,10,10,10,10,10,10,10};//数码管显示数据存放数组
  16          unsigned char Seg_Point[8] = {0,0,0,0,0,0,0,0};//数码管小数点数据存放数组
  17          unsigned char Seg_Pos;//数码管扫描专用变量
  18          unsigned int Seg_Slow_Down;//数码管减速专用变量
  19          unsigned char ucLed[8] = {0,0,0,0,0,0,0,0};//Led显示数据存放数组
  20          unsigned char Uart_Slow_Down;//串口减速专用变量
  21          unsigned char Uart_Recv[10];//串口接收数据储存数组 默认10个字节 若接收数据较长 可更改最大字节数
  22          unsigned char Uart_Recv_Index;//串口接收数组指针
  23          unsigned char Uart_Send[10];//串口接收数据储存数组 默认10个字节 若发送数据较长 可更改最大字节数
  24          unsigned char dat;
  25          float t;
  26          
  27          /* 键盘处理函数 */
  28          void Key_Proc()
  29          {
  30   1        if(Key_Slow_Down) return;
  31   1        Key_Slow_Down = 1;//键盘减速程序
  32   1      
  33   1        Key_Val = Key_Read();//实时读取键码值
  34   1        Key_Down = Key_Val & (Key_Old ^ Key_Val);//捕捉按键下降沿
  35   1        Key_Up = ~Key_Val & (Key_Old ^ Key_Val);//捕捉按键上降沿
  36   1        Key_Old = Key_Val;//辅助扫描变量
  37   1      
  38   1        switch(Key_Down)
  39   1        {
  40   2          case 4:
  41   2            sprintf(Uart_Send,"T = %.2f\r\n",t);
  42   2            Uart_Send_String(Uart_Send);
  43   2          break;
  44   2        }
  45   1      }
  46          
  47          /* 信息处理函数 */
  48          void Seg_Proc()
  49          {
  50   1        if(Seg_Slow_Down) return;
  51   1        Seg_Slow_Down = 1;//数码管减速程序
  52   1      
  53   1        t = rd_temperature();
  54   1        
C51 COMPILER V9.54   MAIN                                                                  02/28/2023 17:26:35 PAGE 2   

  55   1        Seg_Buf[0] = dat / 10;
  56   1        Seg_Buf[1] = dat % 10;
  57   1      }
  58          
  59          /* 其他显示函数 */
  60          void Led_Proc()
  61          {
  62   1        
  63   1      }
  64          
  65          /* 串口处理函数 */
  66          void Uart_Proc()
  67          {
  68   1        if(Uart_Slow_Down) return;
  69   1        Uart_Slow_Down = 1;//串口减速程序 
  70   1        
  71   1        if(Uart_Recv_Index == 6)
  72   1        {
  73   2          if(Uart_Recv[0] == 'L' && Uart_Recv[1] == 'e' && Uart_Recv[2] == 'd' && Uart_Recv[4] == '=')
  74   2            ucLed[Uart_Recv[3] - 48] = Uart_Recv[5] - 48;
  75   2          Uart_Recv_Index = 0;
  76   2        }
  77   1      }
  78          
  79          /* 定时器0中断初始化函数 */
  80          void Timer0Init(void)   //1毫秒@12.000MHz
  81          {
  82   1        AUXR &= 0x7F;   //定时器时钟12T模式
  83   1        TMOD &= 0xF0;   //设置定时器模式
  84   1        TL0 = 0x18;   //设置定时初始值
  85   1        TH0 = 0xFC;   //设置定时初始值
  86   1        TF0 = 0;    //清除TF0标志
  87   1        TR0 = 1;    //定时器0开始计时
  88   1        ET0 = 1;    //定时器中断0打开
  89   1        EA = 1;     //总中断打开
  90   1      }
  91          
  92          /* 定时器0中断服务函数 */
  93          void Timer0Server() interrupt 1
  94          {  
  95   1        if(++Key_Slow_Down == 10) Key_Slow_Down = 0;//键盘减速专用
  96   1        if(++Seg_Slow_Down == 500) Seg_Slow_Down = 0;//数码管减速专用
  97   1        if(++Uart_Slow_Down == 200) Uart_Slow_Down = 0;//串口减速专用
  98   1        if(++Seg_Pos == 8) Seg_Pos = 0;//数码管显示专用
  99   1        Seg_Disp(Seg_Pos,Seg_Buf[Seg_Pos],Seg_Point[Seg_Pos]);
 100   1        Led_Disp(Seg_Pos,ucLed[Seg_Pos]);
 101   1      }
 102          
 103          /* 串口1中断服务函数 */
 104          void Uart1Server() interrupt 4
 105          {
 106   1        if(RI == 1) //串口接收数据
 107   1        {
 108   2          Uart_Recv[Uart_Recv_Index] = SBUF;
 109   2          Uart_Recv_Index++;
 110   2          RI = 0;
 111   2        }
 112   1      }
 113          
 114          /* Main */
 115          void main()
 116          {
C51 COMPILER V9.54   MAIN                                                                  02/28/2023 17:26:35 PAGE 3   

 117   1        System_Init();
 118   1        Timer0Init();
 119   1        UartInit();
 120   1        while (1)
 121   1        {
 122   2          Key_Proc();
 123   2          Seg_Proc();
 124   2          Led_Proc();
 125   2          Uart_Proc();
 126   2        }
 127   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    386    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     59    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
