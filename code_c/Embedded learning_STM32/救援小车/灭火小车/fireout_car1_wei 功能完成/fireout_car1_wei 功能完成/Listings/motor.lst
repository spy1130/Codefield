C51 COMPILER V9.60.0.0   MOTOR                                                             10/03/2023 15:31:00 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MOTOR
OBJECT MODULE PLACED IN .\Objects\motor.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE motor.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\mot
                    -or.lst) TABS(2) OBJECT(.\Objects\motor.obj)

line level    source

   1          #include "motor.h"
   2          
   3          sbit Lefe_Motor = P1^1;
   4          sbit Right_Motor = P1^3;
   5          
   6          
   7          /*1代表需要装载高电平初值 2代表需要装载低电平初值*/
   8          unsigned char Load_Left_flag = 1; 
   9          unsigned char Load_Right_flag = 1;
  10          
  11          unsigned char flag_100ms = 5;
  12          
  13          volatile unsigned int i = 0;
  14          
  15          unsigned int Left_H_Speed = 1335;
  16          unsigned int Left_L_Speed = 18330 - 1335;
  17          
  18          unsigned int Right_H_Speed = 1335;
  19          unsigned int Right_L_Speed = 18330 - 1335;
  20          
  21          
  22          void Timer1_Load_RightMotor(unsigned int RightspeedVal)
  23          {
  24   1        RightspeedVal = 65536 - RightspeedVal;
  25   1        
  26   1        TH1 = RightspeedVal >> 8; 
  27   1        TL1 = RightspeedVal & 0xff; 
  28   1      
  29   1        TR1 = 1;    //启动定时器
  30   1      }
  31          
  32          
  33          void Timer0_Load_LeftMotor(unsigned int LeftspeedVal)
  34          {
  35   1        LeftspeedVal = 65536 - LeftspeedVal;
  36   1        
  37   1        TH0 = LeftspeedVal >> 8;  
  38   1        TL0 = LeftspeedVal & 0xff;  
  39   1      
  40   1        TR0 = 1;    //启动定时器
  41   1      }
  42          
  43          
  44          
  45          void Timer0() interrupt 1
  46          {
  47   1        TR0 = 0;//定时器0停止计时
  48   1          
  49   1        switch(Load_Left_flag)
  50   1        {
  51   2          case(1):
  52   2          {
  53   3            Lefe_Motor = 1;
  54   3            Load_Left_flag = 2;
C51 COMPILER V9.60.0.0   MOTOR                                                             10/03/2023 15:31:00 PAGE 2   

  55   3            Timer0_Load_LeftMotor(Left_H_Speed);
  56   3            i++;
  57   3            break;
  58   3          }
  59   2          case(2):
  60   2          {
  61   3            Lefe_Motor = 0;
  62   3            Load_Left_flag = 1;
  63   3            Timer0_Load_LeftMotor(Left_L_Speed);
  64   3            break;
  65   3          }
  66   2          default:break;
  67   2        }
  68   1      }
  69          
  70          void Timer1() interrupt 3
  71          {
  72   1        TR1 = 0;//定时器1停止计时
  73   1        
  74   1        switch(Load_Right_flag)
  75   1        {
  76   2          case(1):
  77   2          {
  78   3            Right_Motor = 1;
  79   3            Load_Right_flag = 2;
  80   3            Timer1_Load_RightMotor(Right_H_Speed);
  81   3            break;
  82   3          }
  83   2          case(2):
  84   2          {
  85   3            Right_Motor = 0;
  86   3            Load_Right_flag = 1;
  87   3            Timer1_Load_RightMotor(Right_L_Speed);
  88   3            break;
  89   3          }
  90   2          default:break;
  91   2        }
  92   1      }
  93          
  94          void Timer0Init()   //定时器0初始化 10us
  95          {
  96   1        TMOD |= 0x01; //设置定时器0模式
  97   1        TH0 = 0XFF;   //设置定时初值
  98   1        TL0=  0XF6;   //设置定时初值
  99   1        TF0 = 0;    //清除TF1标志
 100   1        TR0 = 1;    //定时器1开始计时
 101   1        ET0 = 1;        //打开定时器0中断
 102   1        EA  = 1;        //打开总中断
 103   1      }
 104          
 105          void Timer1Init()      //定时器1初始化 20us
 106          {
 107   1        TMOD |= 0x10; //设置定时器1模式
 108   1        TH1 = 0XFF;        //设置定时初值
 109   1        TL1 = 0XEC;        //设置定时初值
 110   1        TF1 = 0;
 111   1        TR1 = 1;
 112   1        ET1 = 1;
 113   1        EA  = 1;
 114   1      }
 115          

C51 COMPILER V9.60.0.0   MOTOR                                                             10/03/2023 15:31:00 PAGE 3   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    211    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     13    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
